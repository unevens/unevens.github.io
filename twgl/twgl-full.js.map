{"version":3,"sources":["webpack://twgl/webpack/universalModuleDefinition","webpack://twgl/webpack/bootstrap","webpack://twgl/./src/attributes.js","webpack://twgl/./src/draw.js","webpack://twgl/./src/framebuffers.js","webpack://twgl/./src/helper.js","webpack://twgl/./src/m4.js","webpack://twgl/./src/primitives.js","webpack://twgl/./src/programs.js","webpack://twgl/./src/textures.js","webpack://twgl/./src/twgl-full.js","webpack://twgl/./src/twgl.js","webpack://twgl/./src/typedarrays.js","webpack://twgl/./src/utils.js","webpack://twgl/./src/v3.js","webpack://twgl/./src/vertex-arrays.js"],"names":["STATIC_DRAW","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","BUFFER_SIZE","BYTE","UNSIGNED_BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","gl","undefined","defaults","attribPrefix","setAttributePrefix","prefix","setDefaults","newDefaults","helper","copyExistingProperties","setBufferFromTypedArray","type","buffer","array","drawType","bindBuffer","bufferData","createBufferFromTypedArray","typedArray","isBuffer","createBuffer","isIndices","name","getNormalizationForTypedArrayType","typedArrayType","Int8Array","Uint8Array","getArray","length","data","texcoordRE","colorRE","guessNumComponentsFromName","numComponents","test","Error","getNumComponents","arrayName","numValues","size","makeTypedArray","typedArrays","isArrayBuffer","Array","isArray","Type","typedArrayTypeFromGLTypeOrTypedArrayCtor","Uint16Array","Float32Array","glTypeFromGLTypeOrTypedArrayType","glTypeOrTypedArrayCtor","getGLTypeForTypedArrayType","getTypedArrayTypeForGLType","attribBufferFromBuffer","arrayType","attribBufferFromSize","numBytes","BYTES_PER_ELEMENT","attribBufferFromArrayLike","constructor","getGLTypeForTypedArray","createAttribsFromArrays","arrays","attribs","Object","keys","forEach","attribName","attrib","value","fn","WebGLBuffer","normalization","normalize","stride","offset","divisor","setAttribInfoBufferFromArray","attribInfo","bufferSubData","getBytesPerValueForGLType","positionKeys","getNumElementsFromNonIndexedArrays","key","ii","numElements","getNumElementsFromAttributes","getBufferParameter","bytesPerValue","totalElements","createBufferInfoFromArrays","srcBufferInfo","newAttribs","bufferInfo","assign","indices","newIndices","elementType","createBufferFromArray","createBuffersFromArrays","buffers","TRIANGLES","drawBufferInfo","count","instanceCount","drawElementsInstanced","drawElements","drawArraysInstanced","drawArrays","drawObjectList","objectsToDraw","lastUsedProgramInfo","lastUsedBufferInfo","object","active","programInfo","vertexArrayInfo","bindBuffers","useProgram","program","vertexArrayObject","bindVertexArray","programs","setBuffersAndAttributes","setUniforms","uniforms","FRAMEBUFFER","RENDERBUFFER","TEXTURE_2D","DEPTH_COMPONENT","RGBA","DEPTH_COMPONENT24","DEPTH_COMPONENT32F","DEPTH24_STENCIL8","DEPTH32F_STENCIL8","RGBA4","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX","STENCIL_INDEX8","DEPTH_STENCIL","COLOR_ATTACHMENT0","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","CLAMP_TO_EDGE","LINEAR","defaultAttachments","format","min","wrap","attachmentsByFormat","getAttachmentPointForFormat","internalFormat","renderbufferFormats","isRenderbufferFormat","MAX_COLOR_ATTACHMENT_POINTS","isColorAttachmentPoint","attachmentPoint","createFramebufferInfo","attachments","width","height","target","fb","createFramebuffer","bindFramebuffer","drawingBufferWidth","drawingBufferHeight","usedColorAttachmentsPoints","framebufferInfo","framebuffer","attachmentOptions","i","attachment","samples","push","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","renderbufferStorage","textureOptions","auto","minMag","mag","wrapS","wrapT","textures","createTexture","isRenderbuffer","framebufferRenderbuffer","isTexture","layer","framebufferTextureLayer","level","framebufferTexture2D","drawBuffers","resizeFramebufferInfo","ndx","resizeTexture","bindFramebufferInfo","viewport","copyNamedProperties","names","src","dst","hasOwnProperty","error","console","warn","isTypeWeakMaps","Map","isType","weakMap","get","WeakMap","set","isOfType","s","prototype","toString","call","substring","t","WebGLRenderbuffer","isShader","WebGLShader","WebGLTexture","isSampler","WebGLSampler","MatType","setDefaultType","ctor","oldType","negate","m","create","fill","copy","identity","transpose","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","tmp_0","tmp_1","tmp_2","tmp_3","tmp_4","tmp_5","tmp_6","tmp_7","tmp_8","tmp_9","tmp_10","tmp_11","tmp_12","tmp_13","tmp_14","tmp_15","tmp_16","tmp_17","tmp_18","tmp_19","tmp_20","tmp_21","tmp_22","tmp_23","t0","t1","t2","t3","d","multiply","a","b","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b10","b11","b12","b13","b20","b21","b22","b23","b30","b31","b32","b33","setTranslation","v","getTranslation","v3","getAxis","axis","off","setAxis","perspective","fieldOfViewYInRadians","aspect","zNear","zFar","f","Math","tan","PI","rangeInv","ortho","left","right","bottom","top","near","far","frustum","dx","dy","dz","xAxis","yAxis","zAxis","lookAt","eye","up","subtract","cross","translation","translate","v0","v1","v2","rotationX","angleInRadians","c","cos","sin","rotateX","rotationY","rotateY","rotationZ","rotateZ","axisRotation","x","y","z","n","sqrt","xx","yy","zz","oneMinusCosine","axisRotate","r00","r01","r02","r10","r11","r12","r20","r21","r22","scaling","scale","transformPoint","transformDirection","transformNormal","mi","attributes","getArray_","getNumComponents_","augmentTypedArray","cursor","arguments","jj","reset","opt_index","defineProperty","createAugmentedTypedArray","opt_type","allButIndices","deindexVertices","vertices","newVertices","expandToUnindexed","channel","srcBuffer","dstBuffer","filter","flattenNormals","normals","normal","numNormals","nax","nay","naz","nbx","nby","nbz","ncx","ncy","ncz","nx","ny","nz","applyFuncToV3Array","matrix","len","tmp","reorientDirections","m4","reorientNormals","reorientPositions","reorientVertices","indexOf","createXYQuadVertices","xOffset","yOffset","position","texcoord","createPlaneVertices","depth","subdivisionsWidth","subdivisionsDepth","numVertices","positions","texcoords","u","numVertsAcross","createSphereVertices","radius","subdivisionsAxis","subdivisionsHeight","opt_startLatitudeInRadians","opt_endLatitudeInRadians","opt_startLongitudeInRadians","opt_endLongitudeInRadians","latRange","longRange","theta","phi","sinTheta","cosTheta","sinPhi","cosPhi","ux","uy","uz","numVertsAround","CUBE_FACE_INDICES","createCubeVertices","k","cornerVertices","faceNormals","uvCoords","faceIndices","uv","createTruncatedConeVertices","bottomRadius","topRadius","radialSubdivisions","verticalSubdivisions","opt_topCap","opt_bottomCap","topCap","bottomCap","extra","vertsAroundEdge","slant","atan2","cosSlant","sinSlant","start","end","ringRadius","expandRLEData","rleData","padding","runLength","element","slice","apply","create3DFVertices","colors","numVerts","color","createCrescentVertices","verticalRadius","outerRadius","innerRadius","thickness","subdivisionsDown","startOffset","endOffset","subdivisionsThick","offsetRange","lerp","createArc","arcRadius","normalMult","normalAdd","uMult","uAdd","uBack","xBack","angle","px","py","pz","add","createSurface","leftArcOffset","rightArcOffset","numVerticesDown","createCylinderVertices","createTorusVertices","bodySubdivisions","startAngle","endAngle","range","radialParts","bodyParts","sliceAngle","sliceSin","ring","ringAngle","xSin","zCos","nextRingIndex","nextSliceIndex","createDiscVertices","divisions","stacks","stackPower","firstIndex","radiusSpan","pointsPerStack","stack","stackRadius","pow","randInt","random","makeRandomVertexColors","options","vColors","rand","numVertsPerColor","vertsPerColor","numSets","createBufferFunc","createBufferInfoFunc","arraySpecPropertyNames","copyElements","dstNdx","createArrayOfSameType","srcArray","arraySrc","newArray","newArraySpec","concatVertices","arrayOfArrays","baseName","arrayInfo","getLengthOfCombinedArrays","arraySpec","spec","copyArraysToNewArray","base","baseIndex","newArrays","info","duplicateVertices","create3DFBufferInfo","create3DFBuffers","createCubeBufferInfo","createCubeBuffers","createPlaneBufferInfo","createPlaneBuffers","createSphereBufferInfo","createSphereBuffers","createTruncatedConeBufferInfo","createTruncatedConeBuffers","createXYQuadBufferInfo","createXYQuadBuffers","createCrescentBufferInfo","createCrescentBuffers","createCylinderBufferInfo","createCylinderBuffers","createTorusBufferInfo","createTorusBuffers","createDiscBufferInfo","createDiscBuffers","createCresentBufferInfo","createCresentBuffers","createCresentVertices","getElementById","id","document","TEXTURE0","DYNAMIC_DRAW","UNIFORM_BUFFER","TRANSFORM_FEEDBACK_BUFFER","TRANSFORM_FEEDBACK","COMPILE_STATUS","LINK_STATUS","FRAGMENT_SHADER","VERTEX_SHADER","SEPARATE_ATTRIBS","ACTIVE_UNIFORMS","ACTIVE_ATTRIBUTES","TRANSFORM_FEEDBACK_VARYINGS","ACTIVE_UNIFORM_BLOCKS","UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER","UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER","UNIFORM_BLOCK_DATA_SIZE","UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","typeMap","getBindPointForSamplerType","bindPoint","floatSetter","location","uniform1f","floatArraySetter","uniform1fv","floatVec2Setter","uniform2fv","floatVec3Setter","uniform3fv","floatVec4Setter","uniform4fv","intSetter","uniform1i","intArraySetter","uniform1iv","intVec2Setter","uniform2iv","intVec3Setter","uniform3iv","intVec4Setter","uniform4iv","uintSetter","uniform1ui","uintArraySetter","uniform1uiv","uintVec2Setter","uniform2uiv","uintVec3Setter","uniform3uiv","uintVec4Setter","uniform4uiv","floatMat2Setter","uniformMatrix2fv","floatMat3Setter","uniformMatrix3fv","floatMat4Setter","uniformMatrix4fv","floatMat23Setter","uniformMatrix2x3fv","floatMat32Setter","uniformMatrix3x2fv","floatMat24Setter","uniformMatrix2x4fv","floatMat42Setter","uniformMatrix4x2fv","floatMat34Setter","uniformMatrix3x4fv","floatMat43Setter","uniformMatrix4x3fv","samplerSetter","unit","utils","isWebGL2","textureOrPair","texture","sampler","activeTexture","bindTexture","bindSampler","samplerArraySetter","units","Int32Array","index","setter","arraySetter","cols","Uint32Array","rows","floatAttribSetter","disableVertexAttribArray","vertexAttrib4fv","vertexAttrib3fv","vertexAttrib2fv","vertexAttrib1fv","enableVertexAttribArray","vertexAttribPointer","vertexAttribDivisor","intAttribSetter","vertexAttrib4iv","vertexAttribIPointer","uintAttribSetter","vertexAttrib4uiv","matAttribSetter","typeInfo","defaultSize","rowOffset","attrTypeMap","errorRE","addLineNumbersWithError","log","lineOffset","matches","matchAll","lineNoToErrorMap","map","lineNo","parseInt","next","msg","split","line","err","join","spaceRE","prepShaderSource","shaderSource","replace","reportError","progOptions","errorCallback","callback","setTimeout","errors","checkShaderStatus","shaderType","shader","errFn","compiled","getShaderParameter","lastError","getShaderInfoLog","getShaderSource","glEnumToString","getProgramOptions","opt_attribs","opt_locations","opt_errorCallback","transformFeedbackVaryings","transformFeedbackMode","opt","attribLocations","args","defaultShaderType","getShaderTypeFromScriptType","scriptType","deleteProgramAndShaders","notThese","shaders","getAttachedShaders","has","deleteShader","deleteProgram","wait","ms","Promise","resolve","createProgramNoCheck","programOptions","createProgram","elem","text","createShader","compileShader","attachShader","entries","loc","bindAttribLocation","varyings","linkProgram","shaderSet","Set","hasErrors","getProgramErrors","waitForProgramLinkCompletionAsync","then","wrapCallbackFnToAsyncFn","arg1","reject","createProgramAsync","createProgramInfoAsync","createProgramInfo","ext","getExtension","checkFn","getProgramParameter","COMPLETION_STATUS_KHR","waitTime","waitForAllProgramsLinkCompletionAsync","values","linked","getProgramInfoLog","SHADER_TYPE","_","createProgramFromScripts","shaderScriptIds","scriptId","shaderScript","createProgramFromSources","shaderSources","isBuiltIn","startsWith","tokenRE","isDigit","addSetterToUniformTree","fullPath","node","uniformSetters","tokens","tokenNdx","path","token","isArrayIndex","accessor","isLastToken","child","setUniformTree","createUniformSetters","textureUnit","createUniformSetter","uniformInfo","endsWith","uniformTree","numUniforms","getActiveUniform","substr","getUniformLocation","createTransformFeedbackInfo","numVaryings","varying","getTransformFeedbackVarying","bindTransformFeedbackInfo","transformFeedbackInfo","buf","bindBufferRange","bindBufferBase","createTransformFeedback","tf","bindTransformFeedback","createUniformBlockSpecFromProgram","uniformData","uniformIndices","pair","pname","getActiveUniforms","blockSpecs","numUniformBlocks","getActiveUniformBlockName","blockSpec","getUniformBlockIndex","usedByVertexShader","getActiveUniformBlockParameter","usedByFragmentShader","used","arraySuffixRE","pad","createUniformBlockUniformSetter","view","totalRows","row","col","createUniformBlockInfoFromProgram","uniformBlockSpec","blockName","ArrayBuffer","uniformBufferIndex","uniformBlockBinding","setters","setterTree","uniformNdx","byteLength","uniformView","asFloat","createUniformBlockInfo","bindUniformBlock","uniformBlockInfo","bufferBindIndex","setUniformBlock","setBlockUniforms","tree","prop","actualSetters","numArgs","aNdx","setUniformsAndBindTextures","createAttributeSetters","attribSetters","numAttribs","getActiveAttrib","getAttribLocation","setAttributes","createProgramInfoFromProgram","notIdRE","source","script","origCallback","checkAllPrograms","programSpecs","noDeleteShadersSet","createPrograms","fromEntries","createProgramInfos","createProgramInfosForPrograms","createProgramsAsync","createProgramInfosAsync","textureColor","crossOrigin","getShared2DContext","s_ctx","createElement","getContext","ALPHA","RGB","LUMINANCE","LUMINANCE_ALPHA","NEAREST","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_MIN_LOD","TEXTURE_MAX_LOD","TEXTURE_BASE_LEVEL","TEXTURE_MAX_LEVEL","TEXTURE_COMPARE_MODE","TEXTURE_COMPARE_FUNC","UNPACK_ALIGNMENT","UNPACK_ROW_LENGTH","UNPACK_IMAGE_HEIGHT","UNPACK_SKIP_PIXELS","UNPACK_SKIP_ROWS","UNPACK_SKIP_IMAGES","UNPACK_COLORSPACE_CONVERSION_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","R8","R8_SNORM","R16F","R32F","R8UI","R8I","RG16UI","RG16I","RG32UI","RG32I","RG8","RG8_SNORM","RG16F","RG32F","RG8UI","RG8I","R16UI","R16I","R32UI","R32I","RGB8","SRGB8","RGB8_SNORM","R11F_G11F_B10F","RGB9_E5","RGB16F","RGB32F","RGB8UI","RGB8I","RGB16UI","RGB16I","RGB32UI","RGB32I","RGBA8","SRGB8_ALPHA8","RGBA8_SNORM","RGB10_A2","RGBA16F","RGBA32F","RGBA8UI","RGBA8I","RGB10_A2UI","RGBA16UI","RGBA16I","RGBA32I","RGBA32UI","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT","HALF_FLOAT_OES","UNSIGNED_INT_2_10_10_10_REV","UNSIGNED_INT_10F_11F_11F_REV","UNSIGNED_INT_5_9_9_9_REV","FLOAT_32_UNSIGNED_INT_24_8_REV","UNSIGNED_INT_24_8","RG","RG_INTEGER","RED","RED_INTEGER","RGB_INTEGER","RGBA_INTEGER","formatInfo","numColorComponents","s_textureInternalFormatInfo","getTextureInternalFormatInfo","textureFormat","colorRenderable","textureFilterable","bytesPerElement","bytesPerElementMap","getBytesPerElementForInternalFormat","getFormatAndTypeForInternalFormat","isPowerOf2","canGenerateMipmap","canFilter","getNumComponentsForFormat","getTextureTypeForArrayType","defaultType","guessDimensions","setDefaultTextureColor","setPackState","colorspaceConversion","pixelStorei","premultiplyAlpha","flipY","setSkipStateToDefault","setTextureSamplerParameters","parameteriFn","wrapR","minLod","maxLod","baseLevel","maxLevel","compareFunc","compareMode","setTextureParameters","tex","texParameteri","setSamplerParameters","samplerParameteri","createSampler","createSamplers","samplerOptions","samplers","make1Pixel","setTextureFilteringForSize","generateMipmap","filtering","shouldAutomaticallySetTextureFilteringForSize","getCubeFaceOrder","cubeFaceOrder","getCubeFacesWithNdx","faces","facesWithNdx","face","sort","setTextureFromElement","formatType","imgWidth","imgHeight","slices","nodeName","ctx","canvas","drawImage","texImage2D","createImageBitmap","colorSpaceConversion","imageBitmap","smallest","largest","max","xMult","yMult","texImage3D","srcX","srcY","texSubImage3D","noop","urlIsSameOrigin","url","href","hostname","port","protocol","localOrigin","URL","origin","urlOrigin","setToAnonymousIfUndefinedAndURLIsNotSameOrigin","loadImage","img","Image","clearEventHandlers","removeEventListener","onError","onLoad","addEventListener","ImageBitmap","bm","cb","mode","fetch","response","ok","blob","bitmap","e","isTexImageSource","obj","ImageData","HTMLElement","loadAndUseImage","setTextureTo1PixelColor","loadTextureFromUrl","loadCubemapFromUrls","urls","numToLoad","imgs","uploadImg","faceTarget","otherTarget","loadSlicesFromUrls","firstImage","setTextureFromArray","Uint8ClampedArray","dimensions","cbrt","unpackAlignment","elementsPerElement","faceSize","subarray","setEmptyTexture","isAsyncSrc","createTextures","numDownloading","images","callCallbackIfReady","onLoadFn","addExtensionsToContext","setAttributeDefaults_","setTextureDefaults_","prefixRE","addExtensionToContext","extensionName","enums","fnSuffix","exec","enumSuffix","isFunc","suffix","origFn","supportedExtensions","create3DContext","context","getWebGLContext","createContext","resizeCanvasToDisplaySize","multiplier","clientWidth","clientHeight","glTypeToTypedArray","tt","Int16Array","CTOR","SharedArrayBuffer","isArrayBufferOrSharedArrayBuffer","texStorage2D","isWebGL1","haveEnumsForType","addEnums","existing","VecType","lerpV","mulScalar","divScalar","dot","lengthSq","distance","distanceSq","lenSq","divide","createVertexArrayInfo","programInfos","vao","createVertexArray","createVAOAndSetAttributes","createVAOFromBufferInfo"],"mappings":"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AAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAI,CAAC,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAI,CAAC,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,GAAG,EAAG,EAAE,EAAG,EAAE,EACb,GAAG,EAAG,EAAE,EAAI,CAAC;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC;EAEb;EACA,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAG,EAAE,EACb,EAAE,EAAI,EAAE,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE;EAEb;EACA,CAAC,EAAI,GAAG,EAAI,CAAC,EACb,CAAC,EAAI,GAAG,EAAG,EAAE,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,CAAC,EAAI,GAAG,EAAI,CAAC,EACb,EAAE,EAAG,GAAG,EAAG,EAAE,EACb,EAAE,EAAG,GAAG,EAAI,CAAC;EAEb;EACA,CAAC,EAAI,CAAC,EAAI,CAAC,EACX,CAAC,EAAI,CAAC,EAAG,EAAE,EACX,CAAC,EAAE,GAAG,EAAG,EAAE,EACX,CAAC,EAAI,CAAC,EAAI,CAAC,EACX,CAAC,EAAE,GAAG,EAAG,EAAE,EACX,CAAC,EAAE,GAAG,EAAI,CAAC,CACZ;EAED,IAAMC,SAAS,GAAG;EAChB;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI,EACV,IAAI,EAAE,IAAI;EAEV;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC;EAEJ;EACA,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ,CAAC,EAAE,CAAC,EACJ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H,WAAW,EAAEy0B,gBAAgB,EAAE;EAC1D,IAAID,gBAAgB,CAAC37B,EAAE,EAAEmH,WAAW,EAAEy0B,gBAAgB,CAAC,EAAE;IACvD57B,EAAE,CAACgB,UAAU,CAACymB,cAAc,EAAEmU,gBAAgB,CAAC/6B,KAAK,EAAE2mB,YAAY,CAAC;EACrE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASuU,gBAAgB,CAACH,gBAAgB,EAAEtF,MAAM,EAAE;EAClD,IAAM8E,OAAO,GAAGQ,gBAAgB,CAACR,OAAO;EACxC,KAAK,IAAM95B,IAAI,IAAIg1B,MAAM,EAAE;IACzB,IAAMnH,MAAM,GAAGiM,OAAO,CAAC95B,IAAI,CAAC;IAC5B,IAAI6tB,MAAM,EAAE;MACV,IAAM9qB,KAAK,GAAGiyB,MAAM,CAACh1B,IAAI,CAAC;MAC1B6tB,MAAM,CAAC9qB,KAAK,CAAC;IACf;EACF;AACF;AAEA,SAAS4zB,cAAc,CAAC+D,IAAI,EAAE1F,MAAM,EAAE;EACpC,KAAK,IAAMh1B,IAAI,IAAIg1B,MAAM,EAAE;IACzB,IAAM2F,IAAI,GAAGD,IAAI,CAAC16B,IAAI,CAAC;IACvB,IAAI,OAAO26B,IAAI,KAAK,UAAU,EAAE;MAC9BA,IAAI,CAAC3F,MAAM,CAACh1B,IAAI,CAAC,CAAC;IACpB,CAAC,MAAM;MACL22B,cAAc,CAAC+D,IAAI,CAAC16B,IAAI,CAAC,EAAEg1B,MAAM,CAACh1B,IAAI,CAAC,CAAC;IAC1C;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsG,WAAW,CAACwzB,OAAO,EAAW;EAAG;EACxC,IAAMc,aAAa,GAAGd,OAAO,CAAC5D,cAAc,IAAI4D,OAAO;EACvD,IAAMe,OAAO,mDAAc;EAC3B,KAAK,IAAIC,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGD,OAAO,EAAE,EAAEC,IAAI,EAAE;IACzC,IAAM9F,MAAM,GAAQ8F,IAAI,gCAAJA,IAAI,6BAAJA,IAAI,KAAC;IACzB,IAAIz5B,KAAK,CAACC,OAAO,CAAC0zB,MAAM,CAAC,EAAE;MACzB,IAAMh0B,SAAS,GAAGg0B,MAAM,CAAC10B,MAAM;MAC/B,KAAK,IAAIwD,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG9C,SAAS,EAAE,EAAE8C,EAAE,EAAE;QACrCwC,WAAW,CAACs0B,aAAa,EAAE5F,MAAM,CAAClxB,EAAE,CAAC,CAAC;MACxC;IACF,CAAC,MAAM;MACL,KAAK,IAAM9D,IAAI,IAAIg1B,MAAM,EAAE;QACzB,IAAMnH,MAAM,GAAG+M,aAAa,CAAC56B,IAAI,CAAC;QAClC,IAAI6tB,MAAM,EAAE;UACVA,MAAM,CAACmH,MAAM,CAACh1B,IAAI,CAAC,CAAC;QACtB;MACF;IACF;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAM+6B,0BAA0B,GAAGz0B,WAAW;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA,SAAS00B,sBAAsB,CAACt8B,EAAE,EAAEuH,OAAO,EAAE;EAC3C,IAAMg1B,aAAa,GAAG,CACtB,CAAC;EAED,IAAMC,UAAU,GAAGx8B,EAAE,CAACk2B,mBAAmB,CAAC3uB,OAAO,EAAE2gB,iBAAiB,CAAC;EACrE,KAAK,IAAI9iB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGo3B,UAAU,EAAE,EAAEp3B,EAAE,EAAE;IACtC,IAAMN,UAAU,GAAG9E,EAAE,CAACy8B,eAAe,CAACl1B,OAAO,EAAEnC,EAAE,CAAC;IAClD,IAAI6xB,SAAS,CAACnyB,UAAU,CAAC,EAAE;MACzB;IACF;IACA,IAAMoqB,KAAK,GAAGlvB,EAAE,CAAC08B,iBAAiB,CAACn1B,OAAO,EAAEzC,UAAU,CAACxD,IAAI,CAAC;IAC5D,IAAMivB,QAAQ,GAAGG,WAAW,CAAC5rB,UAAU,CAACnE,IAAI,CAAC;IAC7C,IAAMwuB,MAAM,GAAGoB,QAAQ,CAACpB,MAAM,CAACnvB,EAAE,EAAEkvB,KAAK,EAAEqB,QAAQ,CAAC;IACnDpB,MAAM,CAAC9D,QAAQ,GAAG6D,KAAK;IACvBqN,aAAa,CAACz3B,UAAU,CAACxD,IAAI,CAAC,GAAG6tB,MAAM;EACzC;EAEA,OAAOoN,aAAa;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,aAAa,CAACvB,OAAO,EAAEh1B,OAAO,EAAE;EACvC,KAAK,IAAM9E,IAAI,IAAI8E,OAAO,EAAE;IAC1B,IAAM+oB,MAAM,GAAGiM,OAAO,CAAC95B,IAAI,CAAC;IAC5B,IAAI6tB,MAAM,EAAE;MACVA,MAAM,CAAC/oB,OAAO,CAAC9E,IAAI,CAAC,CAAC;IACvB;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASqG,uBAAuB,CAAC3H,EAAE,EAAEmH,WAAW,EAAEf,OAAO,EAAE;EACzD,IAAIA,OAAO,CAACoB,iBAAiB,EAAE;IAC7BxH,EAAE,CAACyH,eAAe,CAACrB,OAAO,CAACoB,iBAAiB,CAAC;EAC/C,CAAC,MAAM;IACLm1B,aAAa,CAACx1B,WAAW,CAACo1B,aAAa,IAAIp1B,WAAW,EAAEf,OAAO,CAACrC,OAAO,CAAC;IACxE,IAAIqC,OAAO,CAACL,OAAO,EAAE;MACnB/F,EAAE,CAACe,UAAU,CAACxB,oBAAoB,EAAE6G,OAAO,CAACL,OAAO,CAAC;IACtD;EACF;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS62B,4BAA4B,CAAC58B,EAAE,E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","file":"twgl-full.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twgl\"] = factory();\n\telse\n\t\troot[\"twgl\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/twgl-full.js\");\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as typedArrays from './typedarrays.js';\nimport * as helper from './helper.js';\n\nconst STATIC_DRAW                  = 0x88e4;\nconst ARRAY_BUFFER                 = 0x8892;\nconst ELEMENT_ARRAY_BUFFER         = 0x8893;\nconst BUFFER_SIZE                  = 0x8764;\n\nconst BYTE                         = 0x1400;\nconst UNSIGNED_BYTE                = 0x1401;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_SHORT               = 0x1403;\nconst INT                          = 0x1404;\nconst UNSIGNED_INT                 = 0x1405;\nconst FLOAT                        = 0x1406;\n\n/**\n * Low level attribute and buffer related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/attributes\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  attribPrefix: \"\",\n};\n\n/**\n * Sets the default attrib prefix\n *\n * When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n * as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n * In other words I'll create arrays of geometry like this\n *\n *     var arrays = {\n *       position: ...\n *       normal: ...\n *       texcoord: ...\n *     };\n *\n * But need those mapped to attributes and my attributes start with `a_`.\n *\n * @deprecated see {@link module:twgl.setDefaults}\n * @param {string} prefix prefix for attribs\n * @memberOf module:twgl/attributes\n */\nfunction setAttributePrefix(prefix) {\n  defaults.attribPrefix = prefix;\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n}\n\nfunction setBufferFromTypedArray(gl, type, buffer, array, drawType) {\n  gl.bindBuffer(type, buffer);\n  gl.bufferData(type, array, drawType || STATIC_DRAW);\n}\n\n/**\n * Given typed array creates a WebGLBuffer and copies the typed array\n * into it.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {ArrayBuffer|SharedArrayBuffer|ArrayBufferView|WebGLBuffer} typedArray the typed array. Note: If a WebGLBuffer is passed in it will just be returned. No action will be taken\n * @param {number} [type] the GL bind type for the buffer. Default = `gl.ARRAY_BUFFER`.\n * @param {number} [drawType] the GL draw type for the buffer. Default = 'gl.STATIC_DRAW`.\n * @return {WebGLBuffer} the created WebGLBuffer\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromTypedArray(gl, typedArray, type, drawType) {\n  if (helper.isBuffer(gl, typedArray)) {\n    return typedArray;\n  }\n  type = type || ARRAY_BUFFER;\n  const buffer = gl.createBuffer();\n  setBufferFromTypedArray(gl, type, buffer, typedArray, drawType);\n  return buffer;\n}\n\nfunction isIndices(name) {\n  return name === \"indices\";\n}\n\n// This is really just a guess. Though I can't really imagine using\n// anything else? Maybe for some compression?\nfunction getNormalizationForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)    { return true; }  // eslint-disable-line\n  if (typedArrayType === Uint8Array)   { return true; }  // eslint-disable-line\n  return false;\n}\n\nfunction getArray(array) {\n  return array.length ? array : array.data;\n}\n\nconst texcoordRE = /coord|texture/i;\nconst colorRE = /color|colour/i;\n\nfunction guessNumComponentsFromName(name, length) {\n  let numComponents;\n  if (texcoordRE.test(name)) {\n    numComponents = 2;\n  } else if (colorRE.test(name)) {\n    numComponents = 4;\n  } else {\n    numComponents = 3;  // position, normals, indices ...\n  }\n\n  if (length % numComponents > 0) {\n    throw new Error(`Can not guess numComponents for attribute '${name}'. Tried ${numComponents} but ${length} values is not evenly divisible by ${numComponents}. You should specify it.`);\n  }\n\n  return numComponents;\n}\n\nfunction getNumComponents(array, arrayName, numValues) {\n  return array.numComponents || array.size || guessNumComponentsFromName(arrayName, numValues || getArray(array).length);\n}\n\nfunction makeTypedArray(array, name) {\n  if (typedArrays.isArrayBuffer(array)) {\n    return array;\n  }\n\n  if (typedArrays.isArrayBuffer(array.data)) {\n    return array.data;\n  }\n\n  if (Array.isArray(array)) {\n    array = {\n      data: array,\n    };\n  }\n\n  let Type = array.type ? typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type) : undefined;\n  if (!Type) {\n    if (isIndices(name)) {\n      Type = Uint16Array;\n    } else {\n      Type = Float32Array;\n    }\n  }\n  return new Type(array.data);\n}\n\nfunction glTypeFromGLTypeOrTypedArrayType(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? glTypeOrTypedArrayCtor\n      : glTypeOrTypedArrayCtor ? typedArrays.getGLTypeForTypedArrayType(glTypeOrTypedArrayCtor) : FLOAT;\n}\n\nfunction typedArrayTypeFromGLTypeOrTypedArrayCtor(glTypeOrTypedArrayCtor) {\n  return typeof glTypeOrTypedArrayCtor === 'number'\n      ? typedArrays.getTypedArrayTypeForGLType(glTypeOrTypedArrayCtor)\n      : glTypeOrTypedArrayCtor || Float32Array;\n}\n\nfunction attribBufferFromBuffer(gl, array/*, arrayName */) {\n  return {\n    buffer: array.buffer,\n    numValues: 2 * 3 * 4,  // safely divided by 2, 3, 4\n    type: glTypeFromGLTypeOrTypedArrayType(array.type),\n    arrayType: typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type),\n  };\n}\n\nfunction attribBufferFromSize(gl, array/*, arrayName*/) {\n  const numValues = array.data || array;\n  const arrayType = typedArrayTypeFromGLTypeOrTypedArrayCtor(array.type);\n  const numBytes = numValues * arrayType.BYTES_PER_ELEMENT;\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(ARRAY_BUFFER, buffer);\n  gl.bufferData(ARRAY_BUFFER, numBytes, array.drawType || STATIC_DRAW);\n  return {\n    buffer,\n    numValues,\n    type: typedArrays.getGLTypeForTypedArrayType(arrayType),\n    arrayType,\n  };\n}\n\nfunction attribBufferFromArrayLike(gl, array, arrayName) {\n  const typedArray = makeTypedArray(array, arrayName);\n  return {\n    arrayType: typedArray.constructor,\n    buffer: createBufferFromTypedArray(gl, typedArray, undefined, array.drawType),\n    type: typedArrays.getGLTypeForTypedArray(typedArray),\n    numValues: 0,\n  };\n}\n\n/**\n * The info for an attribute. This is effectively just the arguments to `gl.vertexAttribPointer` plus the WebGLBuffer\n * for the attribute.\n *\n * @typedef {Object} AttribInfo\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {number} [numComponents] the number of components for this attribute.\n * @property {number} [size] synonym for `numComponents`.\n * @property {number} [type] the type of the attribute (eg. `gl.FLOAT`, `gl.UNSIGNED_BYTE`, etc...) Default = `gl.FLOAT`\n * @property {boolean} [normalize] whether or not to normalize the data. Default = false\n * @property {number} [offset] offset into buffer in bytes. Default = 0\n * @property {number} [stride] the stride in bytes per element. Default = 0\n * @property {number} [divisor] the divisor in instances. Default = 0.\n *    Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *    and, if you're using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {WebGLBuffer} buffer the buffer that contains the data for this attribute\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {(Int8ArrayConstructor|Uint8ArrayConstructor|Int16ArrayConstructor|Uint16ArrayConstructor|Int32ArrayConstructor|Uint32ArrayConstructor|Float32ArrayConstructor)} TypedArrayConstructor\n */\n\n/**\n * Use this type of array spec when TWGL can't guess the type or number of components of an array\n * @typedef {Object} FullArraySpec\n * @property {number[]|ArrayBufferView} [value] a constant value for the attribute. Note: if this is set the attribute will be\n *    disabled and set to this constant value and all other values will be ignored.\n * @property {(number|number[]|ArrayBufferView)} [data] The data of the array. A number alone becomes the number of elements of type.\n * @property {number} [numComponents] number of components for `vertexAttribPointer`. Default is based on the name of the array.\n *    If `coord` is in the name assumes `numComponents = 2`.\n *    If `color` is in the name assumes `numComponents = 4`.\n *    otherwise assumes `numComponents = 3`\n * @property {number|TypedArrayConstructor} [type] type. This is used if `data` is a JavaScript array, or `buffer` is passed in, or `data` is a number.\n *   It can either be the constructor for a typedarray. (eg. `Uint8Array`) OR a WebGL type, (eg `gl.UNSIGNED_BYTE`).\n *   For example if you want colors in a `Uint8Array` you might have a `FullArraySpec` like `{ type: gl.UNSIGNED_BYTE, data: [255,0,255,255, ...], }`.\n * @property {number} [size] synonym for `numComponents`.\n * @property {boolean} [normalize] normalize for `vertexAttribPointer`. Default is true if type is `Int8Array` or `Uint8Array` otherwise false.\n * @property {number} [stride] stride for `vertexAttribPointer`. Default = 0\n * @property {number} [offset] offset for `vertexAttribPointer`. Default = 0\n * @property {number} [divisor] divisor for `vertexAttribDivisor`. Default = 0.\n *     Requires WebGL2 or the ANGLE_instanced_arrays extension.\n *     and, if you using WebGL1 you must have called {@link module:twgl.addExtensionsToContext}\n * @property {string} [attrib] name of attribute this array maps to. Defaults to same name as array prefixed by the default attribPrefix.\n * @property {string} [name] synonym for `attrib`.\n * @property {string} [attribName] synonym for `attrib`.\n * @property {WebGLBuffer} [buffer] Buffer to use for this attribute. This lets you use your own buffer\n *    but you will need to supply `numComponents` and `type`. You can effectively pass an `AttribInfo`\n *    to provide this. Example:\n *\n *         const bufferInfo1 = twgl.createBufferInfoFromArrays(gl, {\n *           position: [1, 2, 3, ... ],\n *         });\n *         const bufferInfo2 = twgl.createBufferInfoFromArrays(gl, {\n *           position: bufferInfo1.attribs.position,  // use the same buffer from bufferInfo1\n *         });\n *\n * @property {number} [drawType] the draw type passed to gl.bufferData. Default = gl.STATIC_DRAW\n * @memberOf module:twgl\n */\n\n/**\n * An individual array in {@link module:twgl.Arrays}\n *\n * When passed to {@link module:twgl.createBufferInfoFromArrays} if an ArraySpec is `number[]` or `ArrayBufferView`\n * the types will be guessed based on the name. `indices` will be `Uint16Array`, everything else will\n * be `Float32Array`. If an ArraySpec is a number it's the number of floats for an empty (zeroed) buffer.\n *\n * @typedef {(number|number[]|ArrayBufferView|module:twgl.FullArraySpec)} ArraySpec\n * @memberOf module:twgl\n */\n\n/**\n * This is a JavaScript object of arrays by name. The names should match your shader's attributes. If your\n * attributes have a common prefix you can specify it by calling {@link module:twgl.setAttributePrefix}.\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * Objects with various fields. See {@link module:twgl.FullArraySpec}.\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n * @typedef {Object.<string, module:twgl.ArraySpec>} Arrays\n * @memberOf module:twgl\n */\n\n\n/**\n * Creates a set of attribute data and WebGLBuffers from set of arrays\n *\n * Given\n *\n *      var arrays = {\n *        position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *        texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *        normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *        color:    { numComponents: 4, data: [255, 255, 255, 255, 255, 0, 0, 255, 0, 0, 255, 255], type: Uint8Array, },\n *        indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *      };\n *\n * returns something like\n *\n *      var attribs = {\n *        position: { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        texcoord: { numComponents: 2, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        normal:   { numComponents: 3, type: gl.FLOAT,         normalize: false, buffer: WebGLBuffer, },\n *        color:    { numComponents: 4, type: gl.UNSIGNED_BYTE, normalize: true,  buffer: WebGLBuffer, },\n *      };\n *\n * notes:\n *\n * *   Arrays can take various forms\n *\n *     Bare JavaScript Arrays\n *\n *         var arrays = {\n *            position: [-1, 1, 0],\n *            normal: [0, 1, 0],\n *            ...\n *         }\n *\n *     Bare TypedArrays\n *\n *         var arrays = {\n *            position: new Float32Array([-1, 1, 0]),\n *            color: new Uint8Array([255, 128, 64, 255]),\n *            ...\n *         }\n *\n * *   Will guess at `numComponents` if not specified based on name.\n *\n *     If `coord` is in the name assumes `numComponents = 2`\n *\n *     If `color` is in the name assumes `numComponents = 4`\n *\n *     otherwise assumes `numComponents = 3`\n *\n * @param {WebGLRenderingContext} gl The webgl rendering context.\n * @param {module:twgl.Arrays} arrays The arrays\n * @param {module:twgl.BufferInfo} [srcBufferInfo] a BufferInfo to copy from\n *   This lets you share buffers. Any arrays you supply will override\n *   the buffers from srcBufferInfo.\n * @return {Object.<string, module:twgl.AttribInfo>} the attribs\n * @memberOf module:twgl/attributes\n */\nfunction createAttribsFromArrays(gl, arrays) {\n  const attribs = {};\n  Object.keys(arrays).forEach(function(arrayName) {\n    if (!isIndices(arrayName)) {\n      const array = arrays[arrayName];\n      const attribName = array.attrib || array.name || array.attribName || (defaults.attribPrefix + arrayName);\n      if (array.value) {\n        if (!Array.isArray(array.value) && !typedArrays.isArrayBuffer(array.value)) {\n          throw new Error('array.value is not array or typedarray');\n        }\n        attribs[attribName] = {\n          value: array.value,\n        };\n      } else {\n        let fn;\n        if (array.buffer && array.buffer instanceof WebGLBuffer) {\n          fn = attribBufferFromBuffer;\n        } else if (typeof array === \"number\" || typeof array.data === \"number\") {\n          fn = attribBufferFromSize;\n        } else {\n          fn = attribBufferFromArrayLike;\n        }\n        const {buffer, type, numValues, arrayType} = fn(gl, array, arrayName);\n        const normalization = array.normalize !== undefined ? array.normalize : getNormalizationForTypedArrayType(arrayType);\n        const numComponents = getNumComponents(array, arrayName, numValues);\n        attribs[attribName] = {\n          buffer:        buffer,\n          numComponents: numComponents,\n          type:          type,\n          normalize:     normalization,\n          stride:        array.stride || 0,\n          offset:        array.offset || 0,\n          divisor:       array.divisor === undefined ? undefined : array.divisor,\n          drawType:      array.drawType,\n        };\n      }\n    }\n  });\n  gl.bindBuffer(ARRAY_BUFFER, null);\n  return attribs;\n}\n\n/**\n * Sets the contents of a buffer attached to an attribInfo\n *\n * This is helper function to dynamically update a buffer.\n *\n * Let's say you make a bufferInfo\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *     var bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n *  And you want to dynamically update the positions. You could do this\n *\n *     // assuming arrays.position has already been updated with new data.\n *     twgl.setAttribInfoBufferFromArray(gl, bufferInfo.attribs.position, arrays.position);\n *\n * @param {WebGLRenderingContext} gl\n * @param {AttribInfo} attribInfo The attribInfo who's buffer contents to set. NOTE: If you have an attribute prefix\n *   the name of the attribute will include the prefix.\n * @param {ArraySpec} array Note: it is arguably inefficient to pass in anything but a typed array because anything\n *    else will have to be converted to a typed array before it can be used by WebGL. During init time that\n *    inefficiency is usually not important but if you're updating data dynamically best to be efficient.\n * @param {number} [offset] an optional offset into the buffer. This is only an offset into the WebGL buffer\n *    not the array. To pass in an offset into the array itself use a typed array and create an `ArrayBufferView`\n *    for the portion of the array you want to use.\n *\n *        var someArray = new Float32Array(1000); // an array with 1000 floats\n *        var someSubArray = new Float32Array(someArray.buffer, offsetInBytes, sizeInUnits); // a view into someArray\n *\n *    Now you can pass `someSubArray` into setAttribInfoBufferFromArray`\n * @memberOf module:twgl/attributes\n */\nfunction setAttribInfoBufferFromArray(gl, attribInfo, array, offset) {\n  array = makeTypedArray(array);\n  if (offset !== undefined) {\n    gl.bindBuffer(ARRAY_BUFFER, attribInfo.buffer);\n    gl.bufferSubData(ARRAY_BUFFER, offset, array);\n  } else {\n    setBufferFromTypedArray(gl, ARRAY_BUFFER, attribInfo.buffer, array, attribInfo.drawType);\n  }\n}\n\nfunction getBytesPerValueForGLType(gl, type) {\n  if (type === BYTE)           return 1;  // eslint-disable-line\n  if (type === UNSIGNED_BYTE)  return 1;  // eslint-disable-line\n  if (type === SHORT)          return 2;  // eslint-disable-line\n  if (type === UNSIGNED_SHORT) return 2;  // eslint-disable-line\n  if (type === INT)            return 4;  // eslint-disable-line\n  if (type === UNSIGNED_INT)   return 4;  // eslint-disable-line\n  if (type === FLOAT)          return 4;  // eslint-disable-line\n  return 0;\n}\n\n// Tries to get the number of elements from a set of arrays.\nconst positionKeys = ['position', 'positions', 'a_position'];\nfunction getNumElementsFromNonIndexedArrays(arrays) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in arrays) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(arrays)[0];\n  }\n  const array = arrays[key];\n  const length = getArray(array).length;\n  if (length === undefined) {\n    return 1;   // There's no arrays\n  }\n  const numComponents = getNumComponents(array, key);\n  const numElements = length / numComponents;\n  if (length % numComponents > 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\nfunction getNumElementsFromAttributes(gl, attribs) {\n  let key;\n  let ii;\n  for (ii = 0; ii < positionKeys.length; ++ii) {\n    key = positionKeys[ii];\n    if (key in attribs) {\n      break;\n    }\n    key = defaults.attribPrefix + key;\n    if (key in attribs) {\n      break;\n    }\n  }\n  if (ii === positionKeys.length) {\n    key = Object.keys(attribs)[0];\n  }\n  const attrib = attribs[key];\n  if (!attrib.buffer) {\n    return 1; // There's no buffer\n  }\n  gl.bindBuffer(ARRAY_BUFFER, attrib.buffer);\n  const numBytes = gl.getBufferParameter(ARRAY_BUFFER, BUFFER_SIZE);\n  gl.bindBuffer(ARRAY_BUFFER, null);\n\n  const bytesPerValue = getBytesPerValueForGLType(gl, attrib.type);\n  const totalElements = numBytes / bytesPerValue;\n  const numComponents = attrib.numComponents || attrib.size;\n  // TODO: check stride\n  const numElements = totalElements / numComponents;\n  if (numElements % 1 !== 0) {\n    throw new Error(`numComponents ${numComponents} not correct for length ${length}`);\n  }\n  return numElements;\n}\n\n/**\n * @typedef {Object} BufferInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLBuffer} [indices] The indices `ELEMENT_ARRAY_BUFFER` if any indices exist.\n * @property {Object.<string, module:twgl.AttribInfo>} [attribs] The attribs appropriate to call `setAttributes`\n * @memberOf module:twgl\n */\n\n/**\n * Creates a BufferInfo from an object of arrays.\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * Given an object like\n *\n *     var arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *       normal:   { numComponents: 3, data: [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],     },\n *       indices:  { numComponents: 3, data: [0, 1, 2, 1, 2, 3],                       },\n *     };\n *\n *  Creates an BufferInfo like this\n *\n *     bufferInfo = {\n *       numElements: 4,        // or whatever the number of elements is\n *       indices: WebGLBuffer,  // this property will not exist if there are no indices\n *       attribs: {\n *         position: { buffer: WebGLBuffer, numComponents: 3, },\n *         normal:   { buffer: WebGLBuffer, numComponents: 3, },\n *         texcoord: { buffer: WebGLBuffer, numComponents: 2, },\n *       },\n *     };\n *\n *  The properties of arrays can be JavaScript arrays in which case the number of components\n *  will be guessed.\n *\n *     var arrays = {\n *        position: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0],\n *        texcoord: [0, 0, 0, 1, 1, 0, 1, 1],\n *        normal:   [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1],\n *        indices:  [0, 1, 2, 1, 2, 3],\n *     };\n *\n *  They can also be TypedArrays\n *\n *     var arrays = {\n *        position: new Float32Array([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]),\n *        texcoord: new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]),\n *        normal:   new Float32Array([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]),\n *        indices:  new Uint16Array([0, 1, 2, 1, 2, 3]),\n *     };\n *\n *  Or AugmentedTypedArrays\n *\n *     var positions = createAugmentedTypedArray(3, 4);\n *     var texcoords = createAugmentedTypedArray(2, 4);\n *     var normals   = createAugmentedTypedArray(3, 4);\n *     var indices   = createAugmentedTypedArray(3, 2, Uint16Array);\n *\n *     positions.push([0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0]);\n *     texcoords.push([0, 0, 0, 1, 1, 0, 1, 1]);\n *     normals.push([0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]);\n *     indices.push([0, 1, 2, 1, 2, 3]);\n *\n *     var arrays = {\n *        position: positions,\n *        texcoord: texcoords,\n *        normal:   normals,\n *        indices:  indices,\n *     };\n *\n * For the last example it is equivalent to\n *\n *     var bufferInfo = {\n *       attribs: {\n *         position: { numComponents: 3, buffer: gl.createBuffer(), },\n *         texcoord: { numComponents: 2, buffer: gl.createBuffer(), },\n *         normal: { numComponents: 3, buffer: gl.createBuffer(), },\n *       },\n *       indices: gl.createBuffer(),\n *       numElements: 6,\n *     };\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.position.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.position, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.texcoord.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.texcoord, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, bufferInfo.attribs.normal.buffer);\n *     gl.bufferData(gl.ARRAY_BUFFER, arrays.normal, gl.STATIC_DRAW);\n *     gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, bufferInfo.indices);\n *     gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, arrays.indices, gl.STATIC_DRAW);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.Arrays} arrays Your data\n * @param {module:twgl.BufferInfo} [srcBufferInfo] An existing\n *        buffer info to start from. WebGLBuffers etc specified\n *        in the srcBufferInfo will be used in a new BufferInfo\n *        with any arrays specified overriding the ones in\n *        srcBufferInfo.\n * @return {module:twgl.BufferInfo} A BufferInfo\n * @memberOf module:twgl/attributes\n */\nfunction createBufferInfoFromArrays(gl, arrays, srcBufferInfo) {\n  const newAttribs = createAttribsFromArrays(gl, arrays);\n  const bufferInfo = Object.assign({}, srcBufferInfo ? srcBufferInfo : {});\n  bufferInfo.attribs = Object.assign({}, srcBufferInfo ? srcBufferInfo.attribs : {}, newAttribs);\n  const indices = arrays.indices;\n  if (indices) {\n    const newIndices = makeTypedArray(indices, \"indices\");\n    bufferInfo.indices = createBufferFromTypedArray(gl, newIndices, ELEMENT_ARRAY_BUFFER);\n    bufferInfo.numElements = newIndices.length;\n    bufferInfo.elementType = typedArrays.getGLTypeForTypedArray(newIndices);\n  } else if (!bufferInfo.numElements) {\n    bufferInfo.numElements = getNumElementsFromAttributes(gl, bufferInfo.attribs);\n  }\n\n  return bufferInfo;\n}\n\n/**\n * Creates a buffer from an array, typed array, or array spec\n *\n * Given something like this\n *\n *     [1, 2, 3],\n *\n * or\n *\n *     new Uint16Array([1,2,3]);\n *\n * or\n *\n *     {\n *        data: [1, 2, 3],\n *        type: Uint8Array,\n *     }\n *\n * returns a WebGLBuffer that contains the given data.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.ArraySpec} array an array, typed array, or array spec.\n * @param {string} arrayName name of array. Used to guess the type if type can not be derived otherwise.\n * @return {WebGLBuffer} a WebGLBuffer containing the data in array.\n * @memberOf module:twgl/attributes\n */\nfunction createBufferFromArray(gl, array, arrayName) {\n  const type = arrayName === \"indices\" ? ELEMENT_ARRAY_BUFFER : ARRAY_BUFFER;\n  const typedArray = makeTypedArray(array, arrayName);\n  return createBufferFromTypedArray(gl, typedArray, type);\n}\n\n/**\n * Creates buffers from arrays or typed arrays\n *\n * Given something like this\n *\n *     var arrays = {\n *        positions: [1, 2, 3],\n *        normals: [0, 0, 1],\n *     }\n *\n * returns something like\n *\n *     buffers = {\n *       positions: WebGLBuffer,\n *       normals: WebGLBuffer,\n *     }\n *\n * If the buffer is named 'indices' it will be made an ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {module:twgl.Arrays} arrays\n * @return {Object<string, WebGLBuffer>} returns an object with one WebGLBuffer per array\n * @memberOf module:twgl/attributes\n */\nfunction createBuffersFromArrays(gl, arrays) {\n  const buffers = { };\n  Object.keys(arrays).forEach(function(key) {\n    buffers[key] = createBufferFromArray(gl, arrays[key], key);\n  });\n\n  // Ugh!\n  if (arrays.indices) {\n    buffers.numElements = arrays.indices.length;\n    buffers.elementType = typedArrays.getGLTypeForTypedArray(makeTypedArray(arrays.indices), 'indices');\n  } else {\n    buffers.numElements = getNumElementsFromNonIndexedArrays(arrays);\n  }\n\n  return buffers;\n}\n\nexport {\n  createAttribsFromArrays,\n  createBuffersFromArrays,\n  createBufferFromArray,\n  createBufferFromTypedArray,\n  createBufferInfoFromArrays,\n  setAttribInfoBufferFromArray,\n\n  setAttributePrefix,\n\n  setDefaults as setAttributeDefaults_,\n  getNumComponents as getNumComponents_,\n  getArray as getArray_,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as programs from './programs.js';\n\nconst TRIANGLES                      = 0x0004;\nconst UNSIGNED_SHORT                 = 0x1403;\n\n/**\n * Drawing related functions\n *\n * For backward compatibility they are available at both `twgl.draw` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/draw\n */\n\n/**\n * Calls `gl.drawElements` or `gl.drawArrays`, whichever is appropriate\n *\n * normally you'd call `gl.drawElements` or `gl.drawArrays` yourself\n * but calling this means if you switch from indexed data to non-indexed\n * data you don't have to remember to update your draw call.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} bufferInfo A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays} or\n *   a VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @param {number} [type] eg (gl.TRIANGLES, gl.LINES, gl.POINTS, gl.TRIANGLE_STRIP, ...). Defaults to `gl.TRIANGLES`\n * @param {number} [count] An optional count. Defaults to bufferInfo.numElements\n * @param {number} [offset] An optional offset. Defaults to 0.\n * @param {number} [instanceCount] An optional instanceCount. if set then `drawArraysInstanced` or `drawElementsInstanced` will be called\n * @memberOf module:twgl/draw\n */\nfunction drawBufferInfo(gl, bufferInfo, type, count, offset, instanceCount) {\n  type = type === undefined ? TRIANGLES : type;\n  const indices = bufferInfo.indices;\n  const elementType = bufferInfo.elementType;\n  const numElements = count === undefined ? bufferInfo.numElements : count;\n  offset = offset === undefined ? 0 : offset;\n  if (elementType || indices) {\n    if (instanceCount !== undefined) {\n      gl.drawElementsInstanced(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset, instanceCount);\n    } else {\n      gl.drawElements(type, numElements, elementType === undefined ? UNSIGNED_SHORT : bufferInfo.elementType, offset);\n    }\n  } else {\n    if (instanceCount !== undefined) {\n      gl.drawArraysInstanced(type, offset, numElements, instanceCount);\n    } else {\n      gl.drawArrays(type, offset, numElements);\n    }\n  }\n}\n\n/**\n * A DrawObject is useful for putting objects in to an array and passing them to {@link module:twgl.drawObjectList}.\n *\n * You need either a `BufferInfo` or a `VertexArrayInfo`.\n *\n * @typedef {Object} DrawObject\n * @property {boolean} [active] whether or not to draw. Default = `true` (must be `false` to be not true). In other words `undefined` = `true`\n * @property {number} [type] type to draw eg. `gl.TRIANGLES`, `gl.LINES`, etc...\n * @property {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @property {module:twgl.BufferInfo} [bufferInfo] A BufferInfo as returned from {@link module:twgl.createBufferInfoFromArrays}\n * @property {module:twgl.VertexArrayInfo} [vertexArrayInfo] A VertexArrayInfo as returned from {@link module:twgl.createVertexArrayInfo}\n * @property {Object<string, ?>} uniforms The values for the uniforms.\n *   You can pass multiple objects by putting them in an array. For example\n *\n *     var sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     var localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     var drawObj = {\n *       ...\n *       uniforms: [sharedUniforms, localUniforms],\n *     };\n *\n * @property {number} [offset] the offset to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to 0.\n * @property {number} [count] the count to pass to `gl.drawArrays` or `gl.drawElements`. Defaults to bufferInfo.numElements.\n * @property {number} [instanceCount] the number of instances. Defaults to undefined.\n * @memberOf module:twgl\n */\n\n/**\n * Draws a list of objects\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {DrawObject[]} objectsToDraw an array of objects to draw.\n * @memberOf module:twgl/draw\n */\nfunction drawObjectList(gl, objectsToDraw) {\n  let lastUsedProgramInfo = null;\n  let lastUsedBufferInfo = null;\n\n  objectsToDraw.forEach(function(object) {\n    if (object.active === false) {\n      return;\n    }\n\n    const programInfo = object.programInfo;\n    const bufferInfo = object.vertexArrayInfo || object.bufferInfo;\n    let bindBuffers = false;\n    const type = object.type === undefined ? TRIANGLES : object.type;\n\n    if (programInfo !== lastUsedProgramInfo) {\n      lastUsedProgramInfo = programInfo;\n      gl.useProgram(programInfo.program);\n\n      // We have to rebind buffers when changing programs because we\n      // only bind buffers the program uses. So if 2 programs use the same\n      // bufferInfo but the 1st one uses only positions the when the\n      // we switch to the 2nd one some of the attributes will not be on.\n      bindBuffers = true;\n    }\n\n    // Setup all the needed attributes.\n    if (bindBuffers || bufferInfo !== lastUsedBufferInfo) {\n      if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject && !bufferInfo.vertexArrayObject) {\n        gl.bindVertexArray(null);\n      }\n      lastUsedBufferInfo = bufferInfo;\n      programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n    }\n\n    // Set the uniforms.\n    programs.setUniforms(programInfo, object.uniforms);\n\n    // Draw\n    drawBufferInfo(gl, bufferInfo, type, object.count, object.offset, object.instanceCount);\n  });\n\n  if (lastUsedBufferInfo && lastUsedBufferInfo.vertexArrayObject) {\n    gl.bindVertexArray(null);\n  }\n}\n\nexport {\n  drawBufferInfo,\n  drawObjectList,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as textures from './textures.js';\nimport * as helper from './helper.js';\n\n/**\n * Framebuffer related functions\n *\n * For backward compatibility they are available at both `twgl.framebuffer` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/framebuffers\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\nconst FRAMEBUFFER                    = 0x8d40;\nconst RENDERBUFFER                   = 0x8d41;\nconst TEXTURE_2D                     = 0x0de1;\n\nconst UNSIGNED_BYTE                  = 0x1401;\n\n/* PixelFormat */\nconst DEPTH_COMPONENT                = 0x1902;\nconst RGBA                           = 0x1908;\nconst DEPTH_COMPONENT24              = 0x81a6;\nconst DEPTH_COMPONENT32F             = 0x8cac;\nconst DEPTH24_STENCIL8               = 0x88f0;\nconst DEPTH32F_STENCIL8              = 0x8cad;\n\n/* Framebuffer Object. */\nconst RGBA4                          = 0x8056;\nconst RGB5_A1                        = 0x8057;\nconst RGB565                         = 0x8D62;\nconst DEPTH_COMPONENT16              = 0x81A5;\nconst STENCIL_INDEX                  = 0x1901;\nconst STENCIL_INDEX8                 = 0x8D48;\nconst DEPTH_STENCIL                  = 0x84F9;\nconst COLOR_ATTACHMENT0              = 0x8CE0;\nconst DEPTH_ATTACHMENT               = 0x8D00;\nconst STENCIL_ATTACHMENT             = 0x8D20;\nconst DEPTH_STENCIL_ATTACHMENT       = 0x821A;\n\n/* TextureWrapMode */\nconst CLAMP_TO_EDGE                  = 0x812F;\n\n/* TextureMagFilter */\nconst LINEAR                         = 0x2601;\n\n/**\n * The options for a framebuffer attachment.\n *\n * Note: For a `format` that is a texture include all the texture\n * options from {@link module:twgl.TextureOptions} for example\n * `min`, `mag`, `clamp`, etc... Note that unlike {@link module:twgl.TextureOptions}\n * `auto` defaults to `false` for attachment textures but `min` and `mag` default\n * to `gl.LINEAR` and `wrap` defaults to `CLAMP_TO_EDGE`\n *\n * @typedef {Object} AttachmentOptions\n * @property {number} [attachmentPoint] The attachment point. Defaults\n *   to `gl.COLOR_ATTACHMENT0 + ndx` unless type is a depth or stencil type\n *   then it's gl.DEPTH_ATTACHMENT or `gl.DEPTH_STENCIL_ATTACHMENT` depending\n *   on the format or attachment type.\n * @property {number} [format] The format. If one of `gl.RGBA4`,\n *   `gl.RGB565`, `gl.RGB5_A1`, `gl.DEPTH_COMPONENT16`,\n *   `gl.STENCIL_INDEX8` or `gl.DEPTH_STENCIL` then will create a\n *   renderbuffer. Otherwise will create a texture. Default = `gl.RGBA`\n * @property {number} [type] The type. Used for texture. Default = `gl.UNSIGNED_BYTE`.\n * @property {number} [target] The texture target for `gl.framebufferTexture2D`.\n *   Defaults to `gl.TEXTURE_2D`. Set to appropriate face for cube maps.\n * @property {number} [samples] The number of samples. Default = 1\n * @property {number} [level] level for `gl.framebufferTexture2D`. Defaults to 0.\n * @property {number} [layer] layer for `gl.framebufferTextureLayer`. Defaults to undefined.\n *   If set then `gl.framebufferTextureLayer` is called, if not then `gl.framebufferTexture2D`\n * @property {(WebGLRenderbuffer | WebGLTexture)} [attachment] An existing renderbuffer or texture.\n *    If provided will attach this Object. This allows you to share\n *    attachments across framebuffers.\n * @memberOf module:twgl\n * @mixes module:twgl.TextureOptions\n */\n\nconst defaultAttachments = [\n  { format: RGBA, type: UNSIGNED_BYTE, min: LINEAR, wrap: CLAMP_TO_EDGE, },\n  { format: DEPTH_STENCIL, },\n];\n\nconst attachmentsByFormat = {};\nattachmentsByFormat[DEPTH_STENCIL] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX] = STENCIL_ATTACHMENT;\nattachmentsByFormat[STENCIL_INDEX8] = STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT16] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT24] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH_COMPONENT32F] = DEPTH_ATTACHMENT;\nattachmentsByFormat[DEPTH24_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\nattachmentsByFormat[DEPTH32F_STENCIL8] = DEPTH_STENCIL_ATTACHMENT;\n\nfunction getAttachmentPointForFormat(format, internalFormat) {\n  return attachmentsByFormat[format] || attachmentsByFormat[internalFormat];\n}\n\nconst renderbufferFormats = {};\nrenderbufferFormats[RGBA4] = true;\nrenderbufferFormats[RGB5_A1] = true;\nrenderbufferFormats[RGB565] = true;\nrenderbufferFormats[DEPTH_STENCIL] = true;\nrenderbufferFormats[DEPTH_COMPONENT16] = true;\nrenderbufferFormats[STENCIL_INDEX] = true;\nrenderbufferFormats[STENCIL_INDEX8] = true;\n\nfunction isRenderbufferFormat(format) {\n  return renderbufferFormats[format];\n}\n\nconst MAX_COLOR_ATTACHMENT_POINTS = 32;  // even an 3090 only supports 8 but WebGL/OpenGL ES define constants for 32\n\nfunction isColorAttachmentPoint(attachmentPoint) {\n  return attachmentPoint >= COLOR_ATTACHMENT0 && attachmentPoint < COLOR_ATTACHMENT0 + MAX_COLOR_ATTACHMENT_POINTS;\n}\n\n/**\n * @typedef {Object} FramebufferInfo\n * @property {WebGLFramebuffer} framebuffer The WebGLFramebuffer for this framebufferInfo\n * @property {Array.<(WebGLRenderbuffer | WebGLTexture)>} attachments The created attachments in the same order as passed in to {@link module:twgl.createFramebufferInfo}.\n * @property {number} width The width of the framebuffer and its attachments\n * @property {number} height The width of the framebuffer and its attachments\n * @memberOf module:twgl\n */\n\n/**\n * Creates a framebuffer and attachments.\n *\n * This returns a {@link module:twgl.FramebufferInfo} because it needs to return the attachments as well as the framebuffer.\n * It also leaves the framebuffer it just created as the currently bound `FRAMEBUFFER`.\n * Note: If this is WebGL2 or if you called {@link module:twgl.addExtensionsToContext} then it will set the drawBuffers\n * to `[COLOR_ATTACHMENT0, COLOR_ATTACHMENT1, ...]` for how ever many color attachments were created.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n * Passing in a specific size\n *\n *     const width = 256;\n *     const height = 256;\n *     const fbi = twgl.createFramebufferInfo(gl, attachments, width, height);\n *\n * **Note!!** It is up to you to check if the framebuffer is renderable by calling `gl.checkFramebufferStatus`.\n * [WebGL1 only guarantees 3 combinations of attachments work](https://www.khronos.org/registry/webgl/specs/latest/1.0/#6.6).\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.AttachmentOptions[]} [attachments] which attachments to create. If not provided the default is a framebuffer with an\n *    `RGBA`, `UNSIGNED_BYTE` texture `COLOR_ATTACHMENT0` and a `DEPTH_STENCIL` renderbuffer `DEPTH_STENCIL_ATTACHMENT`.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @return {module:twgl.FramebufferInfo} the framebuffer and attachments.\n * @memberOf module:twgl/framebuffers\n */\nfunction createFramebufferInfo(gl, attachments, width, height) {\n  const target = FRAMEBUFFER;\n  const fb = gl.createFramebuffer();\n  gl.bindFramebuffer(target, fb);\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  attachments = attachments || defaultAttachments;\n  const usedColorAttachmentsPoints = [];\n  const framebufferInfo = {\n    framebuffer: fb,\n    attachments: [],\n    width: width,\n    height: height,\n  };\n\n  attachments.forEach(function(attachmentOptions, i) {\n    let attachment = attachmentOptions.attachment;\n    const samples = attachmentOptions.samples;\n    const format = attachmentOptions.format;\n    let attachmentPoint = attachmentOptions.attachmentPoint || getAttachmentPointForFormat(format, attachmentOptions.internalFormat);\n    if (!attachmentPoint) {\n      attachmentPoint = COLOR_ATTACHMENT0 + i;\n    }\n    if (isColorAttachmentPoint(attachmentPoint)) {\n      usedColorAttachmentsPoints.push(attachmentPoint);\n    }\n    if (!attachment) {\n      if (samples !== undefined || isRenderbufferFormat(format)) {\n        attachment = gl.createRenderbuffer();\n        gl.bindRenderbuffer(RENDERBUFFER, attachment);\n        if (samples > 1) {\n          gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n        } else {\n          gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n        }\n      } else {\n        const textureOptions = Object.assign({}, attachmentOptions);\n        textureOptions.width = width;\n        textureOptions.height = height;\n        if (textureOptions.auto === undefined) {\n          textureOptions.auto = false;\n          textureOptions.min = textureOptions.min || textureOptions.minMag || LINEAR;\n          textureOptions.mag = textureOptions.mag || textureOptions.minMag || LINEAR;\n          textureOptions.wrapS = textureOptions.wrapS || textureOptions.wrap || CLAMP_TO_EDGE;\n          textureOptions.wrapT = textureOptions.wrapT || textureOptions.wrap || CLAMP_TO_EDGE;\n        }\n        attachment = textures.createTexture(gl, textureOptions);\n      }\n    }\n    if (helper.isRenderbuffer(gl, attachment)) {\n      gl.framebufferRenderbuffer(target, attachmentPoint, RENDERBUFFER, attachment);\n    } else if (helper.isTexture(gl, attachment)) {\n      if (attachmentOptions.layer !== undefined) {\n        gl.framebufferTextureLayer(\n          target,\n          attachmentPoint,\n          attachment,\n          attachmentOptions.level || 0,\n          attachmentOptions.layer);\n      } else {\n        gl.framebufferTexture2D(\n            target,\n            attachmentPoint,\n            attachmentOptions.target || TEXTURE_2D,\n            attachment,\n            attachmentOptions.level || 0);\n      }\n    } else {\n      throw new Error('unknown attachment type');\n    }\n    framebufferInfo.attachments.push(attachment);\n  });\n  if (gl.drawBuffers) {\n    gl.drawBuffers(usedColorAttachmentsPoints);\n  }\n  return framebufferInfo;\n}\n\n/**\n * Resizes the attachments of a framebuffer.\n *\n * You need to pass in the same `attachments` as you passed in {@link module:twgl.createFramebufferInfo}\n * because TWGL has no idea the format/type of each attachment.\n *\n * The simplest usage\n *\n *     // create an RGBA/UNSIGNED_BYTE texture and DEPTH_STENCIL renderbuffer\n *     const fbi = twgl.createFramebufferInfo(gl);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments\n *         twgl.resizeFramebufferInfo(gl, fbi);\n *       }\n *\n * More complex usage\n *\n *     // create an RGB565 renderbuffer and a STENCIL_INDEX8 renderbuffer\n *     const attachments = [\n *       { format: RGB565, mag: NEAREST },\n *       { format: STENCIL_INDEX8 },\n *     ]\n *     const fbi = twgl.createFramebufferInfo(gl, attachments);\n *\n *     ...\n *\n *     function render() {\n *       if (twgl.resizeCanvasToDisplaySize(gl.canvas)) {\n *         // resize the attachments to match\n *         twgl.resizeFramebufferInfo(gl, fbi, attachments);\n *       }\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo} framebufferInfo a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n * @param {module:twgl.AttachmentOptions[]} [attachments] the same attachments options as passed to {@link module:twgl.createFramebufferInfo}.\n * @param {number} [width] the width for the attachments. Default = size of drawingBuffer\n * @param {number} [height] the height for the attachments. Default = size of drawingBuffer\n * @memberOf module:twgl/framebuffers\n */\nfunction resizeFramebufferInfo(gl, framebufferInfo, attachments, width, height) {\n  width  = width  || gl.drawingBufferWidth;\n  height = height || gl.drawingBufferHeight;\n  framebufferInfo.width = width;\n  framebufferInfo.height = height;\n  attachments = attachments || defaultAttachments;\n  attachments.forEach(function(attachmentOptions, ndx) {\n    const attachment = framebufferInfo.attachments[ndx];\n    const format = attachmentOptions.format;\n    const samples = attachmentOptions.samples;\n    if (samples !== undefined || helper.isRenderbuffer(gl, attachment)) {\n      gl.bindRenderbuffer(RENDERBUFFER, attachment);\n      if (samples > 1) {\n        gl.renderbufferStorageMultisample(RENDERBUFFER, samples, format, width, height);\n      } else {\n        gl.renderbufferStorage(RENDERBUFFER, format, width, height);\n      }\n    } else if (helper.isTexture(gl, attachment)) {\n      textures.resizeTexture(gl, attachment, attachmentOptions, width, height);\n    } else {\n      throw new Error('unknown attachment type');\n    }\n  });\n}\n\n/**\n * Binds a framebuffer\n *\n * This function pretty much solely exists because I spent hours\n * trying to figure out why something I wrote wasn't working only\n * to realize I forget to set the viewport dimensions.\n * My hope is this function will fix that.\n *\n * It is effectively the same as\n *\n *     gl.bindFramebuffer(gl.FRAMEBUFFER, someFramebufferInfo.framebuffer);\n *     gl.viewport(0, 0, someFramebufferInfo.width, someFramebufferInfo.height);\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.FramebufferInfo|null} [framebufferInfo] a framebufferInfo as returned from {@link module:twgl.createFramebufferInfo}.\n *   If falsy will bind the canvas.\n * @param {number} [target] The target. If not passed `gl.FRAMEBUFFER` will be used.\n * @memberOf module:twgl/framebuffers\n */\n\nfunction bindFramebufferInfo(gl, framebufferInfo, target) {\n  target = target || FRAMEBUFFER;\n  if (framebufferInfo) {\n    gl.bindFramebuffer(target, framebufferInfo.framebuffer);\n    gl.viewport(0, 0, framebufferInfo.width, framebufferInfo.height);\n  } else {\n    gl.bindFramebuffer(target, null);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n  }\n}\n\nexport {\n  bindFramebufferInfo,\n  createFramebufferInfo,\n  resizeFramebufferInfo,\n};\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/* eslint no-console: \"off\" */\n\n/**\n * Copy named properties\n *\n * @param {string[]} names names of properties to copy\n * @param {object} src object to copy properties from\n * @param {object} dst object to copy properties to\n * @private\n */\nfunction copyNamedProperties(names, src, dst) {\n  names.forEach(function(name) {\n    const value = src[name];\n    if (value !== undefined) {\n      dst[name] = value;\n    }\n  });\n}\n\n/**\n * Copies properties from source to dest only if a matching key is in dest\n *\n * @param {Object.<string, ?>} src the source\n * @param {Object.<string, ?>} dst the dest\n * @private\n */\nfunction copyExistingProperties(src, dst) {\n  Object.keys(dst).forEach(function(key) {\n    if (dst.hasOwnProperty(key) && src.hasOwnProperty(key)) {  /* eslint no-prototype-builtins: 0 */\n      dst[key] = src[key];\n    }\n  });\n}\n\nfunction error(...args) {\n  console.error(...args);\n}\n\nfunction warn(...args) {\n  console.warn(...args);\n}\n\nconst isTypeWeakMaps = new Map();\n\nfunction isType(object, type) {\n  if (!object || typeof object !== 'object') {\n    return false;\n  }\n  let weakMap = isTypeWeakMaps.get(type);\n  if (!weakMap) {\n    weakMap = new WeakMap();\n    isTypeWeakMaps.set(type, weakMap);\n  }\n  let isOfType = weakMap.get(object);\n  if (isOfType === undefined) {\n    const s = Object.prototype.toString.call(object);\n    isOfType = s.substring(8, s.length - 1) === type;\n    weakMap.set(object, isOfType);\n  }\n  return isOfType;\n}\n\nfunction isBuffer(gl, t) {\n  return typeof WebGLBuffer !== 'undefined' && isType(t, 'WebGLBuffer');\n}\n\nfunction isRenderbuffer(gl, t) {\n  return typeof WebGLRenderbuffer !== 'undefined' && isType(t, 'WebGLRenderbuffer');\n}\n\nfunction isShader(gl, t) {\n  return typeof WebGLShader !== 'undefined' && isType(t, 'WebGLShader');\n}\n\nfunction isTexture(gl, t) {\n  return typeof WebGLTexture !== 'undefined' && isType(t, 'WebGLTexture');\n}\n\nfunction isSampler(gl, t) {\n  return typeof WebGLSampler !== 'undefined' && isType(t, 'WebGLSampler');\n}\n\nexport {\n  copyExistingProperties,\n  copyNamedProperties,\n  error,\n  warn,\n  isBuffer,\n  isRenderbuffer,\n  isShader,\n  isTexture,\n  isSampler,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as v3 from './v3.js';\n\n/**\n * 4x4 Matrix math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new matrix. In other words you can do this\n *\n *     const mat = m4.translation([1, 2, 3]);  // Creates a new translation matrix\n *\n * or\n *\n *     const mat = m4.create();\n *     m4.translation([1, 2, 3], mat);  // Puts translation matrix in mat.\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any matrix as the destination. So for example\n *\n *     const mat = m4.identity();\n *     const trans = m4.translation([1, 2, 3]);\n *     m4.multiply(mat, trans, mat);  // Multiplies mat * trans and puts result in mat.\n *\n * @module twgl/m4\n */\nlet MatType = Float32Array;\n\n/**\n * A JavaScript array with 16 values or a Float32Array with 16 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/m4.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Mat4\n * @memberOf module:twgl/m4\n */\n\n/**\n * Sets the type this library creates for a Mat4\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Mat4\n * @memberOf module:twgl/m4\n */\nfunction setDefaultType(ctor) {\n  const oldType = MatType;\n  MatType = ctor;\n  return oldType;\n}\n\n/**\n * Negates a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} -m.\n * @memberOf module:twgl/m4\n */\nfunction negate(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = -m[ 0];\n  dst[ 1] = -m[ 1];\n  dst[ 2] = -m[ 2];\n  dst[ 3] = -m[ 3];\n  dst[ 4] = -m[ 4];\n  dst[ 5] = -m[ 5];\n  dst[ 6] = -m[ 6];\n  dst[ 7] = -m[ 7];\n  dst[ 8] = -m[ 8];\n  dst[ 9] = -m[ 9];\n  dst[10] = -m[10];\n  dst[11] = -m[11];\n  dst[12] = -m[12];\n  dst[13] = -m[13];\n  dst[14] = -m[14];\n  dst[15] = -m[15];\n\n  return dst;\n}\n\n/**\n * Creates a matrix.\n * @return {module:twgl/m4.Mat4} A new matrix.\n * @memberOf module:twgl/m4\n */\nfunction create() {\n  return new MatType(16).fill(0);\n}\n\n/**\n * Copies a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] The matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A copy of m.\n * @memberOf module:twgl/m4\n */\nfunction copy(m, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = m[ 0];\n  dst[ 1] = m[ 1];\n  dst[ 2] = m[ 2];\n  dst[ 3] = m[ 3];\n  dst[ 4] = m[ 4];\n  dst[ 5] = m[ 5];\n  dst[ 6] = m[ 6];\n  dst[ 7] = m[ 7];\n  dst[ 8] = m[ 8];\n  dst[ 9] = m[ 9];\n  dst[10] = m[10];\n  dst[11] = m[11];\n  dst[12] = m[12];\n  dst[13] = m[13];\n  dst[14] = m[14];\n  dst[15] = m[15];\n\n  return dst;\n}\n\n/**\n * Creates an n-by-n identity matrix.\n *\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} An n-by-n identity matrix.\n * @memberOf module:twgl/m4\n */\nfunction identity(dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Takes the transpose of a matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The transpose of m.\n * @memberOf module:twgl/m4\n */\n function transpose(m, dst) {\n  dst = dst || new MatType(16);\n  if (dst === m) {\n    let t;\n\n    t = m[1];\n    m[1] = m[4];\n    m[4] = t;\n\n    t = m[2];\n    m[2] = m[8];\n    m[8] = t;\n\n    t = m[3];\n    m[3] = m[12];\n    m[12] = t;\n\n    t = m[6];\n    m[6] = m[9];\n    m[9] = t;\n\n    t = m[7];\n    m[7] = m[13];\n    m[13] = t;\n\n    t = m[11];\n    m[11] = m[14];\n    m[14] = t;\n    return dst;\n  }\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  dst[ 0] = m00;\n  dst[ 1] = m10;\n  dst[ 2] = m20;\n  dst[ 3] = m30;\n  dst[ 4] = m01;\n  dst[ 5] = m11;\n  dst[ 6] = m21;\n  dst[ 7] = m31;\n  dst[ 8] = m02;\n  dst[ 9] = m12;\n  dst[10] = m22;\n  dst[11] = m32;\n  dst[12] = m03;\n  dst[13] = m13;\n  dst[14] = m23;\n  dst[15] = m33;\n\n  return dst;\n}\n\n/**\n * Computes the inverse of a 4-by-4 matrix.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The inverse of m.\n * @memberOf module:twgl/m4\n */\nfunction inverse(m, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n  const tmp_0  = m22 * m33;\n  const tmp_1  = m32 * m23;\n  const tmp_2  = m12 * m33;\n  const tmp_3  = m32 * m13;\n  const tmp_4  = m12 * m23;\n  const tmp_5  = m22 * m13;\n  const tmp_6  = m02 * m33;\n  const tmp_7  = m32 * m03;\n  const tmp_8  = m02 * m23;\n  const tmp_9  = m22 * m03;\n  const tmp_10 = m02 * m13;\n  const tmp_11 = m12 * m03;\n  const tmp_12 = m20 * m31;\n  const tmp_13 = m30 * m21;\n  const tmp_14 = m10 * m31;\n  const tmp_15 = m30 * m11;\n  const tmp_16 = m10 * m21;\n  const tmp_17 = m20 * m11;\n  const tmp_18 = m00 * m31;\n  const tmp_19 = m30 * m01;\n  const tmp_20 = m00 * m21;\n  const tmp_21 = m20 * m01;\n  const tmp_22 = m00 * m11;\n  const tmp_23 = m10 * m01;\n\n  const t0 = (tmp_0 * m11 + tmp_3 * m21 + tmp_4 * m31) -\n      (tmp_1 * m11 + tmp_2 * m21 + tmp_5 * m31);\n  const t1 = (tmp_1 * m01 + tmp_6 * m21 + tmp_9 * m31) -\n      (tmp_0 * m01 + tmp_7 * m21 + tmp_8 * m31);\n  const t2 = (tmp_2 * m01 + tmp_7 * m11 + tmp_10 * m31) -\n      (tmp_3 * m01 + tmp_6 * m11 + tmp_11 * m31);\n  const t3 = (tmp_5 * m01 + tmp_8 * m11 + tmp_11 * m21) -\n      (tmp_4 * m01 + tmp_9 * m11 + tmp_10 * m21);\n\n  const d = 1.0 / (m00 * t0 + m10 * t1 + m20 * t2 + m30 * t3);\n\n  dst[ 0] = d * t0;\n  dst[ 1] = d * t1;\n  dst[ 2] = d * t2;\n  dst[ 3] = d * t3;\n  dst[ 4] = d * ((tmp_1 * m10 + tmp_2 * m20 + tmp_5 * m30) -\n          (tmp_0 * m10 + tmp_3 * m20 + tmp_4 * m30));\n  dst[ 5] = d * ((tmp_0 * m00 + tmp_7 * m20 + tmp_8 * m30) -\n          (tmp_1 * m00 + tmp_6 * m20 + tmp_9 * m30));\n  dst[ 6] = d * ((tmp_3 * m00 + tmp_6 * m10 + tmp_11 * m30) -\n          (tmp_2 * m00 + tmp_7 * m10 + tmp_10 * m30));\n  dst[ 7] = d * ((tmp_4 * m00 + tmp_9 * m10 + tmp_10 * m20) -\n          (tmp_5 * m00 + tmp_8 * m10 + tmp_11 * m20));\n  dst[ 8] = d * ((tmp_12 * m13 + tmp_15 * m23 + tmp_16 * m33) -\n          (tmp_13 * m13 + tmp_14 * m23 + tmp_17 * m33));\n  dst[ 9] = d * ((tmp_13 * m03 + tmp_18 * m23 + tmp_21 * m33) -\n          (tmp_12 * m03 + tmp_19 * m23 + tmp_20 * m33));\n  dst[10] = d * ((tmp_14 * m03 + tmp_19 * m13 + tmp_22 * m33) -\n          (tmp_15 * m03 + tmp_18 * m13 + tmp_23 * m33));\n  dst[11] = d * ((tmp_17 * m03 + tmp_20 * m13 + tmp_23 * m23) -\n          (tmp_16 * m03 + tmp_21 * m13 + tmp_22 * m23));\n  dst[12] = d * ((tmp_14 * m22 + tmp_17 * m32 + tmp_13 * m12) -\n          (tmp_16 * m32 + tmp_12 * m12 + tmp_15 * m22));\n  dst[13] = d * ((tmp_20 * m32 + tmp_12 * m02 + tmp_19 * m22) -\n          (tmp_18 * m22 + tmp_21 * m32 + tmp_13 * m02));\n  dst[14] = d * ((tmp_18 * m12 + tmp_23 * m32 + tmp_15 * m02) -\n          (tmp_22 * m32 + tmp_14 * m02 + tmp_19 * m12));\n  dst[15] = d * ((tmp_22 * m22 + tmp_16 * m02 + tmp_21 * m12) -\n          (tmp_20 * m12 + tmp_23 * m22 + tmp_17 * m02));\n\n  return dst;\n}\n\n/**\n * Multiplies two 4-by-4 matrices with a on the left and b on the right\n * @param {module:twgl/m4.Mat4} a The matrix on the left.\n * @param {module:twgl/m4.Mat4} b The matrix on the right.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix product of a and b.\n * @memberOf module:twgl/m4\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new MatType(16);\n\n  const a00 = a[0];\n  const a01 = a[1];\n  const a02 = a[2];\n  const a03 = a[3];\n  const a10 = a[ 4 + 0];\n  const a11 = a[ 4 + 1];\n  const a12 = a[ 4 + 2];\n  const a13 = a[ 4 + 3];\n  const a20 = a[ 8 + 0];\n  const a21 = a[ 8 + 1];\n  const a22 = a[ 8 + 2];\n  const a23 = a[ 8 + 3];\n  const a30 = a[12 + 0];\n  const a31 = a[12 + 1];\n  const a32 = a[12 + 2];\n  const a33 = a[12 + 3];\n  const b00 = b[0];\n  const b01 = b[1];\n  const b02 = b[2];\n  const b03 = b[3];\n  const b10 = b[ 4 + 0];\n  const b11 = b[ 4 + 1];\n  const b12 = b[ 4 + 2];\n  const b13 = b[ 4 + 3];\n  const b20 = b[ 8 + 0];\n  const b21 = b[ 8 + 1];\n  const b22 = b[ 8 + 2];\n  const b23 = b[ 8 + 3];\n  const b30 = b[12 + 0];\n  const b31 = b[12 + 1];\n  const b32 = b[12 + 2];\n  const b33 = b[12 + 3];\n\n  dst[ 0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n  dst[ 1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n  dst[ 2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n  dst[ 3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n  dst[ 4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n  dst[ 5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n  dst[ 6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n  dst[ 7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n  dst[ 8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n  dst[ 9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n  dst[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n  dst[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n  dst[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n  dst[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n  dst[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n  dst[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n  return dst;\n}\n\n/**\n * Sets the translation component of a 4-by-4 matrix to the given\n * vector.\n * @param {module:twgl/m4.Mat4} a The matrix.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with translation set.\n * @memberOf module:twgl/m4\n */\nfunction setTranslation(a, v, dst) {\n  dst = dst || identity();\n  if (a !== dst) {\n    dst[ 0] = a[ 0];\n    dst[ 1] = a[ 1];\n    dst[ 2] = a[ 2];\n    dst[ 3] = a[ 3];\n    dst[ 4] = a[ 4];\n    dst[ 5] = a[ 5];\n    dst[ 6] = a[ 6];\n    dst[ 7] = a[ 7];\n    dst[ 8] = a[ 8];\n    dst[ 9] = a[ 9];\n    dst[10] = a[10];\n    dst[11] = a[11];\n  }\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Returns the translation component of a 4-by-4 matrix as a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The translation component of m.\n * @memberOf module:twgl/m4\n */\nfunction getTranslation(m, dst) {\n  dst = dst || v3.create();\n  dst[0] = m[12];\n  dst[1] = m[13];\n  dst[2] = m[14];\n  return dst;\n}\n\n/**\n * Returns an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} axis The axis 0 = x, 1 = y, 2 = z;\n * @return {module:twgl/v3.Vec3} [dst] vector.\n * @return {module:twgl/v3.Vec3} The axis component of m.\n * @memberOf module:twgl/m4\n */\nfunction getAxis(m, axis, dst) {\n  dst = dst || v3.create();\n  const off = axis * 4;\n  dst[0] = m[off + 0];\n  dst[1] = m[off + 1];\n  dst[2] = m[off + 2];\n  return dst;\n}\n\n/**\n * Sets an axis of a 4x4 matrix as a vector with 3 entries\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v the axis vector\n * @param {number} axis The axis  0 = x, 1 = y, 2 = z;\n * @param {module:twgl/m4.Mat4} [dst] The matrix to set. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The matrix with axis set.\n * @memberOf module:twgl/m4\n */\nfunction setAxis(a, v, axis, dst) {\n  if (dst !== a) {\n    dst = copy(a, dst);\n  }\n  const off = axis * 4;\n  dst[off + 0] = v[0];\n  dst[off + 1] = v[1];\n  dst[off + 2] = v[2];\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the angular height\n * of the frustum, the aspect ratio, and the near and far clipping planes.  The\n * arguments define a frustum extending in the negative z direction.  The given\n * angle is the vertical angle of the frustum, and the horizontal angle is\n * determined to produce the given aspect ratio.  The arguments near and far are\n * the distances to the near and far clipping planes.  Note that near and far\n * are not z coordinates, but rather they are distances along the negative\n * z-axis.  The matrix generated sends the viewing frustum to the unit box.\n * We assume a unit box extending from -1 to 1 in the x and y dimensions and\n * from 0 to 1 in the z dimension.\n * @param {number} fieldOfViewYInRadians The camera angle from top to bottom (in radians).\n * @param {number} aspect The aspect ratio width / height.\n * @param {number} zNear The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} zFar The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction perspective(fieldOfViewYInRadians, aspect, zNear, zFar, dst) {\n  dst = dst || new MatType(16);\n\n  const f = Math.tan(Math.PI * 0.5 - 0.5 * fieldOfViewYInRadians);\n  const rangeInv = 1.0 / (zNear - zFar);\n\n  dst[0]  = f / aspect;\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = f;\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = (zNear + zFar) * rangeInv;\n  dst[11] = -1;\n\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = zNear * zFar * rangeInv * 2;\n  dst[15] = 0;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 orthogonal transformation matrix given the left, right,\n * bottom, and top dimensions of the near clipping plane as well as the\n * near and far clipping plane distances.\n * @param {number} left Left side of the near clipping plane viewport.\n * @param {number} right Right side of the near clipping plane viewport.\n * @param {number} bottom Bottom of the near clipping plane viewport.\n * @param {number} top Top of the near clipping plane viewport.\n * @param {number} near The depth (negative z coordinate)\n *     of the near clipping plane.\n * @param {number} far The depth (negative z coordinate)\n *     of the far clipping plane.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective matrix.\n * @memberOf module:twgl/m4\n */\nfunction ortho(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  dst[0]  = 2 / (right - left);\n  dst[1]  = 0;\n  dst[2]  = 0;\n  dst[3]  = 0;\n\n  dst[4]  = 0;\n  dst[5]  = 2 / (top - bottom);\n  dst[6]  = 0;\n  dst[7]  = 0;\n\n  dst[8]  = 0;\n  dst[9]  = 0;\n  dst[10] = 2 / (near - far);\n  dst[11] = 0;\n\n  dst[12] = (right + left) / (left - right);\n  dst[13] = (top + bottom) / (bottom - top);\n  dst[14] = (far + near) / (near - far);\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Computes a 4-by-4 perspective transformation matrix given the left, right,\n * top, bottom, near and far clipping planes. The arguments define a frustum\n * extending in the negative z direction. The arguments near and far are the\n * distances to the near and far clipping planes. Note that near and far are not\n * z coordinates, but rather they are distances along the negative z-axis. The\n * matrix generated sends the viewing frustum to the unit box. We assume a unit\n * box extending from -1 to 1 in the x and y dimensions and from 0 to 1 in the z\n * dimension.\n * @param {number} left The x coordinate of the left plane of the box.\n * @param {number} right The x coordinate of the right plane of the box.\n * @param {number} bottom The y coordinate of the bottom plane of the box.\n * @param {number} top The y coordinate of the right plane of the box.\n * @param {number} near The negative z coordinate of the near plane of the box.\n * @param {number} far The negative z coordinate of the far plane of the box.\n * @param {module:twgl/m4.Mat4} [dst] Output matrix. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The perspective projection matrix.\n * @memberOf module:twgl/m4\n */\nfunction frustum(left, right, bottom, top, near, far, dst) {\n  dst = dst || new MatType(16);\n\n  const dx = (right - left);\n  const dy = (top - bottom);\n  const dz = (near - far);\n\n  dst[ 0] = 2 * near / dx;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 2 * near / dy;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = (left + right) / dx;\n  dst[ 9] = (top + bottom) / dy;\n  dst[10] = far / dz;\n  dst[11] = -1;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = near * far / dz;\n  dst[15] = 0;\n\n  return dst;\n}\n\nlet xAxis;\nlet yAxis;\nlet zAxis;\n\n/**\n * Computes a 4-by-4 look-at transformation.\n *\n * This is a matrix which positions the camera itself. If you want\n * a view matrix (a matrix which moves things in front of the camera)\n * take the inverse of this.\n *\n * @param {module:twgl/v3.Vec3} eye The position of the eye.\n * @param {module:twgl/v3.Vec3} target The position meant to be viewed.\n * @param {module:twgl/v3.Vec3} up A vector pointing up.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The look-at matrix.\n * @memberOf module:twgl/m4\n */\nfunction lookAt(eye, target, up, dst) {\n  dst = dst || new MatType(16);\n\n  xAxis = xAxis || v3.create();\n  yAxis = yAxis || v3.create();\n  zAxis = zAxis || v3.create();\n\n  v3.normalize(\n      v3.subtract(eye, target, zAxis), zAxis);\n  v3.normalize(v3.cross(up, zAxis, xAxis), xAxis);\n  v3.normalize(v3.cross(zAxis, xAxis, yAxis), yAxis);\n\n  dst[ 0] = xAxis[0];\n  dst[ 1] = xAxis[1];\n  dst[ 2] = xAxis[2];\n  dst[ 3] = 0;\n  dst[ 4] = yAxis[0];\n  dst[ 5] = yAxis[1];\n  dst[ 6] = yAxis[2];\n  dst[ 7] = 0;\n  dst[ 8] = zAxis[0];\n  dst[ 9] = zAxis[1];\n  dst[10] = zAxis[2];\n  dst[11] = 0;\n  dst[12] = eye[0];\n  dst[13] = eye[1];\n  dst[14] = eye[2];\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which translates by the given vector v.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translation matrix.\n * @memberOf module:twgl/m4\n */\nfunction translation(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = v[0];\n  dst[13] = v[1];\n  dst[14] = v[2];\n  dst[15] = 1;\n  return dst;\n}\n\n/**\n * Translates the given 4-by-4 matrix by the given vector v.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The vector by\n *     which to translate.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The translated matrix.\n * @memberOf module:twgl/m4\n */\nfunction translate(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const m30 = m[3 * 4 + 0];\n  const m31 = m[3 * 4 + 1];\n  const m32 = m[3 * 4 + 2];\n  const m33 = m[3 * 4 + 3];\n\n  if (m !== dst) {\n    dst[ 0] = m00;\n    dst[ 1] = m01;\n    dst[ 2] = m02;\n    dst[ 3] = m03;\n    dst[ 4] = m10;\n    dst[ 5] = m11;\n    dst[ 6] = m12;\n    dst[ 7] = m13;\n    dst[ 8] = m20;\n    dst[ 9] = m21;\n    dst[10] = m22;\n    dst[11] = m23;\n  }\n\n  dst[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n  dst[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n  dst[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n  dst[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the x-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationX(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = 1;\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = c;\n  dst[ 6] = s;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = -s;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the x-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateX(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[4]  = c * m10 + s * m20;\n  dst[5]  = c * m11 + s * m21;\n  dst[6]  = c * m12 + s * m22;\n  dst[7]  = c * m13 + s * m23;\n  dst[8]  = c * m20 - s * m10;\n  dst[9]  = c * m21 - s * m11;\n  dst[10] = c * m22 - s * m12;\n  dst[11] = c * m23 - s * m13;\n\n  if (m !== dst) {\n    dst[ 0] = m[ 0];\n    dst[ 1] = m[ 1];\n    dst[ 2] = m[ 2];\n    dst[ 3] = m[ 3];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the y-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationY(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = 0;\n  dst[ 2] = -s;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = 1;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = s;\n  dst[ 9] = 0;\n  dst[10] = c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the y-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateY(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m20 = m[2 * 4 + 0];\n  const m21 = m[2 * 4 + 1];\n  const m22 = m[2 * 4 + 2];\n  const m23 = m[2 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 - s * m20;\n  dst[ 1] = c * m01 - s * m21;\n  dst[ 2] = c * m02 - s * m22;\n  dst[ 3] = c * m03 - s * m23;\n  dst[ 8] = c * m20 + s * m00;\n  dst[ 9] = c * m21 + s * m01;\n  dst[10] = c * m22 + s * m02;\n  dst[11] = c * m23 + s * m03;\n\n  if (m !== dst) {\n    dst[ 4] = m[ 4];\n    dst[ 5] = m[ 5];\n    dst[ 6] = m[ 6];\n    dst[ 7] = m[ 7];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the z-axis by the given angle.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotation matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotationZ(angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c;\n  dst[ 1] = s;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = -s;\n  dst[ 5] = c;\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = 1;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the z-axis by the given\n * angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction rotateZ(m, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  const m00 = m[0 * 4 + 0];\n  const m01 = m[0 * 4 + 1];\n  const m02 = m[0 * 4 + 2];\n  const m03 = m[0 * 4 + 3];\n  const m10 = m[1 * 4 + 0];\n  const m11 = m[1 * 4 + 1];\n  const m12 = m[1 * 4 + 2];\n  const m13 = m[1 * 4 + 3];\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n\n  dst[ 0] = c * m00 + s * m10;\n  dst[ 1] = c * m01 + s * m11;\n  dst[ 2] = c * m02 + s * m12;\n  dst[ 3] = c * m03 + s * m13;\n  dst[ 4] = c * m10 - s * m00;\n  dst[ 5] = c * m11 - s * m01;\n  dst[ 6] = c * m12 - s * m02;\n  dst[ 7] = c * m13 - s * m03;\n\n  if (m !== dst) {\n    dst[ 8] = m[ 8];\n    dst[ 9] = m[ 9];\n    dst[10] = m[10];\n    dst[11] = m[11];\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which rotates around the given axis by the given\n * angle.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} A matrix which rotates angle radians\n *     around the axis.\n * @memberOf module:twgl/m4\n */\nfunction axisRotation(axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  dst[ 0] = xx + (1 - xx) * c;\n  dst[ 1] = x * y * oneMinusCosine + z * s;\n  dst[ 2] = x * z * oneMinusCosine - y * s;\n  dst[ 3] = 0;\n  dst[ 4] = x * y * oneMinusCosine - z * s;\n  dst[ 5] = yy + (1 - yy) * c;\n  dst[ 6] = y * z * oneMinusCosine + x * s;\n  dst[ 7] = 0;\n  dst[ 8] = x * z * oneMinusCosine + y * s;\n  dst[ 9] = y * z * oneMinusCosine - x * s;\n  dst[10] = zz + (1 - zz) * c;\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Rotates the given 4-by-4 matrix around the given axis by the\n * given angle.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} axis The axis\n *     about which to rotate.\n * @param {number} angleInRadians The angle by which to rotate (in radians).\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The rotated matrix.\n * @memberOf module:twgl/m4\n */\nfunction axisRotate(m, axis, angleInRadians, dst) {\n  dst = dst || new MatType(16);\n\n  let x = axis[0];\n  let y = axis[1];\n  let z = axis[2];\n  const n = Math.sqrt(x * x + y * y + z * z);\n  x /= n;\n  y /= n;\n  z /= n;\n  const xx = x * x;\n  const yy = y * y;\n  const zz = z * z;\n  const c = Math.cos(angleInRadians);\n  const s = Math.sin(angleInRadians);\n  const oneMinusCosine = 1 - c;\n\n  const r00 = xx + (1 - xx) * c;\n  const r01 = x * y * oneMinusCosine + z * s;\n  const r02 = x * z * oneMinusCosine - y * s;\n  const r10 = x * y * oneMinusCosine - z * s;\n  const r11 = yy + (1 - yy) * c;\n  const r12 = y * z * oneMinusCosine + x * s;\n  const r20 = x * z * oneMinusCosine + y * s;\n  const r21 = y * z * oneMinusCosine - x * s;\n  const r22 = zz + (1 - zz) * c;\n\n  const m00 = m[0];\n  const m01 = m[1];\n  const m02 = m[2];\n  const m03 = m[3];\n  const m10 = m[4];\n  const m11 = m[5];\n  const m12 = m[6];\n  const m13 = m[7];\n  const m20 = m[8];\n  const m21 = m[9];\n  const m22 = m[10];\n  const m23 = m[11];\n\n  dst[ 0] = r00 * m00 + r01 * m10 + r02 * m20;\n  dst[ 1] = r00 * m01 + r01 * m11 + r02 * m21;\n  dst[ 2] = r00 * m02 + r01 * m12 + r02 * m22;\n  dst[ 3] = r00 * m03 + r01 * m13 + r02 * m23;\n  dst[ 4] = r10 * m00 + r11 * m10 + r12 * m20;\n  dst[ 5] = r10 * m01 + r11 * m11 + r12 * m21;\n  dst[ 6] = r10 * m02 + r11 * m12 + r12 * m22;\n  dst[ 7] = r10 * m03 + r11 * m13 + r12 * m23;\n  dst[ 8] = r20 * m00 + r21 * m10 + r22 * m20;\n  dst[ 9] = r20 * m01 + r21 * m11 + r22 * m21;\n  dst[10] = r20 * m02 + r21 * m12 + r22 * m22;\n  dst[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Creates a 4-by-4 matrix which scales in each dimension by an amount given by\n * the corresponding entry in the given vector; assumes the vector has three\n * entries.\n * @param {module:twgl/v3.Vec3} v A vector of\n *     three entries specifying the factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaling matrix.\n * @memberOf module:twgl/m4\n */\nfunction scaling(v, dst) {\n  dst = dst || new MatType(16);\n\n  dst[ 0] = v[0];\n  dst[ 1] = 0;\n  dst[ 2] = 0;\n  dst[ 3] = 0;\n  dst[ 4] = 0;\n  dst[ 5] = v[1];\n  dst[ 6] = 0;\n  dst[ 7] = 0;\n  dst[ 8] = 0;\n  dst[ 9] = 0;\n  dst[10] = v[2];\n  dst[11] = 0;\n  dst[12] = 0;\n  dst[13] = 0;\n  dst[14] = 0;\n  dst[15] = 1;\n\n  return dst;\n}\n\n/**\n * Scales the given 4-by-4 matrix in each dimension by an amount\n * given by the corresponding entry in the given vector; assumes the vector has\n * three entries.\n * @param {module:twgl/m4.Mat4} m The matrix to be modified.\n * @param {module:twgl/v3.Vec3} v A vector of three entries specifying the\n *     factor by which to scale in each dimension.\n * @param {module:twgl/m4.Mat4} [dst] matrix to hold result. If not passed a new one is created.\n * @return {module:twgl/m4.Mat4} The scaled matrix.\n * @memberOf module:twgl/m4\n */\nfunction scale(m, v, dst) {\n  dst = dst || new MatType(16);\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[ 0] = v0 * m[0 * 4 + 0];\n  dst[ 1] = v0 * m[0 * 4 + 1];\n  dst[ 2] = v0 * m[0 * 4 + 2];\n  dst[ 3] = v0 * m[0 * 4 + 3];\n  dst[ 4] = v1 * m[1 * 4 + 0];\n  dst[ 5] = v1 * m[1 * 4 + 1];\n  dst[ 6] = v1 * m[1 * 4 + 2];\n  dst[ 7] = v1 * m[1 * 4 + 3];\n  dst[ 8] = v2 * m[2 * 4 + 0];\n  dst[ 9] = v2 * m[2 * 4 + 1];\n  dst[10] = v2 * m[2 * 4 + 2];\n  dst[11] = v2 * m[2 * 4 + 3];\n\n  if (m !== dst) {\n    dst[12] = m[12];\n    dst[13] = m[13];\n    dst[14] = m[14];\n    dst[15] = m[15];\n  }\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries,\n * interprets the vector as a point, transforms that point by the matrix, and\n * returns the result as a vector with 3 entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The point.\n * @param {module:twgl/v3.Vec3} [dst] optional vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed point.\n * @memberOf module:twgl/m4\n */\nfunction transformPoint(m, v, dst) {\n  dst = dst || v3.create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n  const d = v0 * m[0 * 4 + 3] + v1 * m[1 * 4 + 3] + v2 * m[2 * 4 + 3] + m[3 * 4 + 3];\n\n  dst[0] = (v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0] + m[3 * 4 + 0]) / d;\n  dst[1] = (v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1] + m[3 * 4 + 1]) / d;\n  dst[2] = (v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2] + m[3 * 4 + 2]) / d;\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix and a vector with 3 entries, interprets the vector as a\n * direction, transforms that direction by the matrix, and returns the result;\n * assumes the transformation of 3-dimensional space represented by the matrix\n * is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion. Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The direction.\n * @param {module:twgl/v3.Vec3} [dst] optional Vec3 to store result. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed direction.\n * @memberOf module:twgl/m4\n */\nfunction transformDirection(m, v, dst) {\n  dst = dst || v3.create();\n\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * m[0 * 4 + 0] + v1 * m[1 * 4 + 0] + v2 * m[2 * 4 + 0];\n  dst[1] = v0 * m[0 * 4 + 1] + v1 * m[1 * 4 + 1] + v2 * m[2 * 4 + 1];\n  dst[2] = v0 * m[0 * 4 + 2] + v1 * m[1 * 4 + 2] + v2 * m[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Takes a 4-by-4 matrix m and a vector v with 3 entries, interprets the vector\n * as a normal to a surface, and computes a vector which is normal upon\n * transforming that surface by the matrix. The effect of this function is the\n * same as transforming v (as a direction) by the inverse-transpose of m.  This\n * function assumes the transformation of 3-dimensional space represented by the\n * matrix is parallel-preserving, i.e. any combination of rotation, scaling and\n * translation, but not a perspective distortion.  Returns a vector with 3\n * entries.\n * @param {module:twgl/m4.Mat4} m The matrix.\n * @param {module:twgl/v3.Vec3} v The normal.\n * @param {module:twgl/v3.Vec3} [dst] The direction. If not passed a new one is created.\n * @return {module:twgl/v3.Vec3} The transformed normal.\n * @memberOf module:twgl/m4\n */\nfunction transformNormal(m, v, dst) {\n  dst = dst || v3.create();\n  const mi = inverse(m);\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\nexport {\n  axisRotate,\n  axisRotation,\n  copy,\n  create,\n  frustum,\n  getAxis,\n  getTranslation,\n  identity,\n  inverse,\n  lookAt,\n  multiply,\n  negate,\n  ortho,\n  perspective,\n  rotateX,\n  rotateY,\n  rotateZ,\n  rotationX,\n  rotationY,\n  rotationZ,\n  scale,\n  scaling,\n  setAxis,\n  setDefaultType,\n  setTranslation,\n  transformDirection,\n  transformNormal,\n  transformPoint,\n  translate,\n  translation,\n  transpose,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Various functions to make simple primitives\n *\n * note: Most primitive functions come in 3 styles\n *\n * *  `createSomeShapeBufferInfo`\n *\n *    These functions are almost always the functions you want to call. They\n *    create vertices then make WebGLBuffers and create {@link module:twgl.AttribInfo}s\n *    returning a {@link module:twgl.BufferInfo} you can pass to {@link module:twgl.setBuffersAndAttributes}\n *    and {@link module:twgl.drawBufferInfo} etc...\n *\n * *  `createSomeShapeBuffers`\n *\n *    These create WebGLBuffers and put your data in them but nothing else.\n *    It's a shortcut to doing it yourself if you don't want to use\n *    the higher level functions.\n *\n * *  `createSomeShapeVertices`\n *\n *    These just create vertices, no buffers. This allows you to manipulate the vertices\n *    or add more data before generating a {@link module:twgl.BufferInfo}. Once you're finished\n *    manipulating the vertices call {@link module:twgl.createBufferInfoFromArrays}.\n *\n *    example:\n *\n *        const arrays = twgl.primitives.createPlaneVertices(1);\n *        twgl.primitives.reorientVertices(arrays, m4.rotationX(Math.PI * 0.5));\n *        const bufferInfo = twgl.createBufferInfoFromArrays(gl, arrays);\n *\n * @module twgl/primitives\n */\nimport * as attributes from './attributes.js';\nimport * as helper from './helper.js';\nimport * as typedArrays from './typedarrays.js';\nimport * as m4 from './m4.js';\nimport * as v3 from './v3.js';\n\nconst getArray = attributes.getArray_;  // eslint-disable-line\nconst getNumComponents = attributes.getNumComponents_;  // eslint-disable-line\n\n/**\n * @typedef {(Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array)} TypedArray\n */\n\n/**\n * Add `push` to a typed array. It just keeps a 'cursor'\n * and allows use to `push` values into the array so we\n * don't have to manually compute offsets\n * @param {TypedArray} typedArray TypedArray to augment\n * @param {number} numComponents number of components.\n * @private\n */\nfunction augmentTypedArray(typedArray, numComponents) {\n  let cursor = 0;\n  typedArray.push = function() {\n    for (let ii = 0; ii < arguments.length; ++ii) {\n      const value = arguments[ii];\n      if (value instanceof Array || typedArrays.isArrayBuffer(value)) {\n        for (let jj = 0; jj < value.length; ++jj) {\n          typedArray[cursor++] = value[jj];\n        }\n      } else {\n        typedArray[cursor++] = value;\n      }\n    }\n  };\n  typedArray.reset = function(opt_index) {\n    cursor = opt_index || 0;\n  };\n  typedArray.numComponents = numComponents;\n  Object.defineProperty(typedArray, 'numElements', {\n    get: function() {\n      return this.length / this.numComponents | 0;\n    },\n  });\n  return typedArray;\n}\n\n/**\n * creates a typed array with a `push` function attached\n * so that you can easily *push* values.\n *\n * `push` can take multiple arguments. If an argument is an array each element\n * of the array will be added to the typed array.\n *\n * Example:\n *\n *     const array = createAugmentedTypedArray(3, 2);  // creates a Float32Array with 6 values\n *     array.push(1, 2, 3);\n *     array.push([4, 5, 6]);\n *     // array now contains [1, 2, 3, 4, 5, 6]\n *\n * Also has `numComponents` and `numElements` properties.\n *\n * @param {number} numComponents number of components\n * @param {number} numElements number of elements. The total size of the array will be `numComponents * numElements`.\n * @param {constructor} opt_type A constructor for the type. Default = `Float32Array`.\n * @return {ArrayBufferView} A typed array.\n * @memberOf module:twgl/primitives\n */\nfunction createAugmentedTypedArray(numComponents, numElements, opt_type) {\n  const Type = opt_type || Float32Array;\n  return augmentTypedArray(new Type(numComponents * numElements), numComponents);\n}\n\nfunction allButIndices(name) {\n  return name !== \"indices\";\n}\n\n/**\n * Given indexed vertices creates a new set of vertices un-indexed by expanding the indexed vertices.\n * @param {Object.<string, TypedArray>} vertices The indexed vertices to deindex\n * @return {Object.<string, TypedArray>} The deindexed vertices\n * @memberOf module:twgl/primitives\n */\nfunction deindexVertices(vertices) {\n  const indices = vertices.indices;\n  const newVertices = {};\n  const numElements = indices.length;\n\n  function expandToUnindexed(channel) {\n    const srcBuffer = vertices[channel];\n    const numComponents = srcBuffer.numComponents;\n    const dstBuffer = createAugmentedTypedArray(numComponents, numElements, srcBuffer.constructor);\n    for (let ii = 0; ii < numElements; ++ii) {\n      const ndx = indices[ii];\n      const offset = ndx * numComponents;\n      for (let jj = 0; jj < numComponents; ++jj) {\n        dstBuffer.push(srcBuffer[offset + jj]);\n      }\n    }\n    newVertices[channel] = dstBuffer;\n  }\n\n  Object.keys(vertices).filter(allButIndices).forEach(expandToUnindexed);\n\n  return newVertices;\n}\n\n/**\n * flattens the normals of deindexed vertices in place.\n * @param {Object.<string, TypedArray>} vertices The deindexed vertices who's normals to flatten\n * @return {Object.<string, TypedArray>} The flattened vertices (same as was passed in)\n * @memberOf module:twgl/primitives\n */\nfunction flattenNormals(vertices) {\n  if (vertices.indices) {\n    throw new Error('can not flatten normals of indexed vertices. deindex them first');\n  }\n\n  const normals = vertices.normal;\n  const numNormals = normals.length;\n  for (let ii = 0; ii < numNormals; ii += 9) {\n    // pull out the 3 normals for this triangle\n    const nax = normals[ii + 0];\n    const nay = normals[ii + 1];\n    const naz = normals[ii + 2];\n\n    const nbx = normals[ii + 3];\n    const nby = normals[ii + 4];\n    const nbz = normals[ii + 5];\n\n    const ncx = normals[ii + 6];\n    const ncy = normals[ii + 7];\n    const ncz = normals[ii + 8];\n\n    // add them\n    let nx = nax + nbx + ncx;\n    let ny = nay + nby + ncy;\n    let nz = naz + nbz + ncz;\n\n    // normalize them\n    const length = Math.sqrt(nx * nx + ny * ny + nz * nz);\n\n    nx /= length;\n    ny /= length;\n    nz /= length;\n\n    // copy them back in\n    normals[ii + 0] = nx;\n    normals[ii + 1] = ny;\n    normals[ii + 2] = nz;\n\n    normals[ii + 3] = nx;\n    normals[ii + 4] = ny;\n    normals[ii + 5] = nz;\n\n    normals[ii + 6] = nx;\n    normals[ii + 7] = ny;\n    normals[ii + 8] = nz;\n  }\n\n  return vertices;\n}\n\nfunction applyFuncToV3Array(array, matrix, fn) {\n  const len = array.length;\n  const tmp = new Float32Array(3);\n  for (let ii = 0; ii < len; ii += 3) {\n    fn(matrix, [array[ii], array[ii + 1], array[ii + 2]], tmp);\n    array[ii    ] = tmp[0];\n    array[ii + 1] = tmp[1];\n    array[ii + 2] = tmp[2];\n  }\n}\n\nfunction transformNormal(mi, v, dst) {\n  dst = dst || v3.create();\n  const v0 = v[0];\n  const v1 = v[1];\n  const v2 = v[2];\n\n  dst[0] = v0 * mi[0 * 4 + 0] + v1 * mi[0 * 4 + 1] + v2 * mi[0 * 4 + 2];\n  dst[1] = v0 * mi[1 * 4 + 0] + v1 * mi[1 * 4 + 1] + v2 * mi[1 * 4 + 2];\n  dst[2] = v0 * mi[2 * 4 + 0] + v1 * mi[2 * 4 + 1] + v2 * mi[2 * 4 + 2];\n\n  return dst;\n}\n\n/**\n * Reorients directions by the given matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientDirections(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformDirection);\n  return array;\n}\n\n/**\n * Reorients normals by the inverse-transpose of the given\n * matrix..\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientNormals(array, matrix) {\n  applyFuncToV3Array(array, m4.inverse(matrix), transformNormal);\n  return array;\n}\n\n/**\n * Reorients positions by the given matrix. In other words, it\n * multiplies each vertex by the given matrix.\n * @param {(number[]|TypedArray)} array The array. Assumes value floats per element.\n * @param {module:twgl/m4.Mat4} matrix A matrix to multiply by.\n * @return {(number[]|TypedArray)} the same array that was passed in\n * @memberOf module:twgl/primitives\n */\nfunction reorientPositions(array, matrix) {\n  applyFuncToV3Array(array, matrix, m4.transformPoint);\n  return array;\n}\n\n/**\n * @typedef {(number[]|TypedArray)} NativeArrayOrTypedArray\n */\n\n/**\n * Reorients arrays by the given matrix. Assumes arrays have\n * names that contains 'pos' could be reoriented as positions,\n * 'binorm' or 'tan' as directions, and 'norm' as normals.\n *\n * @param {Object.<string, NativeArrayOrTypedArray>} arrays The vertices to reorient\n * @param {module:twgl/m4.Mat4} matrix matrix to reorient by.\n * @return {Object.<string, NativeArrayOrTypedArray>} same arrays that were passed in.\n * @memberOf module:twgl/primitives\n */\nfunction reorientVertices(arrays, matrix) {\n  Object.keys(arrays).forEach(function(name) {\n    const array = arrays[name];\n    if (name.indexOf(\"pos\") >= 0) {\n      reorientPositions(array, matrix);\n    } else if (name.indexOf(\"tan\") >= 0 || name.indexOf(\"binorm\") >= 0) {\n      reorientDirections(array, matrix);\n    } else if (name.indexOf(\"norm\") >= 0) {\n      reorientNormals(array, matrix);\n    }\n  });\n  return arrays;\n}\n\n/**\n * Creates XY quad BufferInfo\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, WebGLBuffer>} the created XY Quad BufferInfo\n * @memberOf module:twgl/primitives\n * @function createXYQuadBuffers\n */\n\n/**\n * Creates XY quad Buffers\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadBufferInfo(gl, 1, 0, 0.5);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {module:twgl.BufferInfo} the created XY Quad buffers\n * @memberOf module:twgl/primitives\n * @function createXYQuadBufferInfo\n */\n\n/**\n * Creates XY quad vertices\n *\n * The default with no parameters will return a 2x2 quad with values from -1 to +1.\n * If you want a unit quad with that goes from 0 to 1 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0.5, 0.5);\n *\n * If you want a unit quad centered above 0,0 you'd call it with\n *\n *     twgl.primitives.createXYQuadVertices(1, 0, 0.5);\n *\n * @param {number} [size] the size across the quad. Defaults to 2 which means vertices will go from -1 to +1\n * @param {number} [xOffset] the amount to offset the quad in X\n * @param {number} [yOffset] the amount to offset the quad in Y\n * @return {Object.<string, TypedArray>} the created XY Quad vertices\n * @memberOf module:twgl/primitives\n */\nfunction createXYQuadVertices(size, xOffset, yOffset) {\n  size = size || 2;\n  xOffset = xOffset || 0;\n  yOffset = yOffset || 0;\n  size *= 0.5;\n  return {\n    position: {\n      numComponents: 2,\n      data: [\n        xOffset + -1 * size, yOffset + -1 * size,\n        xOffset +  1 * size, yOffset + -1 * size,\n        xOffset + -1 * size, yOffset +  1 * size,\n        xOffset +  1 * size, yOffset +  1 * size,\n      ],\n    },\n    normal: [\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n      0, 0, 1,\n    ],\n    texcoord: [\n      0, 0,\n      1, 0,\n      0, 1,\n      1, 1,\n    ],\n    indices: [ 0, 1, 2, 2, 1, 3 ],\n  };\n}\n\n/**\n * Creates XZ plane BufferInfo.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {module:twgl.BufferInfo} The created plane BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createPlaneBufferInfo\n */\n\n/**\n * Creates XZ plane buffers.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, WebGLBuffer>} The created plane buffers.\n * @memberOf module:twgl/primitives\n * @function createPlaneBuffers\n */\n\n/**\n * Creates XZ plane vertices.\n *\n * The created plane has position, normal, and texcoord data\n *\n * @param {number} [width] Width of the plane. Default = 1\n * @param {number} [depth] Depth of the plane. Default = 1\n * @param {number} [subdivisionsWidth] Number of steps across the plane. Default = 1\n * @param {number} [subdivisionsDepth] Number of steps down the plane. Default = 1\n * @param {module:twgl/m4.Mat4} [matrix] A matrix by which to multiply all the vertices.\n * @return {Object.<string, TypedArray>} The created plane vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createPlaneVertices(\n    width,\n    depth,\n    subdivisionsWidth,\n    subdivisionsDepth,\n    matrix) {\n  width = width || 1;\n  depth = depth || 1;\n  subdivisionsWidth = subdivisionsWidth || 1;\n  subdivisionsDepth = subdivisionsDepth || 1;\n  matrix = matrix || m4.identity();\n\n  const numVertices = (subdivisionsWidth + 1) * (subdivisionsDepth + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  for (let z = 0; z <= subdivisionsDepth; z++) {\n    for (let x = 0; x <= subdivisionsWidth; x++) {\n      const u = x / subdivisionsWidth;\n      const v = z / subdivisionsDepth;\n      positions.push(\n          width * u - width * 0.5,\n          0,\n          depth * v - depth * 0.5);\n      normals.push(0, 1, 0);\n      texcoords.push(u, v);\n    }\n  }\n\n  const numVertsAcross = subdivisionsWidth + 1;\n  const indices = createAugmentedTypedArray(\n      3, subdivisionsWidth * subdivisionsDepth * 2, Uint16Array);\n\n  for (let z = 0; z < subdivisionsDepth; z++) {  // eslint-disable-line\n    for (let x = 0; x < subdivisionsWidth; x++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (z + 0) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x,\n          (z + 0) * numVertsAcross + x + 1);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (z + 1) * numVertsAcross + x,\n          (z + 1) * numVertsAcross + x + 1,\n          (z + 0) * numVertsAcross + x + 1);\n    }\n  }\n\n  const arrays = reorientVertices({\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  }, matrix);\n  return arrays;\n}\n\n/**\n * Creates sphere BufferInfo.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {module:twgl.BufferInfo} The created sphere BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createSphereBufferInfo\n */\n\n/**\n * Creates sphere buffers.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, WebGLBuffer>} The created sphere buffers.\n * @memberOf module:twgl/primitives\n * @function createSphereBuffers\n */\n\n/**\n * Creates sphere vertices.\n *\n * The created sphere has position, normal, and texcoord data\n *\n * @param {number} radius radius of the sphere.\n * @param {number} subdivisionsAxis number of steps around the sphere.\n * @param {number} subdivisionsHeight number of vertically on the sphere.\n * @param {number} [opt_startLatitudeInRadians] where to start the\n *     top of the sphere. Default = 0.\n * @param {number} [opt_endLatitudeInRadians] Where to end the\n *     bottom of the sphere. Default = Math.PI.\n * @param {number} [opt_startLongitudeInRadians] where to start\n *     wrapping the sphere. Default = 0.\n * @param {number} [opt_endLongitudeInRadians] where to end\n *     wrapping the sphere. Default = 2 * Math.PI.\n * @return {Object.<string, TypedArray>} The created sphere vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createSphereVertices(\n    radius,\n    subdivisionsAxis,\n    subdivisionsHeight,\n    opt_startLatitudeInRadians,\n    opt_endLatitudeInRadians,\n    opt_startLongitudeInRadians,\n    opt_endLongitudeInRadians) {\n  if (subdivisionsAxis <= 0 || subdivisionsHeight <= 0) {\n    throw new Error('subdivisionAxis and subdivisionHeight must be > 0');\n  }\n\n  opt_startLatitudeInRadians = opt_startLatitudeInRadians || 0;\n  opt_endLatitudeInRadians = opt_endLatitudeInRadians || Math.PI;\n  opt_startLongitudeInRadians = opt_startLongitudeInRadians || 0;\n  opt_endLongitudeInRadians = opt_endLongitudeInRadians || (Math.PI * 2);\n\n  const latRange = opt_endLatitudeInRadians - opt_startLatitudeInRadians;\n  const longRange = opt_endLongitudeInRadians - opt_startLongitudeInRadians;\n\n  // We are going to generate our sphere by iterating through its\n  // spherical coordinates and generating 2 triangles for each quad on a\n  // ring of the sphere.\n  const numVertices = (subdivisionsAxis + 1) * (subdivisionsHeight + 1);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let y = 0; y <= subdivisionsHeight; y++) {\n    for (let x = 0; x <= subdivisionsAxis; x++) {\n      // Generate a vertex based on its spherical coordinates\n      const u = x / subdivisionsAxis;\n      const v = y / subdivisionsHeight;\n      const theta = longRange * u + opt_startLongitudeInRadians;\n      const phi = latRange * v + opt_startLatitudeInRadians;\n      const sinTheta = Math.sin(theta);\n      const cosTheta = Math.cos(theta);\n      const sinPhi = Math.sin(phi);\n      const cosPhi = Math.cos(phi);\n      const ux = cosTheta * sinPhi;\n      const uy = cosPhi;\n      const uz = sinTheta * sinPhi;\n      positions.push(radius * ux, radius * uy, radius * uz);\n      normals.push(ux, uy, uz);\n      texcoords.push(1 - u, v);\n    }\n  }\n\n  const numVertsAround = subdivisionsAxis + 1;\n  const indices = createAugmentedTypedArray(3, subdivisionsAxis * subdivisionsHeight * 2, Uint16Array);\n  for (let x = 0; x < subdivisionsAxis; x++) {  // eslint-disable-line\n    for (let y = 0; y < subdivisionsHeight; y++) {  // eslint-disable-line\n      // Make triangle 1 of quad.\n      indices.push(\n          (y + 0) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          (y + 1) * numVertsAround + x,\n          (y + 0) * numVertsAround + x + 1,\n          (y + 1) * numVertsAround + x + 1);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Array of the indices of corners of each face of a cube.\n * @type {Array.<number[]>}\n * @private\n */\nconst CUBE_FACE_INDICES = [\n  [3, 7, 5, 1],  // right\n  [6, 2, 0, 4],  // left\n  [6, 7, 3, 2],  // ??\n  [0, 1, 5, 4],  // ??\n  [7, 6, 4, 5],  // front\n  [2, 3, 1, 0],  // back\n];\n\n/**\n * Creates a BufferInfo for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCubeBufferInfo\n */\n\n/**\n * Creates the buffers and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCubeBuffers\n */\n\n/**\n * Creates the vertices and indices for a cube.\n *\n * The cube is created around the origin. (-size / 2, size / 2).\n *\n * @param {number} [size] width, height and depth of the cube.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createCubeVertices(size) {\n  size = size || 1;\n  const k = size / 2;\n\n  const cornerVertices = [\n    [-k, -k, -k],\n    [+k, -k, -k],\n    [-k, +k, -k],\n    [+k, +k, -k],\n    [-k, -k, +k],\n    [+k, -k, +k],\n    [-k, +k, +k],\n    [+k, +k, +k],\n  ];\n\n  const faceNormals = [\n    [+1, +0, +0],\n    [-1, +0, +0],\n    [+0, +1, +0],\n    [+0, -1, +0],\n    [+0, +0, +1],\n    [+0, +0, -1],\n  ];\n\n  const uvCoords = [\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [1, 1],\n  ];\n\n  const numVertices = 6 * 4;\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2 , numVertices);\n  const indices   = createAugmentedTypedArray(3, 6 * 2, Uint16Array);\n\n  for (let f = 0; f < 6; ++f) {\n    const faceIndices = CUBE_FACE_INDICES[f];\n    for (let v = 0; v < 4; ++v) {\n      const position = cornerVertices[faceIndices[v]];\n      const normal = faceNormals[f];\n      const uv = uvCoords[v];\n\n      // Each face needs all four vertices because the normals and texture\n      // coordinates are not all the same.\n      positions.push(position);\n      normals.push(normal);\n      texcoords.push(uv);\n\n    }\n    // Two triangles make a square face.\n    const offset = 4 * f;\n    indices.push(offset + 0, offset + 1, offset + 2);\n    indices.push(offset + 0, offset + 2, offset + 3);\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Creates a BufferInfo for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created cone BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBufferInfo\n */\n\n/**\n * Creates buffers for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, WebGLBuffer>} The created cone buffers.\n * @memberOf module:twgl/primitives\n * @function createTruncatedConeBuffers\n */\n\n/**\n * Creates vertices for a truncated cone, which is like a cylinder\n * except that it has different top and bottom radii. A truncated cone\n * can also be used to create cylinders and regular cones. The\n * truncated cone will be created centered about the origin, with the\n * y axis as its vertical axis. .\n *\n * @param {number} bottomRadius Bottom radius of truncated cone.\n * @param {number} topRadius Top radius of truncated cone.\n * @param {number} height Height of truncated cone.\n * @param {number} radialSubdivisions The number of subdivisions around the\n *     truncated cone.\n * @param {number} verticalSubdivisions The number of subdivisions down the\n *     truncated cone.\n * @param {boolean} [opt_topCap] Create top cap. Default = true.\n * @param {boolean} [opt_bottomCap] Create bottom cap. Default = true.\n * @return {Object.<string, TypedArray>} The created cone vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTruncatedConeVertices(\n    bottomRadius,\n    topRadius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    opt_topCap,\n    opt_bottomCap) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (verticalSubdivisions < 1) {\n    throw new Error('verticalSubdivisions must be 1 or greater');\n  }\n\n  const topCap = (opt_topCap === undefined) ? true : opt_topCap;\n  const bottomCap = (opt_bottomCap === undefined) ? true : opt_bottomCap;\n\n  const extra = (topCap ? 2 : 0) + (bottomCap ? 2 : 0);\n\n  const numVertices = (radialSubdivisions + 1) * (verticalSubdivisions + 1 + extra);\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, radialSubdivisions * (verticalSubdivisions + extra / 2) * 2, Uint16Array);\n\n  const vertsAroundEdge = radialSubdivisions + 1;\n\n  // The slant of the cone is constant across its surface\n  const slant = Math.atan2(bottomRadius - topRadius, height);\n  const cosSlant = Math.cos(slant);\n  const sinSlant = Math.sin(slant);\n\n  const start = topCap ? -2 : 0;\n  const end = verticalSubdivisions + (bottomCap ? 2 : 0);\n\n  for (let yy = start; yy <= end; ++yy) {\n    let v = yy / verticalSubdivisions;\n    let y = height * v;\n    let ringRadius;\n    if (yy < 0) {\n      y = 0;\n      v = 1;\n      ringRadius = bottomRadius;\n    } else if (yy > verticalSubdivisions) {\n      y = height;\n      v = 1;\n      ringRadius = topRadius;\n    } else {\n      ringRadius = bottomRadius +\n        (topRadius - bottomRadius) * (yy / verticalSubdivisions);\n    }\n    if (yy === -2 || yy === verticalSubdivisions + 2) {\n      ringRadius = 0;\n      v = 0;\n    }\n    y -= height / 2;\n    for (let ii = 0; ii < vertsAroundEdge; ++ii) {\n      const sin = Math.sin(ii * Math.PI * 2 / radialSubdivisions);\n      const cos = Math.cos(ii * Math.PI * 2 / radialSubdivisions);\n      positions.push(sin * ringRadius, y, cos * ringRadius);\n      if (yy < 0) {\n        normals.push(0, -1, 0);\n      } else if (yy > verticalSubdivisions) {\n        normals.push(0, 1, 0);\n      } else if (ringRadius === 0.0) {\n        normals.push(0, 0, 0);\n      } else {\n        normals.push(sin * cosSlant, sinSlant, cos * cosSlant);\n      }\n      texcoords.push((ii / radialSubdivisions), 1 - v);\n    }\n  }\n\n  for (let yy = 0; yy < verticalSubdivisions + extra; ++yy) {  // eslint-disable-line\n    if (yy === 1 && topCap || yy === verticalSubdivisions + extra - 2 && bottomCap) {\n      continue;\n    }\n    for (let ii = 0; ii < radialSubdivisions; ++ii) {  // eslint-disable-line\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 0) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii);\n      indices.push(vertsAroundEdge * (yy + 0) + 0 + ii,\n                   vertsAroundEdge * (yy + 1) + 1 + ii,\n                   vertsAroundEdge * (yy + 1) + 0 + ii);\n    }\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * Expands RLE data\n * @param {number[]} rleData data in format of run-length, x, y, z, run-length, x, y, z\n * @param {number[]} [padding] value to add each entry with.\n * @return {number[]} the expanded rleData\n * @private\n */\nfunction expandRLEData(rleData, padding) {\n  padding = padding || [];\n  const data = [];\n  for (let ii = 0; ii < rleData.length; ii += 4) {\n    const runLength = rleData[ii];\n    const element = rleData.slice(ii + 1, ii + 4);\n    element.push.apply(element, padding);\n    for (let jj = 0; jj < runLength; ++jj) {\n      data.push.apply(data, element);\n    }\n  }\n  return data;\n}\n\n/**\n * Creates 3D 'F' BufferInfo.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function create3DFBufferInfo\n */\n\n/**\n * Creates 3D 'F' buffers.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function create3DFBuffers\n */\n\n/**\n * Creates 3D 'F' vertices.\n * An 'F' is useful because you can easily tell which way it is oriented.\n * The created 'F' has position, normal, texcoord, and color arrays.\n *\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction create3DFVertices() {\n\n  const positions = [\n    // left column front\n    0,   0,  0,\n    0, 150,  0,\n    30,   0,  0,\n    0, 150,  0,\n    30, 150,  0,\n    30,   0,  0,\n\n    // top rung front\n    30,   0,  0,\n    30,  30,  0,\n    100,   0,  0,\n    30,  30,  0,\n    100,  30,  0,\n    100,   0,  0,\n\n    // middle rung front\n    30,  60,  0,\n    30,  90,  0,\n    67,  60,  0,\n    30,  90,  0,\n    67,  90,  0,\n    67,  60,  0,\n\n    // left column back\n      0,   0,  30,\n     30,   0,  30,\n      0, 150,  30,\n      0, 150,  30,\n     30,   0,  30,\n     30, 150,  30,\n\n    // top rung back\n     30,   0,  30,\n    100,   0,  30,\n     30,  30,  30,\n     30,  30,  30,\n    100,   0,  30,\n    100,  30,  30,\n\n    // middle rung back\n     30,  60,  30,\n     67,  60,  30,\n     30,  90,  30,\n     30,  90,  30,\n     67,  60,  30,\n     67,  90,  30,\n\n    // top\n      0,   0,   0,\n    100,   0,   0,\n    100,   0,  30,\n      0,   0,   0,\n    100,   0,  30,\n      0,   0,  30,\n\n    // top rung front\n    100,   0,   0,\n    100,  30,   0,\n    100,  30,  30,\n    100,   0,   0,\n    100,  30,  30,\n    100,   0,  30,\n\n    // under top rung\n    30,   30,   0,\n    30,   30,  30,\n    100,  30,  30,\n    30,   30,   0,\n    100,  30,  30,\n    100,  30,   0,\n\n    // between top rung and middle\n    30,   30,   0,\n    30,   60,  30,\n    30,   30,  30,\n    30,   30,   0,\n    30,   60,   0,\n    30,   60,  30,\n\n    // top of middle rung\n    30,   60,   0,\n    67,   60,  30,\n    30,   60,  30,\n    30,   60,   0,\n    67,   60,   0,\n    67,   60,  30,\n\n    // front of middle rung\n    67,   60,   0,\n    67,   90,  30,\n    67,   60,  30,\n    67,   60,   0,\n    67,   90,   0,\n    67,   90,  30,\n\n    // bottom of middle rung.\n    30,   90,   0,\n    30,   90,  30,\n    67,   90,  30,\n    30,   90,   0,\n    67,   90,  30,\n    67,   90,   0,\n\n    // front of bottom\n    30,   90,   0,\n    30,  150,  30,\n    30,   90,  30,\n    30,   90,   0,\n    30,  150,   0,\n    30,  150,  30,\n\n    // bottom\n    0,   150,   0,\n    0,   150,  30,\n    30,  150,  30,\n    0,   150,   0,\n    30,  150,  30,\n    30,  150,   0,\n\n    // left side\n    0,   0,   0,\n    0,   0,  30,\n    0, 150,  30,\n    0,   0,   0,\n    0, 150,  30,\n    0, 150,   0,\n  ];\n\n  const texcoords = [\n    // left column front\n    0.22, 0.19,\n    0.22, 0.79,\n    0.34, 0.19,\n    0.22, 0.79,\n    0.34, 0.79,\n    0.34, 0.19,\n\n    // top rung front\n    0.34, 0.19,\n    0.34, 0.31,\n    0.62, 0.19,\n    0.34, 0.31,\n    0.62, 0.31,\n    0.62, 0.19,\n\n    // middle rung front\n    0.34, 0.43,\n    0.34, 0.55,\n    0.49, 0.43,\n    0.34, 0.55,\n    0.49, 0.55,\n    0.49, 0.43,\n\n    // left column back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // middle rung back\n    0, 0,\n    1, 0,\n    0, 1,\n    0, 1,\n    1, 0,\n    1, 1,\n\n    // top\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // top rung front\n    0, 0,\n    1, 0,\n    1, 1,\n    0, 0,\n    1, 1,\n    0, 1,\n\n    // under top rung\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // between top rung and middle\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // top of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // front of middle rung\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom of middle rung.\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // front of bottom\n    0, 0,\n    1, 1,\n    0, 1,\n    0, 0,\n    1, 0,\n    1, 1,\n\n    // bottom\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n\n    // left side\n    0, 0,\n    0, 1,\n    1, 1,\n    0, 0,\n    1, 1,\n    1, 0,\n  ];\n\n  const normals = expandRLEData([\n    // left column front\n    // top rung front\n    // middle rung front\n    18, 0, 0, 1,\n\n    // left column back\n    // top rung back\n    // middle rung back\n    18, 0, 0, -1,\n\n    // top\n    6, 0, 1, 0,\n\n    // top rung front\n    6, 1, 0, 0,\n\n    // under top rung\n    6, 0, -1, 0,\n\n    // between top rung and middle\n    6, 1, 0, 0,\n\n    // top of middle rung\n    6, 0, 1, 0,\n\n    // front of middle rung\n    6, 1, 0, 0,\n\n    // bottom of middle rung.\n    6, 0, -1, 0,\n\n    // front of bottom\n    6, 1, 0, 0,\n\n    // bottom\n    6, 0, -1, 0,\n\n    // left side\n    6, -1, 0, 0,\n  ]);\n\n  const colors = expandRLEData([\n        // left column front\n        // top rung front\n        // middle rung front\n      18, 200,  70, 120,\n\n        // left column back\n        // top rung back\n        // middle rung back\n      18, 80, 70, 200,\n\n        // top\n      6, 70, 200, 210,\n\n        // top rung front\n      6, 200, 200, 70,\n\n        // under top rung\n      6, 210, 100, 70,\n\n        // between top rung and middle\n      6, 210, 160, 70,\n\n        // top of middle rung\n      6, 70, 180, 210,\n\n        // front of middle rung\n      6, 100, 70, 210,\n\n        // bottom of middle rung.\n      6, 76, 210, 100,\n\n        // front of bottom\n      6, 140, 210, 80,\n\n        // bottom\n      6, 90, 130, 110,\n\n        // left side\n      6, 160, 160, 220,\n  ], [255]);\n\n  const numVerts = positions.length / 3;\n\n  const arrays = {\n    position: createAugmentedTypedArray(3, numVerts),\n    texcoord: createAugmentedTypedArray(2,  numVerts),\n    normal: createAugmentedTypedArray(3, numVerts),\n    color: createAugmentedTypedArray(4, numVerts, Uint8Array),\n    indices: createAugmentedTypedArray(3, numVerts / 3, Uint16Array),\n  };\n\n  arrays.position.push(positions);\n  arrays.texcoord.push(texcoords);\n  arrays.normal.push(normals);\n  arrays.color.push(colors);\n\n  for (let ii = 0; ii < numVerts; ++ii) {\n    arrays.indices.push(ii);\n  }\n\n  return arrays;\n}\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCresentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n * @function createCresentBuffers\n */\n\n/**\n * Creates crescent BufferInfo.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCrescentBufferInfo\n */\n\n/**\n * Creates crescent buffers.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createCrescentBuffers\n */\n\n/**\n * Creates crescent vertices.\n *\n * @param {number} verticalRadius The vertical radius of the crescent.\n * @param {number} outerRadius The outer radius of the crescent.\n * @param {number} innerRadius The inner radius of the crescent.\n * @param {number} thickness The thickness of the crescent.\n * @param {number} subdivisionsDown number of steps around the crescent.\n * @param {number} [startOffset] Where to start arc. Default 0.\n * @param {number} [endOffset] Where to end arg. Default 1.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\n function createCrescentVertices(\n    verticalRadius,\n    outerRadius,\n    innerRadius,\n    thickness,\n    subdivisionsDown,\n    startOffset,\n    endOffset) {\n  if (subdivisionsDown <= 0) {\n    throw new Error('subdivisionDown must be > 0');\n  }\n\n  startOffset = startOffset || 0;\n  endOffset   = endOffset || 1;\n\n  const subdivisionsThick = 2;\n\n  const offsetRange = endOffset - startOffset;\n  const numVertices = (subdivisionsDown + 1) * 2 * (2 + subdivisionsThick);\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n\n  function lerp(a, b, s) {\n    return a + (b - a) * s;\n  }\n\n  function createArc(arcRadius, x, normalMult, normalAdd, uMult, uAdd) {\n    for (let z = 0; z <= subdivisionsDown; z++) {\n      const uBack = x / (subdivisionsThick - 1);\n      const v = z / subdivisionsDown;\n      const xBack = (uBack - 0.5) * 2;\n      const angle = (startOffset + (v * offsetRange)) * Math.PI;\n      const s = Math.sin(angle);\n      const c = Math.cos(angle);\n      const radius = lerp(verticalRadius, arcRadius, s);\n      const px = xBack * thickness;\n      const py = c * verticalRadius;\n      const pz = s * radius;\n      positions.push(px, py, pz);\n      const n = v3.add(v3.multiply([0, s, c], normalMult), normalAdd);\n      normals.push(n);\n      texcoords.push(uBack * uMult + uAdd, v);\n    }\n  }\n\n  // Generate the individual vertices in our vertex buffer.\n  for (let x = 0; x < subdivisionsThick; x++) {\n    const uBack = (x / (subdivisionsThick - 1) - 0.5) * 2;\n    createArc(outerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(outerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 0);\n    createArc(innerRadius, x, [1, 1, 1], [0,     0, 0], 1, 0);\n    createArc(innerRadius, x, [0, 0, 0], [uBack, 0, 0], 0, 1);\n  }\n\n  // Do outer surface.\n  const indices = createAugmentedTypedArray(3, (subdivisionsDown * 2) * (2 + subdivisionsThick), Uint16Array);\n\n  function createSurface(leftArcOffset, rightArcOffset) {\n    for (let z = 0; z < subdivisionsDown; ++z) {\n      // Make triangle 1 of quad.\n      indices.push(\n          leftArcOffset + z + 0,\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 0);\n\n      // Make triangle 2 of quad.\n      indices.push(\n          leftArcOffset + z + 1,\n          rightArcOffset + z + 1,\n          rightArcOffset + z + 0);\n    }\n  }\n\n  const numVerticesDown = subdivisionsDown + 1;\n  // front\n  createSurface(numVerticesDown * 0, numVerticesDown * 4);\n  // right\n  createSurface(numVerticesDown * 5, numVerticesDown * 7);\n  // back\n  createSurface(numVerticesDown * 6, numVerticesDown * 2);\n  // left\n  createSurface(numVerticesDown * 3, numVerticesDown * 1);\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n/**\n * Creates cylinder BufferInfo. The cylinder will be created around the origin\n * along the y-axis.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of cylinder.\n * @param {number} height Height of cylinder.\n * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n * @param {boolean} [topCap] Create top cap. Default = true.\n * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createCylinderBufferInfo\n */\n\n /**\n  * Creates cylinder buffers. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, WebGLBuffer>} The created buffers.\n  * @memberOf module:twgl/primitives\n  * @function createCylinderBuffers\n  */\n\n /**\n  * Creates cylinder vertices. The cylinder will be created around the origin\n  * along the y-axis.\n  *\n  * @param {number} radius Radius of cylinder.\n  * @param {number} height Height of cylinder.\n  * @param {number} radialSubdivisions The number of subdivisions around the cylinder.\n  * @param {number} verticalSubdivisions The number of subdivisions down the cylinder.\n  * @param {boolean} [topCap] Create top cap. Default = true.\n  * @param {boolean} [bottomCap] Create bottom cap. Default = true.\n  * @return {Object.<string, TypedArray>} The created vertices.\n  * @memberOf module:twgl/primitives\n  */\nfunction createCylinderVertices(\n    radius,\n    height,\n    radialSubdivisions,\n    verticalSubdivisions,\n    topCap,\n    bottomCap) {\n  return createTruncatedConeVertices(\n      radius,\n      radius,\n      height,\n      radialSubdivisions,\n      verticalSubdivisions,\n      topCap,\n      bottomCap);\n}\n\n/**\n * Creates BufferInfo for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createTorusBufferInfo\n */\n\n/**\n * Creates buffers for a torus\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createTorusBuffers\n */\n\n/**\n * Creates vertices for a torus\n *\n * @param {number} radius radius of center of torus circle.\n * @param {number} thickness radius of torus ring.\n * @param {number} radialSubdivisions The number of subdivisions around the torus.\n * @param {number} bodySubdivisions The number of subdivisions around the body torus.\n * @param {boolean} [startAngle] start angle in radians. Default = 0.\n * @param {boolean} [endAngle] end angle in radians. Default = Math.PI * 2.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createTorusVertices(\n    radius,\n    thickness,\n    radialSubdivisions,\n    bodySubdivisions,\n    startAngle,\n    endAngle) {\n  if (radialSubdivisions < 3) {\n    throw new Error('radialSubdivisions must be 3 or greater');\n  }\n\n  if (bodySubdivisions < 3) {\n    throw new Error('verticalSubdivisions must be 3 or greater');\n  }\n\n  startAngle = startAngle || 0;\n  endAngle = endAngle || Math.PI * 2;\n  const range = endAngle - startAngle;\n\n  const radialParts = radialSubdivisions + 1;\n  const bodyParts   = bodySubdivisions + 1;\n  const numVertices = radialParts * bodyParts;\n  const positions   = createAugmentedTypedArray(3, numVertices);\n  const normals     = createAugmentedTypedArray(3, numVertices);\n  const texcoords   = createAugmentedTypedArray(2, numVertices);\n  const indices     = createAugmentedTypedArray(3, (radialSubdivisions) * (bodySubdivisions) * 2, Uint16Array);\n\n  for (let slice = 0; slice < bodyParts; ++slice) {\n    const v = slice / bodySubdivisions;\n    const sliceAngle = v * Math.PI * 2;\n    const sliceSin = Math.sin(sliceAngle);\n    const ringRadius = radius + sliceSin * thickness;\n    const ny = Math.cos(sliceAngle);\n    const y = ny * thickness;\n    for (let ring = 0; ring < radialParts; ++ring) {\n      const u = ring / radialSubdivisions;\n      const ringAngle = startAngle + u * range;\n      const xSin = Math.sin(ringAngle);\n      const zCos = Math.cos(ringAngle);\n      const x = xSin * ringRadius;\n      const z = zCos * ringRadius;\n      const nx = xSin * sliceSin;\n      const nz = zCos * sliceSin;\n      positions.push(x, y, z);\n      normals.push(nx, ny, nz);\n      texcoords.push(u, 1 - v);\n    }\n  }\n\n  for (let slice = 0; slice < bodySubdivisions; ++slice) {  // eslint-disable-line\n    for (let ring = 0; ring < radialSubdivisions; ++ring) {  // eslint-disable-line\n      const nextRingIndex  = 1 + ring;\n      const nextSliceIndex = 1 + slice;\n      indices.push(radialParts * slice          + ring,\n                   radialParts * nextSliceIndex + ring,\n                   radialParts * slice          + nextRingIndex);\n      indices.push(radialParts * nextSliceIndex + ring,\n                   radialParts * nextSliceIndex + nextRingIndex,\n                   radialParts * slice          + nextRingIndex);\n    }\n  }\n\n  return {\n    position: positions,\n    normal:   normals,\n    texcoord: texcoords,\n    indices:  indices,\n  };\n}\n\n\n/**\n * Creates a disc BufferInfo. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {module:twgl.BufferInfo} The created BufferInfo.\n * @memberOf module:twgl/primitives\n * @function createDiscBufferInfo\n */\n\n/**\n * Creates disc buffers. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext.\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, WebGLBuffer>} The created buffers.\n * @memberOf module:twgl/primitives\n * @function createDiscBuffers\n */\n\n/**\n * Creates disc vertices. The disc will be in the xz plane, centered at\n * the origin. When creating, at least 3 divisions, or pie\n * pieces, need to be specified, otherwise the triangles making\n * up the disc will be degenerate. You can also specify the\n * number of radial pieces `stacks`. A value of 1 for\n * stacks will give you a simple disc of pie pieces.  If you\n * want to create an annulus you can set `innerRadius` to a\n * value > 0. Finally, `stackPower` allows you to have the widths\n * increase or decrease as you move away from the center. This\n * is particularly useful when using the disc as a ground plane\n * with a fixed camera such that you don't need the resolution\n * of small triangles near the perimeter. For example, a value\n * of 2 will produce stacks whose outside radius increases with\n * the square of the stack index. A value of 1 will give uniform\n * stacks.\n *\n * @param {number} radius Radius of the ground plane.\n * @param {number} divisions Number of triangles in the ground plane (at least 3).\n * @param {number} [stacks] Number of radial divisions (default=1).\n * @param {number} [innerRadius] Default 0.\n * @param {number} [stackPower] Power to raise stack size to for decreasing width.\n * @return {Object.<string, TypedArray>} The created vertices.\n * @memberOf module:twgl/primitives\n */\nfunction createDiscVertices(\n    radius,\n    divisions,\n    stacks,\n    innerRadius,\n    stackPower) {\n  if (divisions < 3) {\n    throw new Error('divisions must be at least 3');\n  }\n\n  stacks = stacks ? stacks : 1;\n  stackPower = stackPower ? stackPower : 1;\n  innerRadius = innerRadius ? innerRadius : 0;\n\n  // Note: We don't share the center vertex because that would\n  // mess up texture coordinates.\n  const numVertices = (divisions + 1) * (stacks + 1);\n\n  const positions = createAugmentedTypedArray(3, numVertices);\n  const normals   = createAugmentedTypedArray(3, numVertices);\n  const texcoords = createAugmentedTypedArray(2, numVertices);\n  const indices   = createAugmentedTypedArray(3, stacks * divisions * 2, Uint16Array);\n\n  let firstIndex = 0;\n  const radiusSpan = radius - innerRadius;\n  const pointsPerStack = divisions + 1;\n\n  // Build the disk one stack at a time.\n  for (let stack = 0; stack <= stacks; ++stack) {\n    const stackRadius = innerRadius + radiusSpan * Math.pow(stack / stacks, stackPower);\n\n    for (let i = 0; i <= divisions; ++i) {\n      const theta = 2.0 * Math.PI * i / divisions;\n      const x = stackRadius * Math.cos(theta);\n      const z = stackRadius * Math.sin(theta);\n\n      positions.push(x, 0, z);\n      normals.push(0, 1, 0);\n      texcoords.push(1 - (i / divisions), stack / stacks);\n      if (stack > 0 && i !== divisions) {\n        // a, b, c and d are the indices of the vertices of a quad.  unless\n        // the current stack is the one closest to the center, in which case\n        // the vertices a and b connect to the center vertex.\n        const a = firstIndex + (i + 1);\n        const b = firstIndex + i;\n        const c = firstIndex + i - pointsPerStack;\n        const d = firstIndex + (i + 1) - pointsPerStack;\n\n        // Make a quad of the vertices a, b, c, d.\n        indices.push(a, b, c);\n        indices.push(a, c, d);\n      }\n    }\n\n    firstIndex += divisions + 1;\n  }\n\n  return {\n    position: positions,\n    normal: normals,\n    texcoord: texcoords,\n    indices: indices,\n  };\n}\n\n/**\n * creates a random integer between 0 and range - 1 inclusive.\n * @param {number} range\n * @return {number} random value between 0 and range - 1 inclusive.\n * @private\n */\nfunction randInt(range) {\n  return Math.random() * range | 0;\n}\n\n/**\n * Used to supply random colors\n * @callback RandomColorFunc\n * @param {number} ndx index of triangle/quad if unindexed or index of vertex if indexed\n * @param {number} channel 0 = red, 1 = green, 2 = blue, 3 = alpha\n * @return {number} a number from 0 to 255\n * @memberOf module:twgl/primitives\n */\n\n/**\n * @typedef {Object} RandomVerticesOptions\n * @property {number} [vertsPerColor] Defaults to 3 for non-indexed vertices\n * @property {module:twgl/primitives.RandomColorFunc} [rand] A function to generate random numbers\n * @memberOf module:twgl/primitives\n */\n\n/**\n * Creates an augmentedTypedArray of random vertex colors.\n * If the vertices are indexed (have an indices array) then will\n * just make random colors. Otherwise assumes they are triangles\n * and makes one random color for every 3 vertices.\n * @param {Object.<string, AugmentedTypedArray>} vertices Vertices as returned from one of the createXXXVertices functions.\n * @param {module:twgl/primitives.RandomVerticesOptions} [options] options.\n * @return {Object.<string, AugmentedTypedArray>} same vertices as passed in with `color` added.\n * @memberOf module:twgl/primitives\n */\nfunction makeRandomVertexColors(vertices, options) {\n  options = options || {};\n  const numElements = vertices.position.numElements;\n  const vColors = createAugmentedTypedArray(4, numElements, Uint8Array);\n  const rand = options.rand || function(ndx, channel) {\n    return channel < 3 ? randInt(256) : 255;\n  };\n  vertices.color = vColors;\n  if (vertices.indices) {\n    // just make random colors if index\n    for (let ii = 0; ii < numElements; ++ii) {\n      vColors.push(rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3));\n    }\n  } else {\n    // make random colors per triangle\n    const numVertsPerColor = options.vertsPerColor || 3;\n    const numSets = numElements / numVertsPerColor;\n    for (let ii = 0; ii < numSets; ++ii) {  // eslint-disable-line\n      const color = [rand(ii, 0), rand(ii, 1), rand(ii, 2), rand(ii, 3)];\n      for (let jj = 0; jj < numVertsPerColor; ++jj) {\n        vColors.push(color);\n      }\n    }\n  }\n  return vertices;\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a buffers for them\n * @private\n */\nfunction createBufferFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(this, Array.prototype.slice.call(arguments, 1));\n    return attributes.createBuffersFromArrays(gl, arrays);\n  };\n}\n\n/**\n * creates a function that calls fn to create vertices and then\n * creates a bufferInfo object for them\n * @private\n */\nfunction createBufferInfoFunc(fn) {\n  return function(gl) {\n    const arrays = fn.apply(null,  Array.prototype.slice.call(arguments, 1));\n    return attributes.createBufferInfoFromArrays(gl, arrays);\n  };\n}\n\nconst arraySpecPropertyNames = [\n  \"numComponents\",\n  \"size\",\n  \"type\",\n  \"normalize\",\n  \"stride\",\n  \"offset\",\n  \"attrib\",\n  \"name\",\n  \"attribName\",\n];\n\n/**\n * Copy elements from one array to another\n *\n * @param {Array|TypedArray} src source array\n * @param {Array|TypedArray} dst dest array\n * @param {number} dstNdx index in dest to copy src\n * @param {number} [offset] offset to add to copied values\n * @private\n */\nfunction copyElements(src, dst, dstNdx, offset) {\n  offset = offset || 0;\n  const length = src.length;\n  for (let ii = 0; ii < length; ++ii) {\n    dst[dstNdx + ii] = src[ii] + offset;\n  }\n}\n\n/**\n * Creates an array of the same time\n *\n * @param {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} srcArray array who's type to copy\n * @param {number} length size of new array\n * @return {(number[]|ArrayBufferView|module:twgl.FullArraySpec)} array with same type as srcArray\n * @private\n */\nfunction createArrayOfSameType(srcArray, length) {\n  const arraySrc = getArray(srcArray);\n  const newArray = new arraySrc.constructor(length);\n  let newArraySpec = newArray;\n  // If it appears to have been augmented make new one augmented\n  if (arraySrc.numComponents && arraySrc.numElements) {\n    augmentTypedArray(newArray, arraySrc.numComponents);\n  }\n  // If it was a full spec make new one a full spec\n  if (srcArray.data) {\n    newArraySpec = {\n      data: newArray,\n    };\n    helper.copyNamedProperties(arraySpecPropertyNames, srcArray, newArraySpec);\n  }\n  return newArraySpec;\n}\n\n/**\n * Concatenates sets of vertices\n *\n * Assumes the vertices match in composition. For example\n * if one set of vertices has positions, normals, and indices\n * all sets of vertices must have positions, normals, and indices\n * and of the same type.\n *\n * Example:\n *\n *      const cubeVertices = twgl.primitives.createCubeVertices(2);\n *      const sphereVertices = twgl.primitives.createSphereVertices(1, 10, 10);\n *      // move the sphere 2 units up\n *      twgl.primitives.reorientVertices(\n *          sphereVertices, twgl.m4.translation([0, 2, 0]));\n *      // merge the sphere with the cube\n *      const cubeSphereVertices = twgl.primitives.concatVertices(\n *          [cubeVertices, sphereVertices]);\n *      // turn them into WebGL buffers and attrib data\n *      const bufferInfo = twgl.createBufferInfoFromArrays(gl, cubeSphereVertices);\n *\n * @param {module:twgl.Arrays[]} arrays Array of arrays of vertices\n * @return {module:twgl.Arrays} The concatenated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction concatVertices(arrayOfArrays) {\n  const names = {};\n  let baseName;\n  // get names of all arrays.\n  // and numElements for each set of vertices\n  for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n    const arrays = arrayOfArrays[ii];\n    Object.keys(arrays).forEach(function(name) {  // eslint-disable-line\n      if (!names[name]) {\n        names[name] = [];\n      }\n      if (!baseName && name !== 'indices') {\n        baseName = name;\n      }\n      const arrayInfo = arrays[name];\n      const numComponents = getNumComponents(arrayInfo, name);\n      const array = getArray(arrayInfo);\n      const numElements = array.length / numComponents;\n      names[name].push(numElements);\n    });\n  }\n\n  // compute length of combined array\n  // and return one for reference\n  function getLengthOfCombinedArrays(name) {\n    let length = 0;\n    let arraySpec;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      length += array.length;\n      if (!arraySpec || arrayInfo.data) {\n        arraySpec = arrayInfo;\n      }\n    }\n    return {\n      length: length,\n      spec: arraySpec,\n    };\n  }\n\n  function copyArraysToNewArray(name, base, newArray) {\n    let baseIndex = 0;\n    let offset = 0;\n    for (let ii = 0; ii < arrayOfArrays.length; ++ii) {\n      const arrays = arrayOfArrays[ii];\n      const arrayInfo = arrays[name];\n      const array = getArray(arrayInfo);\n      if (name === 'indices') {\n        copyElements(array, newArray, offset, baseIndex);\n        baseIndex += base[ii];\n      } else {\n        copyElements(array, newArray, offset);\n      }\n      offset += array.length;\n    }\n  }\n\n  const base = names[baseName];\n\n  const newArrays = {};\n  Object.keys(names).forEach(function(name) {\n    const info = getLengthOfCombinedArrays(name);\n    const newArraySpec = createArrayOfSameType(info.spec, info.length);\n    copyArraysToNewArray(name, base, getArray(newArraySpec));\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\n/**\n * Creates a duplicate set of vertices\n *\n * This is useful for calling reorientVertices when you\n * also want to keep the original available\n *\n * @param {module:twgl.Arrays} arrays of vertices\n * @return {module:twgl.Arrays} The duplicated vertices.\n * @memberOf module:twgl/primitives\n */\nfunction duplicateVertices(arrays) {\n  const newArrays = {};\n  Object.keys(arrays).forEach(function(name) {\n    const arraySpec = arrays[name];\n    const srcArray = getArray(arraySpec);\n    const newArraySpec = createArrayOfSameType(arraySpec, srcArray.length);\n    copyElements(srcArray, getArray(newArraySpec), 0);\n    newArrays[name] = newArraySpec;\n  });\n  return newArrays;\n}\n\nconst create3DFBufferInfo = createBufferInfoFunc(create3DFVertices);\nconst create3DFBuffers = createBufferFunc(create3DFVertices);\nconst createCubeBufferInfo = createBufferInfoFunc(createCubeVertices);\nconst createCubeBuffers = createBufferFunc(createCubeVertices);\nconst createPlaneBufferInfo = createBufferInfoFunc(createPlaneVertices);\nconst createPlaneBuffers = createBufferFunc(createPlaneVertices);\nconst createSphereBufferInfo = createBufferInfoFunc(createSphereVertices);\nconst createSphereBuffers = createBufferFunc(createSphereVertices);\nconst createTruncatedConeBufferInfo = createBufferInfoFunc(createTruncatedConeVertices);\nconst createTruncatedConeBuffers = createBufferFunc(createTruncatedConeVertices);\nconst createXYQuadBufferInfo = createBufferInfoFunc(createXYQuadVertices);\nconst createXYQuadBuffers = createBufferFunc(createXYQuadVertices);\nconst createCrescentBufferInfo = createBufferInfoFunc(createCrescentVertices);\nconst createCrescentBuffers = createBufferFunc(createCrescentVertices);\nconst createCylinderBufferInfo = createBufferInfoFunc(createCylinderVertices);\nconst createCylinderBuffers = createBufferFunc(createCylinderVertices);\nconst createTorusBufferInfo = createBufferInfoFunc(createTorusVertices);\nconst createTorusBuffers = createBufferFunc(createTorusVertices);\nconst createDiscBufferInfo = createBufferInfoFunc(createDiscVertices);\nconst createDiscBuffers = createBufferFunc(createDiscVertices);\n\n// these were mis-spelled until 4.12\nconst createCresentBufferInfo = createCrescentBufferInfo;\nconst createCresentBuffers = createCrescentBuffers;\nconst createCresentVertices = createCrescentVertices;\n\nexport {\n  create3DFBufferInfo,\n  create3DFBuffers,\n  create3DFVertices,\n  createAugmentedTypedArray,\n  createCubeBufferInfo,\n  createCubeBuffers,\n  createCubeVertices,\n  createPlaneBufferInfo,\n  createPlaneBuffers,\n  createPlaneVertices,\n  createSphereBufferInfo,\n  createSphereBuffers,\n  createSphereVertices,\n  createTruncatedConeBufferInfo,\n  createTruncatedConeBuffers,\n  createTruncatedConeVertices,\n  createXYQuadBufferInfo,\n  createXYQuadBuffers,\n  createXYQuadVertices,\n  createCresentBufferInfo,\n  createCresentBuffers,\n  createCresentVertices,\n  createCrescentBufferInfo,\n  createCrescentBuffers,\n  createCrescentVertices,\n  createCylinderBufferInfo,\n  createCylinderBuffers,\n  createCylinderVertices,\n  createTorusBufferInfo,\n  createTorusBuffers,\n  createTorusVertices,\n  createDiscBufferInfo,\n  createDiscBuffers,\n  createDiscVertices,\n  deindexVertices,\n  flattenNormals,\n  makeRandomVertexColors,\n  reorientDirections,\n  reorientNormals,\n  reorientPositions,\n  reorientVertices,\n  concatVertices,\n  duplicateVertices,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport * as helper from './helper.js';\n\n/**\n * Low level shader program related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.programs` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/programs\n */\n\nconst error = helper.error;\nconst warn = helper.warn;\nfunction getElementById(id) {\n  return (typeof document !== 'undefined' && document.getElementById)\n      ? document.getElementById(id)\n      : null;\n}\n\nconst TEXTURE0                       = 0x84c0;\nconst DYNAMIC_DRAW                   = 0x88e8;\n\nconst ARRAY_BUFFER                   = 0x8892;\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\nconst UNIFORM_BUFFER                 = 0x8a11;\nconst TRANSFORM_FEEDBACK_BUFFER      = 0x8c8e;\n\nconst TRANSFORM_FEEDBACK             = 0x8e22;\n\nconst COMPILE_STATUS                 = 0x8b81;\nconst LINK_STATUS                    = 0x8b82;\nconst FRAGMENT_SHADER                = 0x8b30;\nconst VERTEX_SHADER                  = 0x8b31;\nconst SEPARATE_ATTRIBS               = 0x8c8d;\n\nconst ACTIVE_UNIFORMS                = 0x8b86;\nconst ACTIVE_ATTRIBUTES              = 0x8b89;\nconst TRANSFORM_FEEDBACK_VARYINGS    = 0x8c83;\nconst ACTIVE_UNIFORM_BLOCKS          = 0x8a36;\nconst UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER   = 0x8a44;\nconst UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46;\nconst UNIFORM_BLOCK_DATA_SIZE                     = 0x8a40;\nconst UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES        = 0x8a43;\n\nconst FLOAT                         = 0x1406;\nconst FLOAT_VEC2                    = 0x8B50;\nconst FLOAT_VEC3                    = 0x8B51;\nconst FLOAT_VEC4                    = 0x8B52;\nconst INT                           = 0x1404;\nconst INT_VEC2                      = 0x8B53;\nconst INT_VEC3                      = 0x8B54;\nconst INT_VEC4                      = 0x8B55;\nconst BOOL                          = 0x8B56;\nconst BOOL_VEC2                     = 0x8B57;\nconst BOOL_VEC3                     = 0x8B58;\nconst BOOL_VEC4                     = 0x8B59;\nconst FLOAT_MAT2                    = 0x8B5A;\nconst FLOAT_MAT3                    = 0x8B5B;\nconst FLOAT_MAT4                    = 0x8B5C;\nconst SAMPLER_2D                    = 0x8B5E;\nconst SAMPLER_CUBE                  = 0x8B60;\nconst SAMPLER_3D                    = 0x8B5F;\nconst SAMPLER_2D_SHADOW             = 0x8B62;\nconst FLOAT_MAT2x3                  = 0x8B65;\nconst FLOAT_MAT2x4                  = 0x8B66;\nconst FLOAT_MAT3x2                  = 0x8B67;\nconst FLOAT_MAT3x4                  = 0x8B68;\nconst FLOAT_MAT4x2                  = 0x8B69;\nconst FLOAT_MAT4x3                  = 0x8B6A;\nconst SAMPLER_2D_ARRAY              = 0x8DC1;\nconst SAMPLER_2D_ARRAY_SHADOW       = 0x8DC4;\nconst SAMPLER_CUBE_SHADOW           = 0x8DC5;\nconst UNSIGNED_INT                  = 0x1405;\nconst UNSIGNED_INT_VEC2             = 0x8DC6;\nconst UNSIGNED_INT_VEC3             = 0x8DC7;\nconst UNSIGNED_INT_VEC4             = 0x8DC8;\nconst INT_SAMPLER_2D                = 0x8DCA;\nconst INT_SAMPLER_3D                = 0x8DCB;\nconst INT_SAMPLER_CUBE              = 0x8DCC;\nconst INT_SAMPLER_2D_ARRAY          = 0x8DCF;\nconst UNSIGNED_INT_SAMPLER_2D       = 0x8DD2;\nconst UNSIGNED_INT_SAMPLER_3D       = 0x8DD3;\nconst UNSIGNED_INT_SAMPLER_CUBE     = 0x8DD4;\nconst UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;\n\nconst TEXTURE_2D                    = 0x0DE1;\nconst TEXTURE_CUBE_MAP              = 0x8513;\nconst TEXTURE_3D                    = 0x806F;\nconst TEXTURE_2D_ARRAY              = 0x8C1A;\n\nconst typeMap = {};\n\n/**\n * Returns the corresponding bind point for a given sampler type\n * @private\n */\nfunction getBindPointForSamplerType(gl, type) {\n  return typeMap[type].bindPoint;\n}\n\n// This kind of sucks! If you could compose functions as in `var fn = gl[name];`\n// this code could be a lot smaller but that is sadly really slow (T_T)\n\nfunction floatSetter(gl, location) {\n  return function(v) {\n    gl.uniform1f(location, v);\n  };\n}\n\nfunction floatArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1fv(location, v);\n  };\n}\n\nfunction floatVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2fv(location, v);\n  };\n}\n\nfunction floatVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3fv(location, v);\n  };\n}\n\nfunction floatVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4fv(location, v);\n  };\n}\n\nfunction intSetter(gl, location) {\n  return function(v) {\n    gl.uniform1i(location, v);\n  };\n}\n\nfunction intArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1iv(location, v);\n  };\n}\n\nfunction intVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2iv(location, v);\n  };\n}\n\nfunction intVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3iv(location, v);\n  };\n}\n\nfunction intVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4iv(location, v);\n  };\n}\n\nfunction uintSetter(gl, location) {\n  return function(v) {\n    gl.uniform1ui(location, v);\n  };\n}\n\nfunction uintArraySetter(gl, location) {\n  return function(v) {\n    gl.uniform1uiv(location, v);\n  };\n}\n\nfunction uintVec2Setter(gl, location) {\n  return function(v) {\n    gl.uniform2uiv(location, v);\n  };\n}\n\nfunction uintVec3Setter(gl, location) {\n  return function(v) {\n    gl.uniform3uiv(location, v);\n  };\n}\n\nfunction uintVec4Setter(gl, location) {\n  return function(v) {\n    gl.uniform4uiv(location, v);\n  };\n}\n\nfunction floatMat2Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2fv(location, false, v);\n  };\n}\n\nfunction floatMat3Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3fv(location, false, v);\n  };\n}\n\nfunction floatMat4Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4fv(location, false, v);\n  };\n}\n\nfunction floatMat23Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x3fv(location, false, v);\n  };\n}\n\nfunction floatMat32Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x2fv(location, false, v);\n  };\n}\n\nfunction floatMat24Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix2x4fv(location, false, v);\n  };\n}\n\nfunction floatMat42Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x2fv(location, false, v);\n  };\n}\n\nfunction floatMat34Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix3x4fv(location, false, v);\n  };\n}\n\nfunction floatMat43Setter(gl, location) {\n  return function(v) {\n    gl.uniformMatrix4x3fv(location, false, v);\n  };\n}\n\nfunction samplerSetter(gl, type, unit, location) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  return utils.isWebGL2(gl) ? function(textureOrPair) {\n    let texture;\n    let sampler;\n    if (!textureOrPair || helper.isTexture(gl, textureOrPair)) {\n      texture = textureOrPair;\n      sampler = null;\n    } else {\n      texture = textureOrPair.texture;\n      sampler = textureOrPair.sampler;\n    }\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n    gl.bindSampler(unit, sampler);\n  } : function(texture) {\n    gl.uniform1i(location, unit);\n    gl.activeTexture(TEXTURE0 + unit);\n    gl.bindTexture(bindPoint, texture);\n  };\n}\n\nfunction samplerArraySetter(gl, type, unit, location, size) {\n  const bindPoint = getBindPointForSamplerType(gl, type);\n  const units = new Int32Array(size);\n  for (let ii = 0; ii < size; ++ii) {\n    units[ii] = unit + ii;\n  }\n\n  return utils.isWebGL2(gl) ? function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(textureOrPair, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      let texture;\n      let sampler;\n      if (!textureOrPair || helper.isTexture(gl, textureOrPair)) {\n        texture = textureOrPair;\n        sampler = null;\n      } else {\n        texture = textureOrPair.texture;\n        sampler = textureOrPair.sampler;\n      }\n      gl.bindSampler(unit, sampler);\n      gl.bindTexture(bindPoint, texture);\n    });\n  } : function(textures) {\n    gl.uniform1iv(location, units);\n    textures.forEach(function(texture, index) {\n      gl.activeTexture(TEXTURE0 + units[index]);\n      gl.bindTexture(bindPoint, texture);\n    });\n  };\n}\n\ntypeMap[FLOAT]                         = { Type: Float32Array, size:  4, setter: floatSetter,      arraySetter: floatArraySetter, };\ntypeMap[FLOAT_VEC2]                    = { Type: Float32Array, size:  8, setter: floatVec2Setter,  cols: 2, };\ntypeMap[FLOAT_VEC3]                    = { Type: Float32Array, size: 12, setter: floatVec3Setter,  cols: 3, };\ntypeMap[FLOAT_VEC4]                    = { Type: Float32Array, size: 16, setter: floatVec4Setter,  cols: 4, };\ntypeMap[INT]                           = { Type: Int32Array,   size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[INT_VEC2]                      = { Type: Int32Array,   size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[INT_VEC3]                      = { Type: Int32Array,   size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[INT_VEC4]                      = { Type: Int32Array,   size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[UNSIGNED_INT]                  = { Type: Uint32Array,  size:  4, setter: uintSetter,       arraySetter: uintArraySetter, };\ntypeMap[UNSIGNED_INT_VEC2]             = { Type: Uint32Array,  size:  8, setter: uintVec2Setter,   cols: 2, };\ntypeMap[UNSIGNED_INT_VEC3]             = { Type: Uint32Array,  size: 12, setter: uintVec3Setter,   cols: 3, };\ntypeMap[UNSIGNED_INT_VEC4]             = { Type: Uint32Array,  size: 16, setter: uintVec4Setter,   cols: 4, };\ntypeMap[BOOL]                          = { Type: Uint32Array,  size:  4, setter: intSetter,        arraySetter: intArraySetter, };\ntypeMap[BOOL_VEC2]                     = { Type: Uint32Array,  size:  8, setter: intVec2Setter,    cols: 2, };\ntypeMap[BOOL_VEC3]                     = { Type: Uint32Array,  size: 12, setter: intVec3Setter,    cols: 3, };\ntypeMap[BOOL_VEC4]                     = { Type: Uint32Array,  size: 16, setter: intVec4Setter,    cols: 4, };\ntypeMap[FLOAT_MAT2]                    = { Type: Float32Array, size: 32, setter: floatMat2Setter,  rows: 2, cols: 2, };\ntypeMap[FLOAT_MAT3]                    = { Type: Float32Array, size: 48, setter: floatMat3Setter,  rows: 3, cols: 3, };\ntypeMap[FLOAT_MAT4]                    = { Type: Float32Array, size: 64, setter: floatMat4Setter,  rows: 4, cols: 4, };\ntypeMap[FLOAT_MAT2x3]                  = { Type: Float32Array, size: 32, setter: floatMat23Setter, rows: 2, cols: 3, };\ntypeMap[FLOAT_MAT2x4]                  = { Type: Float32Array, size: 32, setter: floatMat24Setter, rows: 2, cols: 4, };\ntypeMap[FLOAT_MAT3x2]                  = { Type: Float32Array, size: 48, setter: floatMat32Setter, rows: 3, cols: 2, };\ntypeMap[FLOAT_MAT3x4]                  = { Type: Float32Array, size: 48, setter: floatMat34Setter, rows: 3, cols: 4, };\ntypeMap[FLOAT_MAT4x2]                  = { Type: Float32Array, size: 64, setter: floatMat42Setter, rows: 4, cols: 2, };\ntypeMap[FLOAT_MAT4x3]                  = { Type: Float32Array, size: 64, setter: floatMat43Setter, rows: 4, cols: 3, };\ntypeMap[SAMPLER_2D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[SAMPLER_CUBE]                  = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[SAMPLER_3D]                    = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[SAMPLER_2D_SHADOW]             = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[SAMPLER_2D_ARRAY]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_2D_ARRAY_SHADOW]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[SAMPLER_CUBE_SHADOW]           = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[INT_SAMPLER_3D]                = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[INT_SAMPLER_CUBE]              = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[INT_SAMPLER_2D_ARRAY]          = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D,       };\ntypeMap[UNSIGNED_INT_SAMPLER_3D]       = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_3D,       };\ntypeMap[UNSIGNED_INT_SAMPLER_CUBE]     = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_CUBE_MAP, };\ntypeMap[UNSIGNED_INT_SAMPLER_2D_ARRAY] = { Type: null,         size:  0, setter: samplerSetter,    arraySetter: samplerArraySetter, bindPoint: TEXTURE_2D_ARRAY, };\n\nfunction floatAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      switch (b.value.length) {\n        case 4:\n          gl.vertexAttrib4fv(index, b.value);\n          break;\n        case 3:\n          gl.vertexAttrib3fv(index, b.value);\n          break;\n        case 2:\n          gl.vertexAttrib2fv(index, b.value);\n          break;\n        case 1:\n          gl.vertexAttrib1fv(index, b.value);\n          break;\n        default:\n          throw new Error('the length of a float constant value must be between 1 and 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribPointer(\n          index, b.numComponents || b.size, b.type || FLOAT, b.normalize || false, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction intAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4iv(index, b.value);\n      } else {\n        throw new Error('The length of an integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction uintAttribSetter(gl, index) {\n  return function(b) {\n    if (b.value) {\n      gl.disableVertexAttribArray(index);\n      if (b.value.length === 4) {\n        gl.vertexAttrib4uiv(index, b.value);\n      } else {\n        throw new Error('The length of an unsigned integer constant value must be 4!');\n      }\n    } else {\n      gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n      gl.enableVertexAttribArray(index);\n      gl.vertexAttribIPointer(\n          index, b.numComponents || b.size, b.type || UNSIGNED_INT, b.stride || 0, b.offset || 0);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index, b.divisor || 0);\n      }\n    }\n  };\n}\n\nfunction matAttribSetter(gl, index, typeInfo) {\n  const defaultSize = typeInfo.size;\n  const count = typeInfo.count;\n\n  return function(b) {\n    gl.bindBuffer(ARRAY_BUFFER, b.buffer);\n    const numComponents = b.size || b.numComponents || defaultSize;\n    const size = numComponents / count;\n    const type = b.type || FLOAT;\n    const typeInfo = typeMap[type];\n    const stride = typeInfo.size * numComponents;\n    const normalize = b.normalize || false;\n    const offset = b.offset || 0;\n    const rowOffset = stride / count;\n    for (let i = 0; i < count; ++i) {\n      gl.enableVertexAttribArray(index + i);\n      gl.vertexAttribPointer(\n          index + i, size, type, normalize, stride, offset + rowOffset * i);\n      if (gl.vertexAttribDivisor) {\n        gl.vertexAttribDivisor(index + i, b.divisor || 0);\n      }\n    }\n  };\n}\n\n\n\nconst attrTypeMap = {};\nattrTypeMap[FLOAT]             = { size:  4, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC2]        = { size:  8, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC3]        = { size: 12, setter: floatAttribSetter, };\nattrTypeMap[FLOAT_VEC4]        = { size: 16, setter: floatAttribSetter, };\nattrTypeMap[INT]               = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC2]          = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC3]          = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[INT_VEC4]          = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[UNSIGNED_INT]      = { size:  4, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC2] = { size:  8, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC3] = { size: 12, setter: uintAttribSetter,  };\nattrTypeMap[UNSIGNED_INT_VEC4] = { size: 16, setter: uintAttribSetter,  };\nattrTypeMap[BOOL]              = { size:  4, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC2]         = { size:  8, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC3]         = { size: 12, setter: intAttribSetter,   };\nattrTypeMap[BOOL_VEC4]         = { size: 16, setter: intAttribSetter,   };\nattrTypeMap[FLOAT_MAT2]        = { size:  4, setter: matAttribSetter,   count: 2, };\nattrTypeMap[FLOAT_MAT3]        = { size:  9, setter: matAttribSetter,   count: 3, };\nattrTypeMap[FLOAT_MAT4]        = { size: 16, setter: matAttribSetter,   count: 4, };\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\nfunction addLineNumbersWithError(src, log = '', lineOffset = 0) {\n  // Note: Error message formats are not defined by any spec so this may or may not work.\n  const matches = [...log.matchAll(errorRE)];\n  const lineNoToErrorMap = new Map(matches.map((m, ndx) => {\n    const lineNo = parseInt(m[1]);\n    const next = matches[ndx + 1];\n    const end = next ? next.index : log.length;\n    const msg = log.substring(m.index, end);\n    return [lineNo - 1, msg];\n  }));\n  return src.split('\\n').map((line, lineNo) => {\n    const err = lineNoToErrorMap.get(lineNo);\n    return `${lineNo + 1 + lineOffset}: ${line}${err ? `\\n\\n^^^ ${err}` : ''}`;\n  }).join('\\n');\n}\n\n/**\n * Error Callback\n * @callback ErrorCallback\n * @param {string} msg error message.\n * @param {number} [lineOffset] amount to add to line number\n * @memberOf module:twgl\n */\n\n/**\n * Program Callback\n * @callback ProgramCallback\n * @param {string} [err] error message, falsy if no error\n * @param {WebGLProgram|module:twgl.ProgramInfo} [result] the program or programInfo\n */\n\nconst spaceRE = /^[ \\t]*\\n/;\n\n/**\n * Remove the first end of line because WebGL 2.0 requires\n * #version 300 es\n * as the first line. No whitespace allowed before that line\n * so\n *\n * <script>\n * #version 300 es\n * </script>\n *\n * Has one line before it which is invalid according to GLSL ES 3.00\n *\n * @param {string} shaderSource The source of the shader\n * @returns {{shaderSource: string, lineOffset: number}}\n * @private\n */\nfunction prepShaderSource(shaderSource) {\n  let lineOffset = 0;\n  if (spaceRE.test(shaderSource)) {\n    lineOffset = 1;\n    shaderSource = shaderSource.replace(spaceRE, '');\n  }\n  return {lineOffset, shaderSource};\n}\n\n/**\n * @param {module:twgl.ProgramOptions} progOptions\n * @param {string} msg\n * @return null\n * @private\n */\nfunction reportError(progOptions, msg) {\n  progOptions.errorCallback(msg);\n  if (progOptions.callback) {\n    setTimeout(() => {\n      progOptions.callback(`${msg}\\n${progOptions.errors.join('\\n')}`);\n    });\n  }\n  return null;\n}\n\n/**\n * Check Shader status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {number} shaderType The shader type\n * @param {WebGLShader} shader The shader\n * @param {ErrorCallback} [errFn] function to receive error message.\n * @return {string} errors or empty string\n * @private\n */\nfunction checkShaderStatus(gl, shaderType, shader, errFn) {\n  errFn = errFn || error;\n  // Check the compile status\n  const compiled = gl.getShaderParameter(shader, COMPILE_STATUS);\n  if (!compiled) {\n    // Something went wrong during compilation; get the error\n    const lastError = gl.getShaderInfoLog(shader);\n    const {lineOffset, shaderSource} = prepShaderSource(gl.getShaderSource(shader));\n    const error = `${addLineNumbersWithError(shaderSource, lastError, lineOffset)}\\nError compiling ${utils.glEnumToString(gl, shaderType)}: ${lastError}`;\n    errFn(error);\n    return error;\n  }\n  return '';\n}\n\n/**\n * @typedef {Object} FullProgramSpec\n * @property {string[]} shaders the shader source or element ids.\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {string[]|module:twgl.FullProgramSpec} ProgramSpec\n * @memberOf module:twgl\n */\n\n/**\n * @typedef {Object} ProgramOptions\n * @property {function(string)} [errorCallback] callback for errors\n * @property {Object.<string,number>|string[]} [attribLocations] a attribute name to location map, or array of attribute names where index = location.\n * @property {(module:twgl.BufferInfo|Object.<string,module:twgl.AttribInfo>|string[])} [transformFeedbackVaryings] If passed\n *   a BufferInfo will use the attribs names inside. If passed an object of AttribInfos will use the names from that object. Otherwise\n *   you can pass an array of names.\n * @property {number} [transformFeedbackMode] the mode to pass `gl.transformFeedbackVaryings`. Defaults to `SEPARATE_ATTRIBS`.\n * @property {ProgramCallback} [callback] callback for async program compilation.\n * @memberOf module:twgl\n */\n\n/**\n * Gets the program options based on all these optional arguments\n * @param {module:twgl.ProgramOptions|string[]} [opt_attribs] Options for the program or an array of attribs names. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramOptions} an instance of ProgramOptions based on the arguments passed in\n * @private\n */\nfunction getProgramOptions(opt_attribs, opt_locations, opt_errorCallback) {\n  let transformFeedbackVaryings;\n  let transformFeedbackMode;\n  let callback;\n  if (typeof opt_locations === 'function') {\n    opt_errorCallback = opt_locations;\n    opt_locations = undefined;\n  }\n  if (typeof opt_attribs === 'function') {\n    opt_errorCallback = opt_attribs;\n    opt_attribs = undefined;\n  } else if (opt_attribs && !Array.isArray(opt_attribs)) {\n    const opt = opt_attribs;\n    opt_errorCallback = opt.errorCallback;\n    opt_attribs = opt.attribLocations;\n    transformFeedbackVaryings = opt.transformFeedbackVaryings;\n    transformFeedbackMode = opt.transformFeedbackMode;\n    callback = opt.callback;\n  }\n\n  const errorCallback = opt_errorCallback || error;\n  const errors = [];\n  const options = {\n    errorCallback(msg, ...args) {\n      errors.push(msg);\n      errorCallback(msg, ...args);\n    },\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n    callback,\n    errors,\n  };\n\n  {\n    let attribLocations = {};\n    if (Array.isArray(opt_attribs)) {\n      opt_attribs.forEach(function(attrib,  ndx) {\n        attribLocations[attrib] = opt_locations ? opt_locations[ndx] : ndx;\n      });\n    } else {\n      attribLocations = opt_attribs || {};\n    }\n    options.attribLocations = attribLocations;\n  }\n\n  return options;\n}\n\nconst defaultShaderType = [\n  \"VERTEX_SHADER\",\n  \"FRAGMENT_SHADER\",\n];\n\nfunction getShaderTypeFromScriptType(gl, scriptType) {\n  if (scriptType.indexOf(\"frag\") >= 0) {\n    return FRAGMENT_SHADER;\n  } else if (scriptType.indexOf(\"vert\") >= 0) {\n    return VERTEX_SHADER;\n  }\n  return undefined;\n}\n\nfunction deleteProgramAndShaders(gl, program, notThese) {\n  const shaders = gl.getAttachedShaders(program);\n  for (const shader of shaders) {\n    if (notThese.has(shader)) {\n      gl.deleteShader(shader);\n    }\n  }\n  gl.deleteProgram(program);\n}\n\nconst wait = (ms = 0) => new Promise(resolve => setTimeout(resolve, ms));\n\nfunction createProgramNoCheck(gl, shaders, programOptions) {\n  const program = gl.createProgram();\n  const {\n    attribLocations,\n    transformFeedbackVaryings,\n    transformFeedbackMode,\n  } = getProgramOptions(programOptions);\n\n  for (let ndx = 0; ndx < shaders.length; ++ndx) {\n    let shader = shaders[ndx];\n    if (typeof shader === 'string') {\n      const elem = getElementById(shader);\n      const src = elem ? elem.text : shader;\n      let type = gl[defaultShaderType[ndx]];\n      if (elem && elem.type) {\n        type = getShaderTypeFromScriptType(gl, elem.type) || type;\n      }\n      shader = gl.createShader(type);\n      gl.shaderSource(shader, prepShaderSource(src).shaderSource);\n      gl.compileShader(shader);\n      gl.attachShader(program, shader);\n    }\n  }\n\n  Object.entries(attribLocations).forEach(([attrib, loc]) => gl.bindAttribLocation(program, loc, attrib));\n\n  {\n    let varyings = transformFeedbackVaryings;\n    if (varyings) {\n      if (varyings.attribs) {\n        varyings = varyings.attribs;\n      }\n      if (!Array.isArray(varyings)) {\n        varyings = Object.keys(varyings);\n      }\n      gl.transformFeedbackVaryings(program, varyings, transformFeedbackMode || SEPARATE_ATTRIBS);\n    }\n  }\n\n  gl.linkProgram(program);\n  return program;\n}\n\n/**\n * Creates a program, attaches (and/or compiles) shaders, binds attrib locations, links the\n * program.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgram(gl, [vs, fs], options);\n *     twgl.createProgram(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgram(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error of a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgram(\n    gl, shaders, opt_attribs, opt_locations, opt_errorCallback) {\n  // This code is really convoluted, because it may or may not be async\n  // Maybe it would be better to have a separate function\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaderSet = new Set(shaders);\n  const program = createProgramNoCheck(gl, shaders, progOptions);\n\n  function hasErrors(gl, program) {\n    const errors = getProgramErrors(gl, program, progOptions.errorCallback);\n    if (errors) {\n      deleteProgramAndShaders(gl, program, shaderSet);\n    }\n    return errors;\n  }\n\n  if (progOptions.callback) {\n    waitForProgramLinkCompletionAsync(gl, program).then(() => {\n      const errors = hasErrors(gl, program);\n      progOptions.callback(errors, errors ? undefined : program);\n    });\n    return undefined;\n  }\n\n  return hasErrors(gl, program) ? undefined : program;\n}\n\n/**\n * This only works because the functions it wraps the first 2 arguments\n * are gl and any, followed by things that become programOptions\n * @private\n */\nfunction wrapCallbackFnToAsyncFn(fn) {\n  return function(gl, arg1, ...args) {\n    return new Promise((resolve, reject) => {\n      const programOptions = getProgramOptions(...args);\n      programOptions.callback = (err, program) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(program);\n        }\n      };\n      fn(gl, arg1, programOptions);\n    });\n  };\n}\n\n/**\n * Same as createProgram but returns a promise\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramAsync(gl, [vs, fs], options);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramAsync(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLShader[]|string[]} shaders The shaders to attach, or element ids for their source, or strings that contain their source\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<WebGLProgram>} The created program\n * @memberOf module:twgl/programs\n */\nconst createProgramAsync = wrapCallbackFnToAsyncFn(createProgram);\n\n/**\n * Same as createProgramInfo but returns a promise\n * @function\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {Promise<module:twgl.ProgramInfo>} The created ProgramInfo\n * @memberOf module:twgl/programs\n */\nconst createProgramInfoAsync = wrapCallbackFnToAsyncFn(createProgramInfo);\n\nasync function waitForProgramLinkCompletionAsync(gl, program) {\n  const ext = gl.getExtension('KHR_parallel_shader_compile');\n  const checkFn = ext\n      ? (gl, program) => gl.getProgramParameter(program, ext.COMPLETION_STATUS_KHR)\n      : () => true;\n\n  let waitTime = 0;\n  do {\n    await wait(waitTime);  // must wait at least once\n    waitTime = 1000 / 60;\n  } while (!checkFn(gl, program));\n}\n\nasync function waitForAllProgramsLinkCompletionAsync(gl, programs) {\n  for (const program of Object.values(programs)) {\n    await waitForProgramLinkCompletionAsync(gl, program);\n  }\n}\n\n/**\n * Check a program's link status\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program Program to check\n * @param {ErrorCallback} [errFn] func for errors\n * @return {string?} errors if program is failed, else undefined\n * @private\n */\nfunction getProgramErrors(gl, program, errFn) {\n  errFn = errFn || error;\n  // Check the link status\n  const linked = gl.getProgramParameter(program, LINK_STATUS);\n  if (!linked) {\n    // something went wrong with the link\n    const lastError = gl.getProgramInfoLog(program);\n    errFn(`Error in program linking: ${lastError}`);\n    // print any errors from these shaders\n    const shaders = gl.getAttachedShaders(program);\n    const errors = shaders.map(shader => checkShaderStatus(gl, gl.getShaderParameter(shader, gl.SHADER_TYPE), shader, errFn));\n    return `${lastError}\\n${errors.filter(_ => _).join('\\n')}`;\n  }\n  return undefined;\n}\n\n/**\n * Creates a program from 2 script tags.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromScripts(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderScriptIds Array of ids of the script\n *        tags for the shaders. The first is assumed to be the\n *        vertex shader, the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromScripts(\n    gl, shaderScriptIds, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const shaders = [];\n  for (const scriptId of shaderScriptIds) {\n    const shaderScript = getElementById(scriptId);\n    if (!shaderScript) {\n      return reportError(progOptions, `unknown script element: ${scriptId}`);\n    }\n    shaders.push(shaderScript.text);\n  }\n  return createProgram(gl, shaders, progOptions);\n}\n\n/**\n * Creates a program from 2 sources.\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_options);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramFromSource(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {WebGLProgram?} the created program or null if error or a callback was provided.\n * @memberOf module:twgl/programs\n */\nfunction createProgramFromSources(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  return createProgram(gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback);\n}\n\n/**\n * Returns true if attribute/uniform is a reserved/built in\n *\n * It makes no sense to me why GL returns these because it's\n * illegal to call `gl.getUniformLocation` and `gl.getAttribLocation`\n * with names that start with `gl_` (and `webgl_` in WebGL)\n *\n * I can only assume they are there because they might count\n * when computing the number of uniforms/attributes used when you want to\n * know if you are near the limit. That doesn't really make sense\n * to me but the fact that these get returned are in the spec.\n *\n * @param {WebGLActiveInfo} info As returned from `gl.getActiveUniform` or\n *    `gl.getActiveAttrib`.\n * @return {bool} true if it's reserved\n * @private\n */\nfunction isBuiltIn(info) {\n  const name = info.name;\n  return name.startsWith(\"gl_\") || name.startsWith(\"webgl_\");\n}\n\nconst tokenRE = /(\\.|\\[|]|\\w+)/g;\nconst isDigit = s => s >= '0' && s <= '9';\nfunction addSetterToUniformTree(fullPath, setter, node, uniformSetters) {\n  const tokens = fullPath.split(tokenRE).filter(s => s !== '');\n  let tokenNdx = 0;\n  let path = '';\n\n  for (;;) {\n    const token = tokens[tokenNdx++];  // has to be name or number\n    path += token;\n    const isArrayIndex = isDigit(token[0]);\n    const accessor = isArrayIndex\n        ? parseInt(token)\n        : token;\n    if (isArrayIndex) {\n      path += tokens[tokenNdx++];  // skip ']'\n    }\n    const isLastToken = tokenNdx === tokens.length;\n    if (isLastToken) {\n      node[accessor] = setter;\n      break;\n    } else {\n      const token = tokens[tokenNdx++];  // has to be . or [\n      const isArray = token === '[';\n      const child = node[accessor] || (isArray ? [] : {});\n      node[accessor] = child;\n      node = child;\n      uniformSetters[path] = uniformSetters[path] || function(node) {\n        return function(value) {\n          setUniformTree(node, value);\n        };\n      }(child);\n      path += token;\n    }\n  }\n}\n\n/**\n * Creates setter functions for all uniforms of a shader\n * program.\n *\n * @see {@link module:twgl.setUniforms}\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @returns {Object.<string, function>} an object with a setter by name for each uniform\n * @memberOf module:twgl/programs\n */\nfunction createUniformSetters(gl, program) {\n  let textureUnit = 0;\n\n  /**\n   * Creates a setter for a uniform of the given program with it's\n   * location embedded in the setter.\n   * @param {WebGLProgram} program\n   * @param {WebGLUniformInfo} uniformInfo\n   * @returns {function} the created setter.\n   */\n  function createUniformSetter(program, uniformInfo, location) {\n    const isArray = uniformInfo.name.endsWith(\"[0]\");\n    const type = uniformInfo.type;\n    const typeInfo = typeMap[type];\n    if (!typeInfo) {\n      throw new Error(`unknown type: 0x${type.toString(16)}`); // we should never get here.\n    }\n    let setter;\n    if (typeInfo.bindPoint) {\n      // it's a sampler\n      const unit = textureUnit;\n      textureUnit += uniformInfo.size;\n      if (isArray) {\n        setter = typeInfo.arraySetter(gl, type, unit, location, uniformInfo.size);\n      } else {\n        setter = typeInfo.setter(gl, type, unit, location, uniformInfo.size);\n      }\n    } else {\n      if (typeInfo.arraySetter && isArray) {\n        setter = typeInfo.arraySetter(gl, location);\n      } else {\n        setter = typeInfo.setter(gl, location);\n      }\n    }\n    setter.location = location;\n    return setter;\n  }\n\n  const uniformSetters = {};\n  const uniformTree = {};\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    if (isBuiltIn(uniformInfo)) {\n      continue;\n    }\n    let name = uniformInfo.name;\n    // remove the array suffix.\n    if (name.endsWith(\"[0]\")) {\n      name = name.substr(0, name.length - 3);\n    }\n    const location = gl.getUniformLocation(program, uniformInfo.name);\n    // the uniform will have no location if it's in a uniform block\n    if (location) {\n      const setter = createUniformSetter(program, uniformInfo, location);\n      uniformSetters[name] = setter;\n      addSetterToUniformTree(name, setter, uniformTree, uniformSetters);\n    }\n  }\n\n  return uniformSetters;\n}\n\n/**\n * @typedef {Object} TransformFeedbackInfo\n * @property {number} index index of transform feedback\n * @property {number} type GL type\n * @property {number} size 1 - 4\n * @memberOf module:twgl\n */\n\n/**\n * Create TransformFeedbackInfo for passing to bindTransformFeedbackInfo.\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {Object<string, module:twgl.TransformFeedbackInfo>}\n * @memberOf module:twgl\n */\nfunction createTransformFeedbackInfo(gl, program) {\n  const info = {};\n  const numVaryings = gl.getProgramParameter(program, TRANSFORM_FEEDBACK_VARYINGS);\n  for (let ii = 0; ii < numVaryings; ++ii) {\n    const varying = gl.getTransformFeedbackVarying(program, ii);\n    info[varying.name] = {\n      index: ii,\n      type: varying.type,\n      size: varying.size,\n    };\n  }\n  return info;\n}\n\n/**\n * Binds buffers for transform feedback.\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {(module:twgl.ProgramInfo|Object<string, module:twgl.TransformFeedbackInfo>)} transformFeedbackInfo A ProgramInfo or TransformFeedbackInfo.\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @memberOf module:twgl\n */\nfunction bindTransformFeedbackInfo(gl, transformFeedbackInfo, bufferInfo) {\n  if (transformFeedbackInfo.transformFeedbackInfo) {\n    transformFeedbackInfo = transformFeedbackInfo.transformFeedbackInfo;\n  }\n  if (bufferInfo.attribs) {\n    bufferInfo = bufferInfo.attribs;\n  }\n  for (const name in bufferInfo) {\n    const varying = transformFeedbackInfo[name];\n    if (varying) {\n      const buf = bufferInfo[name];\n      if (buf.offset) {\n        gl.bindBufferRange(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer, buf.offset, buf.size);\n      } else {\n        gl.bindBufferBase(TRANSFORM_FEEDBACK_BUFFER, varying.index, buf.buffer);\n      }\n    }\n  }\n}\n\n/**\n * Creates a transform feedback and sets the buffers\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {module:twgl.ProgramInfo} programInfo A ProgramInfo as returned from {@link module:twgl.createProgramInfo}\n * @param {(module:twgl.BufferInfo|Object<string, module:twgl.AttribInfo>)} [bufferInfo] A BufferInfo or set of AttribInfos.\n * @return {WebGLTransformFeedback} the created transform feedback\n * @memberOf module:twgl\n */\nfunction createTransformFeedback(gl, programInfo, bufferInfo) {\n  const tf = gl.createTransformFeedback();\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, tf);\n  gl.useProgram(programInfo.program);\n  bindTransformFeedbackInfo(gl, programInfo, bufferInfo);\n  gl.bindTransformFeedback(TRANSFORM_FEEDBACK, null);\n  return tf;\n}\n\n/**\n * @typedef {Object} UniformData\n * @property {string} name The name of the uniform\n * @property {number} type The WebGL type enum for this uniform\n * @property {number} size The number of elements for this uniform\n * @property {number} blockNdx The block index this uniform appears in\n * @property {number} offset The byte offset in the block for this uniform's value\n * @memberOf module:twgl\n */\n\n/**\n * The specification for one UniformBlockObject\n *\n * @typedef {Object} BlockSpec\n * @property {number} index The index of the block.\n * @property {number} size The size in bytes needed for the block\n * @property {number[]} uniformIndices The indices of the uniforms used by the block. These indices\n *    correspond to entries in a UniformData array in the {@link module:twgl.UniformBlockSpec}.\n * @property {bool} usedByVertexShader Self explanatory\n * @property {bool} usedByFragmentShader Self explanatory\n * @property {bool} used Self explanatory\n * @memberOf module:twgl\n */\n\n/**\n * A `UniformBlockSpec` represents the data needed to create and bind\n * UniformBlockObjects for a given program\n *\n * @typedef {Object} UniformBlockSpec\n * @property {Object.<string, module:twgl.BlockSpec>} blockSpecs The BlockSpec for each block by block name\n * @property {UniformData[]} uniformData An array of data for each uniform by uniform index.\n * @memberOf module:twgl\n */\n\n/**\n * Creates a UniformBlockSpec for the given program.\n *\n * A UniformBlockSpec represents the data needed to create and bind\n * UniformBlockObjects\n *\n * @param {WebGL2RenderingContext} gl A WebGL2 Rendering Context\n * @param {WebGLProgram} program A WebGLProgram for a successfully linked program\n * @return {module:twgl.UniformBlockSpec} The created UniformBlockSpec\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockSpecFromProgram(gl, program) {\n  const numUniforms = gl.getProgramParameter(program, ACTIVE_UNIFORMS);\n  const uniformData = [];\n  const uniformIndices = [];\n\n  for (let ii = 0; ii < numUniforms; ++ii) {\n    uniformIndices.push(ii);\n    uniformData.push({});\n    const uniformInfo = gl.getActiveUniform(program, ii);\n    uniformData[ii].name = uniformInfo.name;\n  }\n\n  [\n    [ \"UNIFORM_TYPE\", \"type\" ],\n    [ \"UNIFORM_SIZE\", \"size\" ],  // num elements\n    [ \"UNIFORM_BLOCK_INDEX\", \"blockNdx\" ],\n    [ \"UNIFORM_OFFSET\", \"offset\", ],\n  ].forEach(function(pair) {\n    const pname = pair[0];\n    const key = pair[1];\n    gl.getActiveUniforms(program, uniformIndices, gl[pname]).forEach(function(value, ndx) {\n      uniformData[ndx][key] = value;\n    });\n  });\n\n  const blockSpecs = {};\n\n  const numUniformBlocks = gl.getProgramParameter(program, ACTIVE_UNIFORM_BLOCKS);\n  for (let ii = 0; ii < numUniformBlocks; ++ii) {\n    const name = gl.getActiveUniformBlockName(program, ii);\n    const blockSpec = {\n      index: gl.getUniformBlockIndex(program, name),\n      usedByVertexShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      usedByFragmentShader: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      size: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_DATA_SIZE),\n      uniformIndices: gl.getActiveUniformBlockParameter(program, ii, UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    };\n    blockSpec.used = blockSpec.usedByVertexShader || blockSpec.usedByFragmentShader;\n    blockSpecs[name] = blockSpec;\n  }\n\n  return {\n    blockSpecs: blockSpecs,\n    uniformData: uniformData,\n  };\n}\n\nconst arraySuffixRE = /\\[\\d+\\]\\.$/;  // better way to check?\n\nconst pad = (v, padding) => ((v + (padding - 1)) / padding | 0) * padding;\n\nfunction createUniformBlockUniformSetter(view, isArray, rows, cols) {\n  if (isArray || rows) {\n    cols = cols || 1;\n    const numElements = view.length;\n    const totalRows = numElements / 4;\n    return function(value) {\n      let dst = 0;\n      let src = 0;\n      for (let row = 0; row < totalRows; ++row) {\n        for (let col = 0; col < cols; ++col) {\n          view[dst++] = value[src++];\n        }\n        dst += 4 - cols;\n      }\n    };\n  } else {\n    return function(value) {\n      if (value.length) {\n        view.set(value);\n      } else {\n        view[0] = value;\n      }\n    };\n  }\n}\n\n/**\n * Represents a UniformBlockObject including an ArrayBuffer with all the uniform values\n * and a corresponding WebGLBuffer to hold those values on the GPU\n *\n * @typedef {Object} UniformBlockInfo\n * @property {string} name The name of the block\n * @property {ArrayBuffer} array The array buffer that contains the uniform values\n * @property {Float32Array} asFloat A float view on the array buffer. This is useful\n *    inspecting the contents of the buffer in the debugger.\n * @property {WebGLBuffer} buffer A WebGL buffer that will hold a copy of the uniform values for rendering.\n * @property {number} [offset] offset into buffer\n * @property {Object<string, ArrayBufferView>} uniforms A uniform name to ArrayBufferView map.\n *   each Uniform has a correctly typed `ArrayBufferView` into array at the correct offset\n *   and length of that uniform. So for example a float uniform would have a 1 float `Float32Array`\n *   view. A single mat4 would have a 16 element `Float32Array` view. An ivec2 would have an\n *   `Int32Array` view, etc.\n * @property {Object<string, function>} setters A setter for this uniform.\n *   The reason to use setters is elements of arrays are padded to vec4 sizes which\n *   means if you want to set an array of 4 floats you'd need to set 16 values\n *   (or set elements 0, 4, 8, 12). In other words\n *   `someBlockInfo.uniforms.some4FloatArrayUniform.set([0, , , , 1, , , , 2, , , , 3])`\n *   where as the setter handles just passing in [0, 1, 2, 3] either directly as in\n *   `someBlockInfo.setter.some4FloatArrayUniform.set([0, 1, 2, 3])` (not recommended)\n *   or via {@link module:twgl.setBlockUniforms}\n * @memberOf module:twgl\n */\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {WebGLProgram} program A WebGLProgram\n * @param {module:twgl.UniformBlockSpec} uniformBlockSpec. A UniformBlockSpec as returned\n *     from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfoFromProgram(gl, program, uniformBlockSpec, blockName) {\n  const blockSpecs = uniformBlockSpec.blockSpecs;\n  const uniformData = uniformBlockSpec.uniformData;\n  const blockSpec = blockSpecs[blockName];\n  if (!blockSpec) {\n    warn(\"no uniform block object named:\", blockName);\n    return {\n      name: blockName,\n      uniforms: {},\n    };\n  }\n  const array = new ArrayBuffer(blockSpec.size);\n  const buffer = gl.createBuffer();\n  const uniformBufferIndex = blockSpec.index;\n  gl.bindBuffer(UNIFORM_BUFFER, buffer);\n  gl.uniformBlockBinding(program, blockSpec.index, uniformBufferIndex);\n\n  let prefix = blockName + \".\";\n  if (arraySuffixRE.test(prefix)) {\n    prefix = prefix.replace(arraySuffixRE, \".\");\n  }\n  const uniforms = {};\n  const setters = {};\n  const setterTree = {};\n  blockSpec.uniformIndices.forEach(function(uniformNdx) {\n    const data = uniformData[uniformNdx];\n    let name = data.name;\n    if (name.startsWith(prefix)) {\n      name = name.substr(prefix.length);\n    }\n    const isArray = name.endsWith('[0]');\n    if (isArray) {\n      name = name.substr(0, name.length - 3);\n    }\n    const typeInfo = typeMap[data.type];\n    const Type = typeInfo.Type;\n    const byteLength = isArray\n        ? pad(typeInfo.size, 16) * data.size\n        : typeInfo.size * data.size;\n    const uniformView = new Type(array, data.offset, byteLength / Type.BYTES_PER_ELEMENT);\n    uniforms[name] = uniformView;\n    // Note: I'm not sure what to do here. The original\n    // idea was to create TypedArray views into each part\n    // of the block. This is useful, for example if you have\n    // a block with { mat4: model; mat4 view; mat4 projection; }\n    // you'll get a Float32Array for each one suitable for\n    // passing to most JS math libraries including twgl's and glMatrix.js.\n    //\n    // But, if you have a an array of structures, especially if that\n    // array is large, you get a whole bunch of TypedArray views.\n    // Every one of them has overhead and switching between them all\n    // is probably a cache miss. In that case it would really be better\n    // to just have one view (asFloat) and have all the setters\n    // just reference the correct portion. But, then you can't easily\n    // treat a matrix, or a vec4, as a standalone thing like you can\n    // with all the views.\n    //\n    // Another problem with the views is they are not shared. With\n    // uniforms you have one set of setters. With UniformBlockInfo\n    // you have a set of setters *pre block instance*. That's because\n    // TypedArray views can't be mapped to different buffers.\n    //\n    // My gut right now is if you really want the speed and compactness\n    // then you should probably roll your own solution. TWGL's goal\n    // here is ease of use as AFAICT there is no simple generic efficient\n    // solution.\n    const setter = createUniformBlockUniformSetter(uniformView, isArray, typeInfo.rows, typeInfo.cols);\n    setters[name] = setter;\n    addSetterToUniformTree(name, setter, setterTree, setters);\n  });\n  return {\n    name: blockName,\n    array,\n    asFloat: new Float32Array(array),  // for debugging\n    buffer,\n    uniforms,\n    setters,\n  };\n}\n\n/**\n * Creates a `UniformBlockInfo` for the specified block\n *\n * Note: **If the blockName matches no existing blocks a warning is printed to the console and a dummy\n * `UniformBlockInfo` is returned**. This is because when debugging GLSL\n * it is common to comment out large portions of a shader or for example set\n * the final output to a constant. When that happens blocks get optimized out.\n * If this function did not create dummy blocks your code would crash when debugging.\n *\n * @param {WebGL2RenderingContext} gl A WebGL2RenderingContext\n * @param {module:twgl.ProgramInfo} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo}\n * @param {string} blockName The name of the block.\n * @return {module:twgl.UniformBlockInfo} The created UniformBlockInfo\n * @memberOf module:twgl/programs\n */\nfunction createUniformBlockInfo(gl, programInfo, blockName) {\n  return createUniformBlockInfoFromProgram(gl, programInfo.program, programInfo.uniformBlockSpec, blockName);\n}\n\n/**\n * Binds a uniform block to the matching uniform block point.\n * Matches by blocks by name so blocks must have the same name not just the same\n * structure.\n *\n * If you have changed any values and you upload the values into the corresponding WebGLBuffer\n * call {@link module:twgl.setUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @return {bool} true if buffer was bound. If the programInfo has no block with the same block name\n *     no buffer is bound.\n * @memberOf module:twgl/programs\n */\nfunction bindUniformBlock(gl, programInfo, uniformBlockInfo) {\n  const uniformBlockSpec = programInfo.uniformBlockSpec || programInfo;\n  const blockSpec = uniformBlockSpec.blockSpecs[uniformBlockInfo.name];\n  if (blockSpec) {\n    const bufferBindIndex = blockSpec.index;\n    gl.bindBufferRange(UNIFORM_BUFFER, bufferBindIndex, uniformBlockInfo.buffer, uniformBlockInfo.offset || 0, uniformBlockInfo.array.byteLength);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Uploads the current uniform values to the corresponding WebGLBuffer\n * and binds that buffer to the program's corresponding bind point for the uniform block object.\n *\n * If you haven't changed any values and you only need to bind the uniform block object\n * call {@link module:twgl.bindUniformBlock} instead.\n *\n * @param {WebGL2RenderingContext} gl A WebGL 2 rendering context.\n * @param {(module:twgl.ProgramInfo|module:twgl.UniformBlockSpec)} programInfo a `ProgramInfo`\n *     as returned from {@link module:twgl.createProgramInfo} or or `UniformBlockSpec` as\n *     returned from {@link module:twgl.createUniformBlockSpecFromProgram}.\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo a `UniformBlockInfo` as returned from\n *     {@link module:twgl.createUniformBlockInfo}.\n * @memberOf module:twgl/programs\n */\nfunction setUniformBlock(gl, programInfo, uniformBlockInfo) {\n  if (bindUniformBlock(gl, programInfo, uniformBlockInfo)) {\n    gl.bufferData(UNIFORM_BUFFER, uniformBlockInfo.array, DYNAMIC_DRAW);\n  }\n}\n\n/**\n * Sets values of a uniform block object\n *\n * @param {module:twgl.UniformBlockInfo} uniformBlockInfo A UniformBlockInfo as returned by {@link module:twgl.createUniformBlockInfo}.\n * @param {Object.<string, ?>} values A uniform name to value map where the value is correct for the given\n *    type of uniform. So for example given a block like\n *\n *       uniform SomeBlock {\n *         float someFloat;\n *         vec2 someVec2;\n *         vec3 someVec3Array[2];\n *         int someInt;\n *       }\n *\n *  You can set the values of the uniform block with\n *\n *       twgl.setBlockUniforms(someBlockInfo, {\n *          someFloat: 12.3,\n *          someVec2: [1, 2],\n *          someVec3Array: [1, 2, 3, 4, 5, 6],\n *          someInt: 5,\n *       }\n *\n *  Arrays can be JavaScript arrays or typed arrays\n *\n *  You can also fill out structure and array values either via\n *  shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Lights {\n *       Light lights[2];\n *     };\n *\n *     // in JavaScript\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices.\n *\n *     twgl.setBlockUniforms(someBlockInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n *  **IMPORTANT!**, packing in a UniformBlock is unintuitive.\n *  For example the actual layout of `someVec3Array` above in memory\n *  is `1, 2, 3, unused, 4, 5, 6, unused`. twgl takes in 6 values\n *  as shown about and copies them, skipping the padding. This might\n *  be confusing if you're already familiar with Uniform blocks.\n *\n *  If you want to deal with the padding yourself you can access the array\n *  buffer views directly. eg:\n *\n *      someBlockInfo.someVec3Array.set([1, 2, 3, 0, 4, 5, 6, 0]);\n *\n *  Any name that doesn't match will be ignored\n * @memberOf module:twgl/programs\n */\nfunction setBlockUniforms(uniformBlockInfo, values) {\n  const setters = uniformBlockInfo.setters;\n  for (const name in values) {\n    const setter = setters[name];\n    if (setter) {\n      const value = values[name];\n      setter(value);\n    }\n  }\n}\n\nfunction setUniformTree(tree, values) {\n  for (const name in values) {\n    const prop = tree[name];\n    if (typeof prop === 'function') {\n      prop(values[name]);\n    } else {\n      setUniformTree(tree[name], values[name]);\n    }\n  }\n}\n\n/**\n * Set uniforms and binds related textures.\n *\n * example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\"]);\n *\n *     const tex1 = gl.createTexture();\n *     const tex2 = gl.createTexture();\n *\n *     ... assume we setup the textures with data ...\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the textures AND set the\n * uniforms.\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *\n * For the example above it is equivalent to\n *\n *     let texUnit = 0;\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex1);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.activeTexture(gl.TEXTURE0 + texUnit);\n *     gl.bindTexture(gl.TEXTURE_2D, tex2);\n *     gl.uniform1i(u_someSamplerLocation, texUnit++);\n *     gl.uniform4fv(u_someColorLocation, [1, 0, 0, 1]);\n *     gl.uniform3fv(u_somePositionLocation, [0, 1, 1]);\n *     gl.uniformMatrix4fv(u_someMatrix, false, [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ]);\n *\n * Note it is perfectly reasonable to call `setUniforms` multiple times. For example\n *\n *     const uniforms = {\n *       u_someSampler: tex1,\n *       u_someOtherSampler: tex2,\n *     };\n *\n *     const moreUniforms {\n *       u_someColor: [1,0,0,1],\n *       u_somePosition: [0,1,1],\n *       u_someMatrix: [\n *         1,0,0,0,\n *         0,1,0,0,\n *         0,0,1,0,\n *         0,0,0,0,\n *       ],\n *     };\n *\n *     twgl.setUniforms(programInfo, uniforms);\n *     twgl.setUniforms(programInfo, moreUniforms);\n *\n * You can also add WebGLSamplers to uniform samplers as in\n *\n *     const uniforms = {\n *       u_someSampler: {\n *         texture: someWebGLTexture,\n *         sampler: someWebGLSampler,\n *       },\n *     };\n *\n * In which case both the sampler and texture will be bound to the\n * same unit.\n *\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n *        uniforms.\n *   You can pass multiple objects by putting them in an array or by calling with more arguments.For example\n *\n *     const sharedUniforms = {\n *       u_fogNear: 10,\n *       u_projection: ...\n *       ...\n *     };\n *\n *     const localUniforms = {\n *       u_world: ...\n *       u_diffuseColor: ...\n *     };\n *\n *     twgl.setUniforms(programInfo, sharedUniforms, localUniforms);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, [sharedUniforms, localUniforms]);\n *\n *     // is the same as\n *\n *     twgl.setUniforms(programInfo, sharedUniforms);\n *     twgl.setUniforms(programInfo, localUniforms};\n *\n *   You can also fill out structure and array values either via\n *   shortcut. Example\n *\n *     // -- in shader --\n *     struct Light {\n *       float intensity;\n *       vec4 color;\n *       float nearFar[2];\n *     };\n *     uniform Light lights[2];\n *\n *     // in JavaScript\n *\n *     twgl.setUniforms(programInfo, {\n *       lights: [\n *         { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.1, 10] },\n *         { intensity: 2.0, color: [0, 0, 1, 1], nearFar[0.2, 15] },\n *       ],\n *     });\n *\n *   or the more traditional way\n *\n *     twgl.setUniforms(programInfo, {\n *       \"lights[0].intensity\": 5.0,\n *       \"lights[0].color\": [1, 0, 0, 1],\n *       \"lights[0].nearFar\": [0.1, 10],\n *       \"lights[1].intensity\": 2.0,\n *       \"lights[1].color\": [0, 0, 1, 1],\n *       \"lights[1].nearFar\": [0.2, 15],\n *     });\n *\n *   You can also specify partial paths\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1]': { intensity: 5.0, color: [1, 0, 0, 1], nearFar[0.2, 15] },\n *     });\n *\n *   But you can not specify leaf array indices\n *\n *     twgl.setUniforms(programInfo, {\n *       'lights[1].nearFar[1]': 15,     // BAD! nearFar is a leaf\n *       'lights[1].nearFar': [0.2, 15], // GOOD\n *     });\n *\n * @memberOf module:twgl/programs\n */\nfunction setUniforms(setters, ...args) {  // eslint-disable-line\n  const actualSetters = setters.uniformSetters || setters;\n  const numArgs = args.length;\n  for (let aNdx = 0; aNdx < numArgs; ++aNdx) {\n    const values = args[aNdx];\n    if (Array.isArray(values)) {\n      const numValues = values.length;\n      for (let ii = 0; ii < numValues; ++ii) {\n        setUniforms(actualSetters, values[ii]);\n      }\n    } else {\n      for (const name in values) {\n        const setter = actualSetters[name];\n        if (setter) {\n          setter(values[name]);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Alias for `setUniforms`\n * @function\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters a `ProgramInfo` as returned from `createProgramInfo` or the setters returned from\n *        `createUniformSetters`.\n * @param {Object.<string, ?>} values an object with values for the\n * @memberOf module:twgl/programs\n */\nconst setUniformsAndBindTextures = setUniforms;\n\n/**\n * Creates setter functions for all attributes of a shader\n * program. You can pass this to {@link module:twgl.setBuffersAndAttributes} to set all your buffers and attributes.\n *\n * @see {@link module:twgl.setAttributes} for example\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {WebGLProgram} program the program to create setters for.\n * @return {Object.<string, function>} an object with a setter for each attribute by name.\n * @memberOf module:twgl/programs\n */\nfunction createAttributeSetters(gl, program) {\n  const attribSetters = {\n  };\n\n  const numAttribs = gl.getProgramParameter(program, ACTIVE_ATTRIBUTES);\n  for (let ii = 0; ii < numAttribs; ++ii) {\n    const attribInfo = gl.getActiveAttrib(program, ii);\n    if (isBuiltIn(attribInfo)) {\n      continue;\n    }\n    const index = gl.getAttribLocation(program, attribInfo.name);\n    const typeInfo = attrTypeMap[attribInfo.type];\n    const setter = typeInfo.setter(gl, index, typeInfo);\n    setter.location = index;\n    attribSetters[attribInfo.name] = setter;\n  }\n\n  return attribSetters;\n}\n\n/**\n * Sets attributes and binds buffers (deprecated... use {@link module:twgl.setBuffersAndAttributes})\n *\n * Example:\n *\n *     const program = createProgramFromScripts(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const attribSetters = createAttributeSetters(program);\n *\n *     const positionBuffer = gl.createBuffer();\n *     const texcoordBuffer = gl.createBuffer();\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *     };\n *\n *     gl.useProgram(program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setAttributes(attribSetters, attribs);\n *\n * Properties of attribs. For each attrib you can add\n * properties:\n *\n * *   type: the type of data in the buffer. Default = gl.FLOAT\n * *   normalize: whether or not to normalize the data. Default = false\n * *   stride: the stride. Default = 0\n * *   offset: offset into the buffer. Default = 0\n * *   divisor: the divisor for instances. Default = undefined\n *\n * For example if you had 3 value float positions, 2 value\n * float texcoord and 4 value uint8 colors you'd setup your\n * attribs like this\n *\n *     const attribs = {\n *       a_position: {buffer: positionBuffer, numComponents: 3},\n *       a_texcoord: {buffer: texcoordBuffer, numComponents: 2},\n *       a_color: {\n *         buffer: colorBuffer,\n *         numComponents: 4,\n *         type: gl.UNSIGNED_BYTE,\n *         normalize: true,\n *       },\n *     };\n *\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} buffers AttribInfos mapped by attribute name.\n * @memberOf module:twgl/programs\n * @deprecated use {@link module:twgl.setBuffersAndAttributes}\n * @private\n */\nfunction setAttributes(setters, buffers) {\n  for (const name in buffers) {\n    const setter = setters[name];\n    if (setter) {\n      setter(buffers[name]);\n    }\n  }\n}\n\n/**\n * Sets attributes and buffers including the `ELEMENT_ARRAY_BUFFER` if appropriate\n *\n * Example:\n *\n *     const programInfo = createProgramInfo(\n *         gl, [\"some-vs\", \"some-fs\");\n *\n *     const arrays = {\n *       position: { numComponents: 3, data: [0, 0, 0, 10, 0, 0, 0, 10, 0, 10, 10, 0], },\n *       texcoord: { numComponents: 2, data: [0, 0, 0, 1, 1, 0, 1, 1],                 },\n *     };\n *\n *     const bufferInfo = createBufferInfoFromArrays(gl, arrays);\n *\n *     gl.useProgram(programInfo.program);\n *\n * This will automatically bind the buffers AND set the\n * attributes.\n *\n *     setBuffersAndAttributes(gl, programInfo, bufferInfo);\n *\n * For the example above it is equivalent to\n *\n *     gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n *     gl.enableVertexAttribArray(a_positionLocation);\n *     gl.vertexAttribPointer(a_positionLocation, 3, gl.FLOAT, false, 0, 0);\n *     gl.bindBuffer(gl.ARRAY_BUFFER, texcoordBuffer);\n *     gl.enableVertexAttribArray(a_texcoordLocation);\n *     gl.vertexAttribPointer(a_texcoordLocation, 4, gl.FLOAT, false, 0, 0);\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext.\n * @param {(module:twgl.ProgramInfo|Object.<string, function>)} setters A `ProgramInfo` as returned from {@link module:twgl.createProgramInfo} or Attribute setters as returned from {@link module:twgl.createAttributeSetters}\n * @param {(module:twgl.BufferInfo|module:twgl.VertexArrayInfo)} buffers a `BufferInfo` as returned from {@link module:twgl.createBufferInfoFromArrays}.\n *   or a `VertexArrayInfo` as returned from {@link module:twgl.createVertexArrayInfo}\n * @memberOf module:twgl/programs\n */\nfunction setBuffersAndAttributes(gl, programInfo, buffers) {\n  if (buffers.vertexArrayObject) {\n    gl.bindVertexArray(buffers.vertexArrayObject);\n  } else {\n    setAttributes(programInfo.attribSetters || programInfo, buffers.attribs);\n    if (buffers.indices) {\n      gl.bindBuffer(ELEMENT_ARRAY_BUFFER, buffers.indices);\n    }\n  }\n}\n\n/**\n * @typedef {Object} ProgramInfo\n * @property {WebGLProgram} program A shader program\n * @property {Object<string, function>} uniformSetters object of setters as returned from createUniformSetters,\n * @property {Object<string, function>} attribSetters object of setters as returned from createAttribSetters,\n * @property {module:twgl.UniformBlockSpec} [uniformBlockSpec] a uniform block spec for making UniformBlockInfos with createUniformBlockInfo etc..\n * @property {Object<string, module:twgl.TransformFeedbackInfo>} [transformFeedbackInfo] info for transform feedbacks\n * @memberOf module:twgl\n */\n\n/**\n * Creates a ProgramInfo from an existing program.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {WebGLProgram} program an existing WebGLProgram.\n * @return {module:twgl.ProgramInfo} The created ProgramInfo.\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfoFromProgram(gl, program) {\n  const uniformSetters = createUniformSetters(gl, program);\n  const attribSetters = createAttributeSetters(gl, program);\n  const programInfo = {\n    program,\n    uniformSetters,\n    attribSetters,\n  };\n\n  if (utils.isWebGL2(gl)) {\n    programInfo.uniformBlockSpec = createUniformBlockSpecFromProgram(gl, program);\n    programInfo.transformFeedbackInfo = createTransformFeedbackInfo(gl, program);\n  }\n\n  return programInfo;\n}\n\nconst notIdRE = /\\s|{|}|;/;\n\n/**\n * Creates a ProgramInfo from 2 sources.\n *\n * A ProgramInfo contains\n *\n *     programInfo = {\n *        program: WebGLProgram,\n *        uniformSetters: object of setters as returned from createUniformSetters,\n *        attribSetters: object of setters as returned from createAttribSetters,\n *     }\n *\n * NOTE: There are 4 signatures for this function\n *\n *     twgl.createProgramInfo(gl, [vs, fs], options);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_errFunc);\n *     twgl.createProgramInfo(gl, [vs, fs], opt_attribs, opt_locations, opt_errFunc);\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {string[]} shaderSources Array of sources for the\n *        shaders or ids. The first is assumed to be the vertex shader,\n *        the second the fragment shader.\n * @param {module:twgl.ProgramOptions|string[]|module:twgl.ErrorCallback} [opt_attribs] Options for the program or an array of attribs names or an error callback. Locations will be assigned by index if not passed in\n * @param {number[]} [opt_locations|module:twgl.ErrorCallback] The locations for the. A parallel array to opt_attribs letting you assign locations or an error callback.\n * @param {module:twgl.ErrorCallback} [opt_errorCallback] callback for errors. By default it just prints an error to the console\n *        on error. If you want something else pass an callback. It's passed an error message.\n * @return {module:twgl.ProgramInfo?} The created ProgramInfo or null if it failed to link or compile\n * @memberOf module:twgl/programs\n */\nfunction createProgramInfo(\n    gl, shaderSources, opt_attribs, opt_locations, opt_errorCallback) {\n  const progOptions = getProgramOptions(opt_attribs, opt_locations, opt_errorCallback);\n  const errors = [];\n  shaderSources = shaderSources.map(function(source) {\n    // Lets assume if there is no \\n it's an id\n    if (!notIdRE.test(source)) {\n      const script = getElementById(source);\n      if (!script) {\n        const err = `no element with id: ${source}`;\n        progOptions.errorCallback(err);\n        errors.push(err);\n      } else {\n        source = script.text;\n      }\n    }\n    return source;\n  });\n\n  if (errors.length) {\n    return reportError(progOptions, '');\n  }\n\n  const origCallback = progOptions.callback;\n  if (origCallback) {\n    progOptions.callback = (err, program) => {\n      origCallback(err, err ? undefined : createProgramInfoFromProgram(gl, program));\n    };\n  }\n\n  const program = createProgramFromSources(gl, shaderSources, progOptions);\n  if (!program) {\n    return null;\n  }\n\n  return createProgramInfoFromProgram(gl, program);\n}\n\nfunction checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions) {\n  // check errors for everything.\n  for (const [name, program] of Object.entries(programs)) {\n    const options = {...programOptions};\n    const spec = programSpecs[name];\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    const errors = getProgramErrors(gl, program, options.errorCallback);\n    if (errors) {\n      // delete everything we created\n      for (const program of Object.values(programs)) {\n        const shaders = gl.getAttachedShaders(program);\n        gl.deleteProgram(program);\n        for (const shader of shaders) {\n          // Don't delete it if we didn't create it.\n          if (!noDeleteShadersSet.has(shader)) {\n            gl.deleteShader(shader);\n          }\n        }\n      }\n      return errors;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * Creates multiple programs\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgram}\n *\n * Example:\n *\n *     const programs = twgl.createPrograms(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nfunction createPrograms(gl, programSpecs, programOptions = {}) {\n  // Remember existing shaders so that if there is an error we don't delete them\n  const noDeleteShadersSet = new Set();\n\n  // compile and link everything\n  const programs = Object.fromEntries(Object.entries(programSpecs).map(([name, spec]) => {\n    const options = {...programOptions};\n    const shaders = Array.isArray(spec) ? spec : spec.shaders;\n    if (!Array.isArray(spec)) {\n      Object.assign(options, spec);\n    }\n    shaders.forEach(noDeleteShadersSet.add, noDeleteShadersSet);\n    return [name, createProgramNoCheck(gl, shaders, options)];\n  }));\n\n  if (programOptions.callback) {\n    waitForAllProgramsLinkCompletionAsync(gl, programs).then(() => {\n      const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n      programOptions.callback(errors, errors ? undefined : programs);\n    });\n    return undefined;\n  }\n\n  const errors = checkAllPrograms(gl, programs, programSpecs, noDeleteShadersSet, programOptions);\n  return errors ? undefined : programs;\n}\n\n/**\n * Creates multiple programInfos\n *\n * Note: the reason this function exists is because the fastest way to create multiple\n * programs in WebGL is to create and compile all shaders and link all programs and only\n * afterwards check if they succeeded. In that way, giving all your shaders\n *\n * @see {@link module:twgl.createProgramInfo}\n *\n * Examples:\n *\n *     const programInfos = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * or\n *\n *     const {lambert, phong, particles} = twgl.createProgramInfos(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, module:twgl.ProgramInfo>?} the created programInfos by name\n */\nfunction createProgramInfos(gl, programSpecs, programOptions) {\n  programOptions = getProgramOptions(programOptions);\n\n  function createProgramInfosForPrograms(gl, programs) {\n    return Object.fromEntries(Object.entries(programs).map(([name, program]) =>\n      [name, createProgramInfoFromProgram(gl, program)]\n    ));\n  }\n\n  const origCallback = programOptions.callback;\n  if (origCallback) {\n    programOptions.callback = (err, programs) => {\n      origCallback(err, err ? undefined : createProgramInfosForPrograms(gl, programs));\n    };\n  }\n\n  const programs = createPrograms(gl, programSpecs, programOptions);\n  if (origCallback || !programs) {\n    return undefined;\n  }\n\n  return createProgramInfosForPrograms(gl, programs);\n}\n\n/**\n * Creates multiple programs asynchronously\n *\n * @see {@link module:twgl.createProgramAsync}\n *\n * Example:\n *\n *     const programs = await twgl.createProgramsAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Object.<string, WebGLProgram>?} the created programInfos by name\n */\nconst createProgramsAsync = wrapCallbackFnToAsyncFn(createPrograms);\n\n/**\n * Creates multiple programInfos asynchronously\n *\n * @see {@link module:twgl.createProgramInfoAsync}\n *\n * Example:\n *\n *     const programInfos = await twgl.createProgramInfosAsync(gl, {\n *       lambert: [lambertVS, lambertFS],\n *       phong: [phongVS, phoneFS],\n *       particles: {\n *         shaders: [particlesVS, particlesFS],\n *         transformFeedbackVaryings: ['position', 'velocity'],\n *       },\n *     });\n *\n * @function\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string, module:twgl.ProgramSpec>} programSpecs An object of ProgramSpecs, one per program.\n * @param {module:twgl.ProgramOptions} [programOptions] options to apply to all programs\n * @return {Promise<Object.<string, module:twgl.ProgramInfo>>} the created programInfos by name\n */\nconst createProgramInfosAsync = wrapCallbackFnToAsyncFn(createProgramInfos);\n\nexport {\n  createAttributeSetters,\n\n  createProgram,\n  createProgramAsync,\n  createPrograms,\n  createProgramsAsync,\n  createProgramFromScripts,\n  createProgramFromSources,\n  createProgramInfo,\n  createProgramInfoAsync,\n  createProgramInfos,\n  createProgramInfosAsync,\n  createProgramInfoFromProgram,\n  createUniformSetters,\n  createUniformBlockSpecFromProgram,\n  createUniformBlockInfoFromProgram,\n  createUniformBlockInfo,\n\n  createTransformFeedback,\n  createTransformFeedbackInfo,\n  bindTransformFeedbackInfo,\n\n  setAttributes,\n  setBuffersAndAttributes,\n  setUniforms,\n  setUniformsAndBindTextures,\n  setUniformBlock,\n  setBlockUniforms,\n  bindUniformBlock,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as utils from './utils.js';\nimport * as typedArrays from './typedarrays.js';\nimport * as helper from './helper.js';\n\n/**\n * Low level texture related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.textures` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/textures\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  textureColor: new Uint8Array([128, 192, 255, 255]),\n  textureOptions: {},\n  crossOrigin: undefined,\n};\nconst isArrayBuffer = typedArrays.isArrayBuffer;\n\n// Should we make this on demand?\nconst getShared2DContext = function() {\n  let s_ctx;\n  return function getShared2DContext() {\n    s_ctx = s_ctx ||\n        ((typeof document !== 'undefined' && document.createElement)\n          ? document.createElement(\"canvas\").getContext(\"2d\")\n          : null);\n    return s_ctx;\n  };\n}();\n\n// NOTE: Chrome supports 2D canvas in a Worker (behind flag as of v64 but\n//       not only does Firefox NOT support it but Firefox freezes immediately\n//       if you try to create one instead of just returning null and continuing.\n//  : (global.OffscreenCanvas && (new global.OffscreenCanvas(1, 1)).getContext(\"2d\"));  // OffscreenCanvas may not support 2d\n\n// NOTE: We can maybe remove some of the need for the 2d canvas. In WebGL2\n// we can use the various unpack settings. Otherwise we could try using\n// the ability of an ImageBitmap to be cut. Unfortunately cutting an ImageBitmap\n// is async and the current TWGL code expects a non-Async result though that\n// might not be a problem. ImageBitmap though is not available in Edge or Safari\n// as of 2018-01-02\n\n/* PixelFormat */\nconst ALPHA                          = 0x1906;\nconst RGB                            = 0x1907;\nconst RGBA                           = 0x1908;\nconst LUMINANCE                      = 0x1909;\nconst LUMINANCE_ALPHA                = 0x190A;\nconst DEPTH_COMPONENT                = 0x1902;\nconst DEPTH_STENCIL                  = 0x84F9;\n\n/* TextureWrapMode */\n// const REPEAT                         = 0x2901;\n// const MIRRORED_REPEAT                = 0x8370;\nconst CLAMP_TO_EDGE                  = 0x812f;\n\n/* TextureMagFilter */\nconst NEAREST                        = 0x2600;\nconst LINEAR                         = 0x2601;\n\n/* TextureMinFilter */\n// const NEAREST_MIPMAP_NEAREST         = 0x2700;\n// const LINEAR_MIPMAP_NEAREST          = 0x2701;\n// const NEAREST_MIPMAP_LINEAR          = 0x2702;\n// const LINEAR_MIPMAP_LINEAR           = 0x2703;\n\n/* Texture Target */\nconst TEXTURE_2D                     = 0x0de1;\nconst TEXTURE_CUBE_MAP               = 0x8513;\nconst TEXTURE_3D                     = 0x806f;\nconst TEXTURE_2D_ARRAY               = 0x8c1a;\n\n/* Cubemap Targets */\nconst TEXTURE_CUBE_MAP_POSITIVE_X    = 0x8515;\nconst TEXTURE_CUBE_MAP_NEGATIVE_X    = 0x8516;\nconst TEXTURE_CUBE_MAP_POSITIVE_Y    = 0x8517;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Y    = 0x8518;\nconst TEXTURE_CUBE_MAP_POSITIVE_Z    = 0x8519;\nconst TEXTURE_CUBE_MAP_NEGATIVE_Z    = 0x851a;\n\n/* Texture Parameters */\nconst TEXTURE_MIN_FILTER             = 0x2801;\nconst TEXTURE_MAG_FILTER             = 0x2800;\nconst TEXTURE_WRAP_S                 = 0x2802;\nconst TEXTURE_WRAP_T                 = 0x2803;\nconst TEXTURE_WRAP_R                 = 0x8072;\nconst TEXTURE_MIN_LOD                = 0x813a;\nconst TEXTURE_MAX_LOD                = 0x813b;\nconst TEXTURE_BASE_LEVEL             = 0x813c;\nconst TEXTURE_MAX_LEVEL              = 0x813d;\nconst TEXTURE_COMPARE_MODE           = 0x884C;\nconst TEXTURE_COMPARE_FUNC           = 0x884D;\n\n/* Pixel store */\nconst UNPACK_ALIGNMENT                   = 0x0cf5;\nconst UNPACK_ROW_LENGTH                  = 0x0cf2;\nconst UNPACK_IMAGE_HEIGHT                = 0x806e;\nconst UNPACK_SKIP_PIXELS                 = 0x0cf4;\nconst UNPACK_SKIP_ROWS                   = 0x0cf3;\nconst UNPACK_SKIP_IMAGES                 = 0x806d;\nconst UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243;\nconst UNPACK_PREMULTIPLY_ALPHA_WEBGL     = 0x9241;\nconst UNPACK_FLIP_Y_WEBGL                = 0x9240;\n\nconst R8                           = 0x8229;\nconst R8_SNORM                     = 0x8F94;\nconst R16F                         = 0x822D;\nconst R32F                         = 0x822E;\nconst R8UI                         = 0x8232;\nconst R8I                          = 0x8231;\nconst RG16UI                       = 0x823A;\nconst RG16I                        = 0x8239;\nconst RG32UI                       = 0x823C;\nconst RG32I                        = 0x823B;\nconst RG8                          = 0x822B;\nconst RG8_SNORM                    = 0x8F95;\nconst RG16F                        = 0x822F;\nconst RG32F                        = 0x8230;\nconst RG8UI                        = 0x8238;\nconst RG8I                         = 0x8237;\nconst R16UI                        = 0x8234;\nconst R16I                         = 0x8233;\nconst R32UI                        = 0x8236;\nconst R32I                         = 0x8235;\nconst RGB8                         = 0x8051;\nconst SRGB8                        = 0x8C41;\nconst RGB565                       = 0x8D62;\nconst RGB8_SNORM                   = 0x8F96;\nconst R11F_G11F_B10F               = 0x8C3A;\nconst RGB9_E5                      = 0x8C3D;\nconst RGB16F                       = 0x881B;\nconst RGB32F                       = 0x8815;\nconst RGB8UI                       = 0x8D7D;\nconst RGB8I                        = 0x8D8F;\nconst RGB16UI                      = 0x8D77;\nconst RGB16I                       = 0x8D89;\nconst RGB32UI                      = 0x8D71;\nconst RGB32I                       = 0x8D83;\nconst RGBA8                        = 0x8058;\nconst SRGB8_ALPHA8                 = 0x8C43;\nconst RGBA8_SNORM                  = 0x8F97;\nconst RGB5_A1                      = 0x8057;\nconst RGBA4                        = 0x8056;\nconst RGB10_A2                     = 0x8059;\nconst RGBA16F                      = 0x881A;\nconst RGBA32F                      = 0x8814;\nconst RGBA8UI                      = 0x8D7C;\nconst RGBA8I                       = 0x8D8E;\nconst RGB10_A2UI                   = 0x906F;\nconst RGBA16UI                     = 0x8D76;\nconst RGBA16I                      = 0x8D88;\nconst RGBA32I                      = 0x8D82;\nconst RGBA32UI                     = 0x8D70;\n\nconst DEPTH_COMPONENT16            = 0x81A5;\nconst DEPTH_COMPONENT24            = 0x81A6;\nconst DEPTH_COMPONENT32F           = 0x8CAC;\nconst DEPTH32F_STENCIL8            = 0x8CAD;\nconst DEPTH24_STENCIL8             = 0x88F0;\n\n/* DataType */\nconst BYTE                         = 0x1400;\nconst UNSIGNED_BYTE                = 0x1401;\nconst SHORT                        = 0x1402;\nconst UNSIGNED_SHORT               = 0x1403;\nconst INT                          = 0x1404;\nconst UNSIGNED_INT                 = 0x1405;\nconst FLOAT                        = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst HALF_FLOAT_OES               = 0x8D61;  // Thanks Khronos for making this different >:(\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst RG                           = 0x8227;\nconst RG_INTEGER                   = 0x8228;\nconst RED                          = 0x1903;\nconst RED_INTEGER                  = 0x8D94;\nconst RGB_INTEGER                  = 0x8D98;\nconst RGBA_INTEGER                 = 0x8D99;\n\nconst formatInfo = {};\n{\n  // NOTE: this is named `numColorComponents` vs `numComponents` so we can let Uglify mangle\n  // the name.\n  const f = formatInfo;\n  f[ALPHA]           = { numColorComponents: 1, };\n  f[LUMINANCE]       = { numColorComponents: 1, };\n  f[LUMINANCE_ALPHA] = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RED]             = { numColorComponents: 1, };\n  f[RED_INTEGER]     = { numColorComponents: 1, };\n  f[RG]              = { numColorComponents: 2, };\n  f[RG_INTEGER]      = { numColorComponents: 2, };\n  f[RGB]             = { numColorComponents: 3, };\n  f[RGB_INTEGER]     = { numColorComponents: 3, };\n  f[RGBA]            = { numColorComponents: 4, };\n  f[RGBA_INTEGER]    = { numColorComponents: 4, };\n  f[DEPTH_COMPONENT] = { numColorComponents: 1, };\n  f[DEPTH_STENCIL]   = { numColorComponents: 2, };\n}\n\n/**\n * @typedef {Object} TextureFormatDetails\n * @property {number} textureFormat format to pass texImage2D and similar functions.\n * @property {boolean} colorRenderable true if you can render to this format of texture.\n * @property {boolean} textureFilterable true if you can filter the texture, false if you can ony use `NEAREST`.\n * @property {number[]} type Array of possible types you can pass to texImage2D and similar function\n * @property {Object.<number,number>} bytesPerElementMap A map of types to bytes per element\n * @private\n */\n\nlet s_textureInternalFormatInfo;\nfunction getTextureInternalFormatInfo(internalFormat) {\n  if (!s_textureInternalFormatInfo) {\n    // NOTE: these properties need unique names so we can let Uglify mangle the name.\n    const t = {};\n    // unsized formats\n    t[ALPHA]              = { textureFormat: ALPHA,           colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE]          = { textureFormat: LUMINANCE,       colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1, 2, 2, 4],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[LUMINANCE_ALPHA]    = { textureFormat: LUMINANCE_ALPHA, colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2, 4, 4, 8],        type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT], };\n    t[RGB]                = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 6, 6, 12, 2],    type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_5_6_5], };\n    t[RGBA]               = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 8, 8, 16, 2, 2], type: [UNSIGNED_BYTE, HALF_FLOAT, HALF_FLOAT_OES, FLOAT, UNSIGNED_SHORT_4_4_4_4, UNSIGNED_SHORT_5_5_5_1], };\n    t[DEPTH_COMPONENT]    = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],              type: [UNSIGNED_INT, UNSIGNED_SHORT], };\n\n    // sized formats\n    t[R8]                 = { textureFormat: RED,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\n    t[R8_SNORM]           = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [1],        type: [BYTE], };\n    t[R16F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [4, 2],     type: [FLOAT, HALF_FLOAT], };\n    t[R32F]               = { textureFormat: RED,             colorRenderable: false, textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\n    t[R8UI]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [UNSIGNED_BYTE], };\n    t[R8I]                = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [1],        type: [BYTE], };\n    t[R16UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_SHORT], };\n    t[R16I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [SHORT], };\n    t[R32UI]              = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\n    t[R32I]               = { textureFormat: RED_INTEGER,     colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [INT], };\n    t[RG8]                = { textureFormat: RG,              colorRenderable: true,  textureFilterable: true,  bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\n    t[RG8_SNORM]          = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [2],        type: [BYTE], };\n    t[RG16F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: true,  bytesPerElement: [8, 4],     type: [FLOAT, HALF_FLOAT], };\n    t[RG32F]              = { textureFormat: RG,              colorRenderable: false, textureFilterable: false, bytesPerElement: [8],        type: [FLOAT], };\n    t[RG8UI]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [UNSIGNED_BYTE], };\n    t[RG8I]               = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [2],        type: [BYTE], };\n    t[RG16UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_SHORT], };\n    t[RG16I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [SHORT], };\n    t[RG32UI]             = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_INT], };\n    t[RG32I]              = { textureFormat: RG_INTEGER,      colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [INT], };\n    t[RGB8]               = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[SRGB8]              = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[RGB565]             = { textureFormat: RGB,             colorRenderable: true,  textureFilterable: true,  bytesPerElement: [3, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_6_5], };\n    t[RGB8_SNORM]         = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [3],        type: [BYTE], };\n    t[R11F_G11F_B10F]     = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_10F_11F_11F_REV], };\n    t[RGB9_E5]            = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6, 4], type: [FLOAT, HALF_FLOAT, UNSIGNED_INT_5_9_9_9_REV], };\n    t[RGB16F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: true,  bytesPerElement: [12, 6],    type: [FLOAT, HALF_FLOAT], };\n    t[RGB32F]             = { textureFormat: RGB,             colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [FLOAT], };\n    t[RGB8UI]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [UNSIGNED_BYTE], };\n    t[RGB8I]              = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [3],        type: [BYTE], };\n    t[RGB16UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [UNSIGNED_SHORT], };\n    t[RGB16I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [6],        type: [SHORT], };\n    t[RGB32UI]            = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [UNSIGNED_INT], };\n    t[RGB32I]             = { textureFormat: RGB_INTEGER,     colorRenderable: false, textureFilterable: false, bytesPerElement: [12],       type: [INT], };\n    t[RGBA8]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[SRGB8_ALPHA8]       = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[RGBA8_SNORM]        = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [4],        type: [BYTE], };\n    t[RGB5_A1]            = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2, 4],  type: [UNSIGNED_BYTE, UNSIGNED_SHORT_5_5_5_1, UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA4]              = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4, 2],     type: [UNSIGNED_BYTE, UNSIGNED_SHORT_4_4_4_4], };\n    t[RGB10_A2]           = { textureFormat: RGBA,            colorRenderable: true,  textureFilterable: true,  bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: true,  bytesPerElement: [16, 8],    type: [FLOAT, HALF_FLOAT], };\n    t[RGBA32F]            = { textureFormat: RGBA,            colorRenderable: false, textureFilterable: false, bytesPerElement: [16],       type: [FLOAT], };\n    t[RGBA8UI]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_BYTE], };\n    t[RGBA8I]             = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [BYTE], };\n    t[RGB10_A2UI]         = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_2_10_10_10_REV], };\n    t[RGBA16UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [UNSIGNED_SHORT], };\n    t[RGBA16I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [8],        type: [SHORT], };\n    t[RGBA32I]            = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [INT], };\n    t[RGBA32UI]           = { textureFormat: RGBA_INTEGER,    colorRenderable: true,  textureFilterable: false, bytesPerElement: [16],       type: [UNSIGNED_INT], };\n    // Sized Internal\n    t[DEPTH_COMPONENT16]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [2, 4],     type: [UNSIGNED_SHORT, UNSIGNED_INT], };\n    t[DEPTH_COMPONENT24]  = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT], };\n    t[DEPTH_COMPONENT32F] = { textureFormat: DEPTH_COMPONENT, colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT], };\n    t[DEPTH24_STENCIL8]   = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [UNSIGNED_INT_24_8], };\n    t[DEPTH32F_STENCIL8]  = { textureFormat: DEPTH_STENCIL,   colorRenderable: true,  textureFilterable: false, bytesPerElement: [4],        type: [FLOAT_32_UNSIGNED_INT_24_8_REV], };\n\n    Object.keys(t).forEach(function(internalFormat) {\n      const info = t[internalFormat];\n      info.bytesPerElementMap = {};\n      info.bytesPerElement.forEach(function(bytesPerElement, ndx) {\n        const type = info.type[ndx];\n        info.bytesPerElementMap[type] = bytesPerElement;\n      });\n    });\n    s_textureInternalFormatInfo = t;\n  }\n  return s_textureInternalFormatInfo[internalFormat];\n}\n\n/**\n * Gets the number of bytes per element for a given internalFormat / type\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @param {number} type The type parameter for texImage2D etc..\n * @return {number} the number of bytes per element for the given internalFormat, type combo\n * @memberOf module:twgl/textures\n */\nfunction getBytesPerElementForInternalFormat(internalFormat, type) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  const bytesPerElement = info.bytesPerElementMap[type];\n  if (bytesPerElement === undefined) {\n    throw \"unknown internal format\";\n  }\n  return bytesPerElement;\n}\n\n/**\n * Info related to a specific texture internalFormat as returned\n * from {@link module:twgl/textures.getFormatAndTypeForInternalFormat}.\n *\n * @typedef {Object} TextureFormatInfo\n * @property {number} format Format to pass to texImage2D and related functions\n * @property {number} type Type to pass to texImage2D and related functions\n * @memberOf module:twgl/textures\n */\n\n/**\n * Gets the format and type for a given internalFormat\n *\n * @param {number} internalFormat The internal format\n * @return {module:twgl/textures.TextureFormatInfo} the corresponding format and type,\n * @memberOf module:twgl/textures\n */\nfunction getFormatAndTypeForInternalFormat(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return {\n    format: info.textureFormat,\n    type: info.type[0],\n  };\n}\n\n/**\n * Returns true if value is power of 2\n * @param {number} value number to check.\n * @return true if value is power of 2\n * @private\n */\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) === 0;\n}\n\n/**\n * Gets whether or not we can generate mips for the given\n * internal format.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number} width The width parameter from texImage2D etc..\n * @param {number} height The height parameter from texImage2D etc..\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canGenerateMipmap(gl, width, height, internalFormat) {\n  if (!utils.isWebGL2(gl)) {\n    return isPowerOf2(width) && isPowerOf2(height);\n  }\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.colorRenderable && info.textureFilterable;\n}\n\n/**\n * Gets whether or not we can generate mips for the given format\n * @param {number} internalFormat The internalFormat parameter from texImage2D etc..\n * @return {boolean} true if we can generate mips\n * @memberOf module:twgl/textures\n */\nfunction canFilter(internalFormat) {\n  const info = getTextureInternalFormatInfo(internalFormat);\n  if (!info) {\n    throw \"unknown internal format\";\n  }\n  return info.textureFilterable;\n}\n\n/**\n * Gets the number of components for a given image format.\n * @param {number} format the format.\n * @return {number} the number of components for the format.\n * @memberOf module:twgl/textures\n */\nfunction getNumComponentsForFormat(format) {\n  const info = formatInfo[format];\n  if (!info) {\n    throw \"unknown format: \" + format;\n  }\n  return info.numColorComponents;\n}\n\n/**\n * Gets the texture type for a given array type.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @return {number} the gl texture type\n * @private\n */\nfunction getTextureTypeForArrayType(gl, src, defaultType) {\n  if (isArrayBuffer(src)) {\n    return typedArrays.getGLTypeForTypedArray(src);\n  }\n  return defaultType || UNSIGNED_BYTE;\n}\n\nfunction guessDimensions(gl, target, width, height, numElements) {\n  if (numElements % 1 !== 0) {\n    throw \"can't guess dimensions\";\n  }\n  if (!width && !height) {\n    const size = Math.sqrt(numElements / (target === TEXTURE_CUBE_MAP ? 6 : 1));\n    if (size % 1 === 0) {\n      width = size;\n      height = size;\n    } else {\n      width = numElements;\n      height = 1;\n    }\n  } else if (!height) {\n    height = numElements / width;\n    if (height % 1) {\n      throw \"can't guess dimensions\";\n    }\n  } else if (!width) {\n    width = numElements / height;\n    if (width % 1) {\n      throw \"can't guess dimensions\";\n    }\n  }\n  return {\n    width: width,\n    height: height,\n  };\n}\n\n/**\n * Sets the default texture color.\n *\n * The default texture color is used when loading textures from\n * urls. Because the URL will be loaded async we'd like to be\n * able to use the texture immediately. By putting a 1x1 pixel\n * color in the texture we can start using the texture before\n * the URL has loaded.\n *\n * @param {number[]} color Array of 4 values in the range 0 to 1\n * @deprecated see {@link module:twgl.setDefaults}\n * @memberOf module:twgl/textures\n */\nfunction setDefaultTextureColor(color) {\n  defaults.textureColor = new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  if (newDefaults.textureColor) {\n    setDefaultTextureColor(newDefaults.textureColor);\n  }\n}\n\n/**\n * A function to generate the source for a texture.\n * @callback TextureFunc\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options the texture options\n * @return {*} Returns any of the things documented for `src` for {@link module:twgl.TextureOptions}.\n * @memberOf module:twgl\n */\n\n/**\n * Texture options passed to most texture functions. Each function will use whatever options\n * are appropriate for its needs. This lets you pass the same options to all functions.\n *\n * Note: A `TexImageSource` is defined in the WebGL spec as a `HTMLImageElement`, `HTMLVideoElement`,\n * `HTMLCanvasElement`, `ImageBitmap`, or `ImageData`.\n *\n * @typedef {Object} TextureOptions\n * @property {number} [target] the type of texture `gl.TEXTURE_2D` or `gl.TEXTURE_CUBE_MAP`. Defaults to `gl.TEXTURE_2D`.\n * @property {number} [level] the mip level to affect. Defaults to 0. Note, if set auto will be considered false unless explicitly set to true.\n * @property {number} [width] the width of the texture. Only used if src is an array or typed array or null.\n * @property {number} [height] the height of a texture. Only used if src is an array or typed array or null.\n * @property {number} [depth] the depth of a texture. Only used if src is an array or type array or null and target is `TEXTURE_3D` .\n * @property {number} [min] the min filter setting (eg. `gl.LINEAR`). Defaults to `gl.NEAREST_MIPMAP_LINEAR`\n *     or if texture is not a power of 2 on both dimensions then defaults to `gl.LINEAR`.\n * @property {number} [mag] the mag filter setting (eg. `gl.LINEAR`). Defaults to `gl.LINEAR`\n * @property {number} [minMag] both the min and mag filter settings.\n * @property {number} [internalFormat] internal format for texture. Defaults to `gl.RGBA`\n * @property {number} [format] format for texture. Defaults to `gl.RGBA`.\n * @property {number} [type] type for texture. Defaults to `gl.UNSIGNED_BYTE` unless `src` is ArrayBufferView. If `src`\n *     is ArrayBufferView defaults to type that matches ArrayBufferView type.\n * @property {number} [wrap] Texture wrapping for both S and T (and R if TEXTURE_3D or WebGLSampler). Defaults to `gl.REPEAT` for 2D unless src is WebGL1 and src not npot and `gl.CLAMP_TO_EDGE` for cube\n * @property {number} [wrapS] Texture wrapping for S. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapT] Texture wrapping for T. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [wrapR] Texture wrapping for R. Defaults to `gl.REPEAT` and `gl.CLAMP_TO_EDGE` for cube. If set takes precedence over `wrap`.\n * @property {number} [minLod] TEXTURE_MIN_LOD setting\n * @property {number} [maxLod] TEXTURE_MAX_LOD setting\n * @property {number} [baseLevel] TEXTURE_BASE_LEVEL setting\n * @property {number} [maxLevel] TEXTURE_MAX_LEVEL setting\n * @property {number} [compareFunc] TEXTURE_COMPARE_FUNC setting\n * @property {number} [compareMode] TEXTURE_COMPARE_MODE setting\n * @property {number} [unpackAlignment] The `gl.UNPACK_ALIGNMENT` used when uploading an array. Defaults to 1.\n * @property {number[]|ArrayBufferView} [color] Color to initialize this texture with if loading an image asynchronously.\n *     The default use a blue 1x1 pixel texture. You can set another default by calling `twgl.setDefaults`\n *     or you can set an individual texture's initial color by setting this property. Example: `[1, .5, .5, 1]` = pink\n * @property {number} [premultiplyAlpha] Whether or not to premultiply alpha. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [flipY] Whether or not to flip the texture vertically on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {number} [colorspaceConversion] Whether or not to let the browser do colorspace conversion of the texture on upload. Defaults to whatever the current setting is.\n *     This lets you set it once before calling `twgl.createTexture` or `twgl.createTextures` and only override\n *     the current setting for specific textures.\n * @property {boolean} [auto] If `undefined` or `true`, in WebGL1, texture filtering is set automatically for non-power of 2 images and\n *    mips are generated for power of 2 images. In WebGL2 mips are generated if they can be. Note: if `level` is set above\n *    then then `auto` is assumed to be `false` unless explicity set to `true`.\n * @property {number[]} [cubeFaceOrder] The order that cube faces are pulled out of an img or set of images. The default is\n *\n *     [gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n *      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n *      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z]\n *\n * @property {(number[]|ArrayBufferView|TexImageSource|TexImageSource[]|string|string[]|module:twgl.TextureFunc)} [src] source for texture\n *\n *    If `string` then it's assumed to be a URL to an image. The image will be downloaded async. A usable\n *    1x1 pixel texture will be returned immediately. The texture will be updated once the image has downloaded.\n *    If `target` is `gl.TEXTURE_CUBE_MAP` will attempt to divide image into 6 square pieces. 1x6, 6x1, 3x2, 2x3.\n *    The pieces will be uploaded in `cubeFaceOrder`\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_CUBE_MAP` then it must have 6 entries, one for each face of a cube map.\n *\n *    If `string[]` or `TexImageSource[]` and target is `gl.TEXTURE_2D_ARRAY` then each entry is a slice of the a 2d array texture\n *    and will be scaled to the specified width and height OR to the size of the first image that loads.\n *\n *    If `TexImageSource` then it wil be used immediately to create the contents of the texture. Examples `HTMLImageElement`,\n *    `HTMLCanvasElement`, `HTMLVideoElement`.\n *\n *    If `number[]` or `ArrayBufferView` it's assumed to be data for a texture. If `width` or `height` is\n *    not specified it is guessed as follows. First the number of elements is computed by `src.length / numComponents`\n *    where `numComponents` is derived from `format`. If `target` is `gl.TEXTURE_CUBE_MAP` then `numElements` is divided\n *    by 6. Then\n *\n *    *   If neither `width` nor `height` are specified and `sqrt(numElements)` is an integer then width and height\n *        are set to `sqrt(numElements)`. Otherwise `width = numElements` and `height = 1`.\n *\n *    *   If only one of `width` or `height` is specified then the other equals `numElements / specifiedDimension`.\n *\n * If `number[]` will be converted to `type`.\n *\n * If `src` is a function it will be called with a `WebGLRenderingContext` and these options.\n * Whatever it returns is subject to these rules. So it can return a string url, an `HTMLElement`\n * an array etc...\n *\n * If `src` is undefined then an empty texture will be created of size `width` by `height`.\n *\n * @property {string} [crossOrigin] What to set the crossOrigin property of images when they are downloaded.\n *    default: undefined. Also see {@link module:twgl.setDefaults}.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets any packing state that will be set based on the options.\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setPackState(gl, options) {\n  if (options.colorspaceConversion !== undefined) {\n    gl.pixelStorei(UNPACK_COLORSPACE_CONVERSION_WEBGL, options.colorspaceConversion);\n  }\n  if (options.premultiplyAlpha !== undefined) {\n    gl.pixelStorei(UNPACK_PREMULTIPLY_ALPHA_WEBGL, options.premultiplyAlpha);\n  }\n  if (options.flipY !== undefined) {\n    gl.pixelStorei(UNPACK_FLIP_Y_WEBGL, options.flipY);\n  }\n}\n\n/**\n * Set skip state to defaults\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @private\n */\nfunction setSkipStateToDefault(gl) {\n  gl.pixelStorei(UNPACK_ALIGNMENT, 4);\n  if (utils.isWebGL2(gl)) {\n    gl.pixelStorei(UNPACK_ROW_LENGTH, 0);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_PIXELS, 0);\n    gl.pixelStorei(UNPACK_SKIP_ROWS, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n  }\n}\n\n/**\n * Sets the parameters of a texture or sampler\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {number|WebGLSampler} target texture target or sampler\n * @param {function()} parameteriFn texParameteri or samplerParameteri fn\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @private\n */\nfunction setTextureSamplerParameters(gl, target, parameteriFn, options) {\n  if (options.minMag) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.minMag);\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.minMag);\n  }\n  if (options.min) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_FILTER, options.min);\n  }\n  if (options.mag) {\n    parameteriFn.call(gl, target, TEXTURE_MAG_FILTER, options.mag);\n  }\n  if (options.wrap) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrap);\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrap);\n    if (target === TEXTURE_3D || helper.isSampler(gl, target)) {\n      parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrap);\n    }\n  }\n  if (options.wrapR) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_R, options.wrapR);\n  }\n  if (options.wrapS) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_S, options.wrapS);\n  }\n  if (options.wrapT) {\n    parameteriFn.call(gl, target, TEXTURE_WRAP_T, options.wrapT);\n  }\n  if (options.minLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MIN_LOD, options.minLod);\n  }\n  if (options.maxLod !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LOD, options.maxLod);\n  }\n  if (options.baseLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_BASE_LEVEL, options.baseLevel);\n  }\n  if (options.maxLevel !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_MAX_LEVEL, options.maxLevel);\n  }\n  if (options.compareFunc !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_FUNC, options.compareFunc);\n  }\n  if (options.compareMode !== undefined) {\n    parameteriFn.call(gl, target, TEXTURE_COMPARE_MODE, options.compareMode);\n  }\n}\n\n/**\n * Sets the texture parameters of a texture.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureParameters(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  setTextureSamplerParameters(gl, target, gl.texParameteri, options);\n}\n\n/**\n * Sets the sampler parameters of a sampler.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLSampler} sampler the WebGLSampler to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setSamplerParameters(gl, sampler, options) {\n  setTextureSamplerParameters(gl, sampler, gl.samplerParameteri, options);\n}\n\n/**\n * Creates a new sampler object and sets parameters.\n *\n * Example:\n *\n *      const sampler = twgl.createSampler(gl, {\n *        minMag: gl.NEAREST,         // sets both TEXTURE_MIN_FILTER and TEXTURE_MAG_FILTER\n *        wrap: gl.CLAMP_TO_NEAREST,  // sets both TEXTURE_WRAP_S and TEXTURE_WRAP_T and TEXTURE_WRAP_R\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per sampler.\n * @return {Object.<string,WebGLSampler>} the created samplers by name\n * @private\n */\nfunction createSampler(gl, options) {\n  const sampler = gl.createSampler();\n  setSamplerParameters(gl, sampler, options);\n  return sampler;\n}\n\n/**\n * Creates a multiple sampler objects and sets parameters on each.\n *\n * Example:\n *\n *      const samplers = twgl.createSamplers(gl, {\n *        nearest: {\n *          minMag: gl.NEAREST,\n *        },\n *        nearestClampS: {\n *          minMag: gl.NEAREST,\n *          wrapS: gl.CLAMP_TO_NEAREST,\n *        },\n *        linear: {\n *          minMag: gl.LINEAR,\n *        },\n *        nearestClamp: {\n *          minMag: gl.NEAREST,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClamp: {\n *          minMag: gl.LINEAR,\n *          wrap: gl.CLAMP_TO_EDGE,\n *        },\n *        linearClampT: {\n *          minMag: gl.LINEAR,\n *          wrapT: gl.CLAMP_TO_EDGE,\n *        },\n *      });\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set on the sampler\n * @private\n */\nfunction createSamplers(gl, samplerOptions) {\n  const samplers = {};\n  Object.keys(samplerOptions).forEach(function(name) {\n    samplers[name] = createSampler(gl, samplerOptions[name]);\n  });\n  return samplers;\n}\n\n/**\n * Makes a 1x1 pixel\n * If no color is passed in uses the default color which can be set by calling `setDefaultTextureColor`.\n * @param {(number[]|ArrayBufferView)} [color] The color using 0-1 values\n * @return {Uint8Array} Unit8Array with color.\n * @private\n */\nfunction make1Pixel(color) {\n  color = color || defaults.textureColor;\n  if (isArrayBuffer(color)) {\n    return color;\n  }\n  return new Uint8Array([color[0] * 255, color[1] * 255, color[2] * 255, color[3] * 255]);\n}\n\n/**\n * Sets filtering or generates mips for texture based on width or height\n * If width or height is not passed in uses `options.width` and//or `options.height`\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @param {number} [width] width of texture\n * @param {number} [height] height of texture\n * @param {number} [internalFormat] The internalFormat parameter from texImage2D etc..\n * @memberOf module:twgl/textures\n */\nfunction setTextureFilteringForSize(gl, tex, options, width, height, internalFormat) {\n  options = options || defaults.textureOptions;\n  internalFormat = internalFormat || RGBA;\n  const target = options.target || TEXTURE_2D;\n  width = width || options.width;\n  height = height || options.height;\n  gl.bindTexture(target, tex);\n  if (canGenerateMipmap(gl, width, height, internalFormat)) {\n    gl.generateMipmap(target);\n  } else {\n    const filtering = canFilter(internalFormat) ? LINEAR : NEAREST;\n    gl.texParameteri(target, TEXTURE_MIN_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_MAG_FILTER, filtering);\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n}\n\nfunction shouldAutomaticallySetTextureFilteringForSize(options) {\n  return options.auto === true || (options.auto === undefined && options.level === undefined);\n}\n\n/**\n * Gets an array of cubemap face enums\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @return {number[]} cubemap face enums\n * @private\n */\nfunction getCubeFaceOrder(gl, options) {\n  options = options || {};\n  return options.cubeFaceOrder || [\n      TEXTURE_CUBE_MAP_POSITIVE_X,\n      TEXTURE_CUBE_MAP_NEGATIVE_X,\n      TEXTURE_CUBE_MAP_POSITIVE_Y,\n      TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      TEXTURE_CUBE_MAP_POSITIVE_Z,\n      TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    ];\n}\n\n/**\n * @typedef {Object} FaceInfo\n * @property {number} face gl enum for texImage2D\n * @property {number} ndx face index (0 - 5) into source data\n * @ignore\n */\n\n/**\n * Gets an array of FaceInfos\n * There's a bug in some NVidia drivers that will crash the driver if\n * `gl.TEXTURE_CUBE_MAP_POSITIVE_X` is not uploaded first. So, we take\n * the user's desired order from his faces to WebGL and make sure we\n * do the faces in WebGL order\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @return {FaceInfo[]} cubemap face infos. Arguably the `face` property of each element is redundant but\n *    it's needed internally to sort the array of `ndx` properties by `face`.\n * @private\n */\nfunction getCubeFacesWithNdx(gl, options) {\n  const faces = getCubeFaceOrder(gl, options);\n  // work around bug in NVidia drivers. We have to upload the first face first else the driver crashes :(\n  const facesWithNdx = faces.map(function(face, ndx) {\n    return { face: face, ndx: ndx };\n  });\n  facesWithNdx.sort(function(a, b) {\n    return a.face - b.face;\n  });\n  return facesWithNdx;\n}\n\n/**\n * Set a texture from the contents of an element. Will also set\n * texture filtering or generate mips based on the dimensions of the element\n * unless `options.auto === false`. If `target === gl.TEXTURE_CUBE_MAP` will\n * attempt to slice image into 1x6, 2x3, 3x2, or 6x1 images, one for each face.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {HTMLElement} element a canvas, img, or video element.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @kind function\n */\nfunction setTextureFromElement(gl, tex, element, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  const level = options.level || 0;\n  let width = element.width;\n  let height = element.height;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // guess the parts\n    const imgWidth  = element.width;\n    const imgHeight = element.height;\n    let size;\n    let slices;\n    if (imgWidth / 6 === imgHeight) {\n      // It's 6x1\n      size = imgHeight;\n      slices = [0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0];\n    } else if (imgHeight / 6 === imgWidth) {\n      // It's 1x6\n      size = imgWidth;\n      slices = [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5];\n    } else if (imgWidth / 3 === imgHeight / 2) {\n      // It's 3x2\n      size = imgWidth / 3;\n      slices = [0, 0, 1, 0, 2, 0, 0, 1, 1, 1, 2, 1];\n    } else if (imgWidth / 2 === imgHeight / 3) {\n      // It's 2x3\n      size = imgWidth / 2;\n      slices = [0, 0, 1, 0, 0, 1, 1, 1, 0, 2, 1, 2];\n    } else {\n      throw \"can't figure out cube map from element: \" + (element.src ? element.src : element.nodeName);\n    }\n    const ctx = getShared2DContext();\n    if (ctx) {\n      ctx.canvas.width = size;\n      ctx.canvas.height = size;\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        ctx.drawImage(element, xOffset, yOffset, size, size, 0, 0, size, size);\n        gl.texImage2D(f.face, level, internalFormat, format, type, ctx.canvas);\n      });\n      // Free up the canvas memory\n      ctx.canvas.width = 1;\n      ctx.canvas.height = 1;\n    } else if (typeof createImageBitmap !== 'undefined') {\n      // NOTE: It seems like we should prefer ImageBitmap because unlike canvas it's\n      // note lossy? (alpha is not premultiplied? although I'm not sure what\n      width = size;\n      height = size;\n      getCubeFacesWithNdx(gl, options).forEach(function(f) {\n        const xOffset = slices[f.ndx * 2 + 0] * size;\n        const yOffset = slices[f.ndx * 2 + 1] * size;\n        // We can't easily use a default texture color here as it would have to match\n        // the type across all faces where as with a 2D one there's only one face\n        // so we're replacing everything all at once. It also has to be the correct size.\n        // On the other hand we need all faces to be the same size so as one face loads\n        // the rest match else the texture will be un-renderable.\n        gl.texImage2D(f.face, level, internalFormat, size, size, 0, format, type, null);\n        createImageBitmap(element, xOffset, yOffset, size, size, {\n          premultiplyAlpha: 'none',\n          colorSpaceConversion: 'none',\n        })\n        .then(function(imageBitmap) {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n          gl.texImage2D(f.face, level, internalFormat, format, type, imageBitmap);\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n          }\n        });\n      });\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    const smallest = Math.min(element.width, element.height);\n    const largest = Math.max(element.width, element.height);\n    const depth = largest / smallest;\n    if (depth % 1 !== 0) {\n      throw \"can not compute 3D dimensions of element\";\n    }\n    const xMult = element.width  === largest ? 1 : 0;\n    const yMult = element.height === largest ? 1 : 0;\n    gl.pixelStorei(UNPACK_ALIGNMENT, 1);\n    gl.pixelStorei(UNPACK_ROW_LENGTH, element.width);\n    gl.pixelStorei(UNPACK_IMAGE_HEIGHT, 0);\n    gl.pixelStorei(UNPACK_SKIP_IMAGES, 0);\n    gl.texImage3D(target, level, internalFormat, smallest, smallest, smallest, 0, format, type, null);\n    for (let d = 0; d < depth; ++d) {\n      const srcX = d * smallest * xMult;\n      const srcY = d * smallest * yMult;\n      gl.pixelStorei(UNPACK_SKIP_PIXELS, srcX);\n      gl.pixelStorei(UNPACK_SKIP_ROWS, srcY);\n      gl.texSubImage3D(target, level, 0, 0, d, smallest, smallest, 1, format, type, element);\n    }\n    setSkipStateToDefault(gl);\n  } else {\n    gl.texImage2D(target, level, internalFormat, format, type, element);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n}\n\nfunction noop() {\n}\n\n/**\n * Checks whether the url's origin is the same so that we can set the `crossOrigin`\n * @param {string} url url to image\n * @returns {boolean} true if the window's origin is the same as image's url\n * @private\n */\nfunction urlIsSameOrigin(url) {\n  if (typeof document !== 'undefined') {\n    // for IE really\n    const a = document.createElement('a');\n    a.href = url;\n    return a.hostname === location.hostname &&\n           a.port     === location.port &&\n           a.protocol === location.protocol;\n  } else {\n    const localOrigin = (new URL(location.href)).origin;\n    const urlOrigin = (new URL(url, location.href)).origin;\n    return urlOrigin === localOrigin;\n  }\n}\n\nfunction setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin) {\n  return crossOrigin === undefined && !urlIsSameOrigin(url)\n     ? 'anonymous'\n     : crossOrigin;\n}\n\n/**\n * Loads an image\n * @param {string} url url to image\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @return {HTMLImageElement} the image being loaded.\n * @private\n */\nfunction loadImage(url, crossOrigin, callback) {\n  callback = callback || noop;\n  let img;\n  crossOrigin = crossOrigin !== undefined ? crossOrigin : defaults.crossOrigin;\n  crossOrigin = setToAnonymousIfUndefinedAndURLIsNotSameOrigin(url, crossOrigin);\n  if (typeof Image !== 'undefined') {\n    img = new Image();\n    if (crossOrigin !== undefined) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    const clearEventHandlers = function clearEventHandlers() {\n      img.removeEventListener('error', onError);  // eslint-disable-line\n      img.removeEventListener('load', onLoad);  // eslint-disable-line\n      img = null;\n    };\n\n    const onError = function onError() {\n      const msg = \"couldn't load image: \" + url;\n      helper.error(msg);\n      callback(msg, img);\n      clearEventHandlers();\n    };\n\n    const onLoad = function onLoad() {\n      callback(null, img);\n      clearEventHandlers();\n    };\n\n    img.addEventListener('error', onError);\n    img.addEventListener('load', onLoad);\n    img.src = url;\n    return img;\n  } else if (typeof ImageBitmap !== 'undefined') {\n    let err;\n    let bm;\n    const cb = function cb() {\n      callback(err, bm);\n    };\n\n    const options = {};\n    if (crossOrigin) {\n      options.mode = 'cors'; // TODO: not sure how to translate image.crossOrigin\n    }\n    fetch(url, options).then(function(response) {\n      if (!response.ok) {\n        throw response;\n      }\n      return response.blob();\n    }).then(function(blob) {\n      return createImageBitmap(blob, {\n        premultiplyAlpha: 'none',\n        colorSpaceConversion: 'none',\n      });\n    }).then(function(bitmap) {\n      // not sure if this works. We don't want\n      // to catch the user's error. So, call\n      // the callback in a timeout so we're\n      // not in this scope inside the promise.\n      bm = bitmap;\n      setTimeout(cb);\n    }).catch(function(e) {\n      err = e;\n      setTimeout(cb);\n    });\n    img = null;\n  }\n  return img;\n}\n\n/**\n * check if object is a TexImageSource\n *\n * @param {Object} obj Object to test\n * @return {boolean} true if object is a TexImageSource\n * @private\n */\nfunction isTexImageSource(obj) {\n  return (typeof ImageBitmap !== 'undefined' && obj instanceof ImageBitmap) ||\n         (typeof ImageData !== 'undefined'  && obj instanceof ImageData) ||\n         (typeof HTMLElement !== 'undefined'  && obj instanceof HTMLElement);\n}\n\n/**\n * if obj is an TexImageSource then just\n * uses it otherwise if obj is a string\n * then load it first.\n *\n * @param {string|TexImageSource} obj\n * @param {string} crossOrigin\n * @param {function(err, img)} [callback] a callback that's passed an error and the image. The error will be non-null\n *     if there was an error\n * @private\n */\nfunction loadAndUseImage(obj, crossOrigin, callback) {\n  if (isTexImageSource(obj)) {\n    setTimeout(function() {\n      callback(null, obj);\n    });\n    return obj;\n  }\n\n  return loadImage(obj, crossOrigin, callback);\n}\n\n/**\n * Sets a texture to a 1x1 pixel color. If `options.color === false` is nothing happens. If it's not set\n * the default texture color is used which can be set by calling `setDefaultTextureColor`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction setTextureTo1PixelColor(gl, tex, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  if (options.color === false) {\n    return;\n  }\n  // Assume it's a URL\n  // Put 1x1 pixels in texture. That makes it renderable immediately regardless of filtering.\n  const color = make1Pixel(options.color);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, 0, RGBA, 1, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n  } else {\n    gl.texImage2D(target, 0, RGBA, 1, 1, 0, RGBA, UNSIGNED_BYTE, color);\n  }\n}\n\n/**\n * The src image(s) used to create a texture.\n *\n * When you call {@link module:twgl.createTexture} or {@link module:twgl.createTextures}\n * you can pass in urls for images to load into the textures. If it's a single url\n * then this will be a single HTMLImageElement. If it's an array of urls used for a cubemap\n * this will be a corresponding array of images for the cubemap.\n *\n * @typedef {HTMLImageElement|HTMLImageElement[]} TextureSrc\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback TextureReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} texture the texture.\n * @param {module:twgl.TextureSrc} source image(s) used to as the src for the texture\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when all images have finished downloading and been uploaded into their respective textures\n * @callback TexturesReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {Object.<string, WebGLTexture>} textures the created textures by name. Same as returned by {@link module:twgl.createTextures}.\n * @param {Object.<string, module:twgl.TextureSrc>} sources the image(s) used for the texture by name.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback CubemapReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each face.\n * @memberOf module:twgl\n */\n\n/**\n * A callback for when an image finished downloading and been uploaded into a texture\n * @callback ThreeDReadyCallback\n * @param {*} err If truthy there was an error.\n * @param {WebGLTexture} tex the texture.\n * @param {HTMLImageElement[]} imgs the images for each slice.\n * @memberOf module:twgl\n */\n\n/**\n * Loads a texture from an image from a Url as specified in `options.src`\n * If `options.color !== false` will set the texture to a 1x1 pixel color so that the texture is\n * immediately useable. It will be updated with the contents of the image once the image has finished\n * downloading. Filtering options will be set as appropriate for image unless `options.auto === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A function to be called when the image has finished loading. err will\n *    be non null if there was an error.\n * @return {HTMLImageElement} the image being downloaded.\n * @memberOf module:twgl/textures\n */\nfunction loadTextureFromUrl(gl, tex, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  const img = loadAndUseImage(options.src, options.crossOrigin, function(err, img) {\n    if (err) {\n      callback(err, tex, img);\n    } else {\n      setTextureFromElement(gl, tex, img, options);\n      callback(null, tex, img);\n    }\n  });\n  return img;\n}\n\n/**\n * Loads a cubemap from 6 urls or TexImageSources as specified in `options.src`. Will set the cubemap to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.CubemapReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadCubemapFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  if (urls.length !== 6) {\n    throw \"there must be 6 urls for a cubemap\";\n  }\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE;\n  const target = options.target || TEXTURE_2D;\n  if (target !== TEXTURE_CUBE_MAP) {\n    throw \"target must be TEXTURE_CUBE_MAP\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = 6;\n  const errors = [];\n  const faces = getCubeFaceOrder(gl, options);\n  let imgs;  // eslint-disable-line\n\n  function uploadImg(faceTarget) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        if (img.width !== img.height) {\n          errors.push(\"cubemap face img is not a square: \" + img.src);\n        } else {\n          setPackState(gl, options);\n          gl.bindTexture(target, tex);\n\n          // So assuming this is the first image we now have one face that's img sized\n          // and 5 faces that are 1x1 pixel so size the other faces\n          if (numToLoad === 5) {\n            // use the default order\n            getCubeFaceOrder(gl).forEach(function(otherTarget) {\n              // Should we re-use the same face or a color?\n              gl.texImage2D(otherTarget, level, internalFormat, format, type, img);\n            });\n          } else {\n            gl.texImage2D(faceTarget, level, internalFormat, format, type, img);\n          }\n\n          if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n            gl.generateMipmap(target);\n          }\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(faces[ndx]));\n  });\n}\n\n/**\n * Loads a 2d array or 3d texture from urls OR TexImageSources as specified in `options.src`.\n * Will set the texture to a 1x1 pixel color\n * so that it is usable immediately unless `option.color === false`.\n *\n * If the width and height is not specified the width and height of the first\n * image loaded will be used. Note that since images are loaded async\n * which image downloads first is unknown.\n *\n * If an image is not the same size as the width and height it will be scaled\n * to that width and height.\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.ThreeDReadyCallback} [callback] A function to be called when all the images have finished loading. err will\n *    be non null if there was an error.\n * @memberOf module:twgl/textures\n * @private\n */\nfunction loadSlicesFromUrls(gl, tex, options, callback) {\n  callback = callback || noop;\n  const urls = options.src;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || UNSIGNED_BYTE;\n  const target = options.target || TEXTURE_2D_ARRAY;\n  if (target !== TEXTURE_3D && target !== TEXTURE_2D_ARRAY) {\n    throw \"target must be TEXTURE_3D or TEXTURE_2D_ARRAY\";\n  }\n  setTextureTo1PixelColor(gl, tex, options);\n  // Because it's async we need to copy the options.\n  options = Object.assign({}, options);\n  let numToLoad = urls.length;\n  const errors = [];\n  let imgs;  // eslint-disable-line\n  const level = options.level || 0;\n  let width = options.width;\n  let height = options.height;\n  const depth = urls.length;\n  let firstImage = true;\n\n  function uploadImg(slice) {\n    return function(err, img) {\n      --numToLoad;\n      if (err) {\n        errors.push(err);\n      } else {\n        setPackState(gl, options);\n        gl.bindTexture(target, tex);\n\n        if (firstImage) {\n          firstImage = false;\n          width = options.width || img.width;\n          height = options.height || img.height;\n          gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n\n          // put it in every slice otherwise some slices will be 0,0,0,0\n          for (let s = 0; s < depth; ++s) {\n            gl.texSubImage3D(target, level, 0, 0, s, width, height, 1, format, type, img);\n          }\n        } else {\n          let src = img;\n          let ctx;\n          if (img.width !== width || img.height !== height) {\n            // Size the image to fix\n            ctx = getShared2DContext();\n            src = ctx.canvas;\n            ctx.canvas.width = width;\n            ctx.canvas.height = height;\n            ctx.drawImage(img, 0, 0, width, height);\n          }\n\n          gl.texSubImage3D(target, level, 0, 0, slice, width, height, 1, format, type, src);\n\n          // free the canvas memory\n          if (ctx && src === ctx.canvas) {\n            ctx.canvas.width = 0;\n            ctx.canvas.height = 0;\n          }\n        }\n\n        if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n          gl.generateMipmap(target);\n        }\n      }\n\n      if (numToLoad === 0) {\n        callback(errors.length ? errors : undefined, tex, imgs);\n      }\n    };\n  }\n\n  imgs = urls.map(function(url, ndx) {\n    return loadAndUseImage(url, options.crossOrigin, uploadImg(ndx));\n  });\n}\n\n/**\n * Sets a texture from an array or typed array. If the width or height is not provided will attempt to\n * guess the size. See {@link module:twgl.TextureOptions}.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {(number[]|ArrayBufferView)} src An array or typed arry with texture data.\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n *   This is often the same options you passed in when you created the texture.\n * @memberOf module:twgl/textures\n */\nfunction setTextureFromArray(gl, tex, src, options) {\n  options = options || defaults.textureOptions;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  let width = options.width;\n  let height = options.height;\n  let depth = options.depth;\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  if (!isArrayBuffer(src)) {\n    const Type = typedArrays.getTypedArrayTypeForGLType(type);\n    src = new Type(src);\n  } else if (src instanceof Uint8ClampedArray) {\n    src = new Uint8Array(src.buffer);\n  }\n\n  const bytesPerElement = getBytesPerElementForInternalFormat(internalFormat, type);\n  const numElements = src.byteLength / bytesPerElement;  // TODO: check UNPACK_ALIGNMENT?\n  if (numElements % 1) {\n    throw \"length wrong size for format: \" + utils.glEnumToString(gl, format);\n  }\n  let dimensions;\n  if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    if (!width && !height && !depth) {\n      const size = Math.cbrt(numElements);\n      if (size % 1 !== 0) {\n        throw \"can't guess cube size of array of numElements: \" + numElements;\n      }\n      width = size;\n      height = size;\n      depth = size;\n    } else if (width && (!height || !depth)) {\n      dimensions = guessDimensions(gl, target, height, depth, numElements / width);\n      height = dimensions.width;\n      depth = dimensions.height;\n    } else if (height && (!width || !depth)) {\n      dimensions = guessDimensions(gl, target, width, depth, numElements / height);\n      width = dimensions.width;\n      depth = dimensions.height;\n    } else {\n      dimensions = guessDimensions(gl, target, width, height, numElements / depth);\n      width = dimensions.width;\n      height = dimensions.height;\n    }\n  } else {\n    dimensions = guessDimensions(gl, target, width, height, numElements);\n    width = dimensions.width;\n    height = dimensions.height;\n  }\n  setSkipStateToDefault(gl);\n  gl.pixelStorei(UNPACK_ALIGNMENT, options.unpackAlignment || 1);\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    const elementsPerElement = bytesPerElement / src.BYTES_PER_ELEMENT;\n    const faceSize = numElements / 6 * elementsPerElement;\n\n    getCubeFacesWithNdx(gl, options).forEach(f => {\n      const offset = faceSize * f.ndx;\n      const data = src.subarray(offset, offset + faceSize);\n      gl.texImage2D(f.face, level, internalFormat, width, height, 0, format, type, data);\n    });\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, src);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, src);\n  }\n  return {\n    width: width,\n    height: height,\n    depth: depth,\n    type: type,\n  };\n}\n\n/**\n * Sets a texture with no contents of a certain size. In other words calls `gl.texImage2D` with `null`.\n * You must set `options.width` and `options.height`.\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the WebGLTexture to set parameters for\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @memberOf module:twgl/textures\n */\nfunction setEmptyTexture(gl, tex, options) {\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  const type = options.type || formatType.type;\n  setPackState(gl, options);\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, options.width, options.height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, options.width, options.height, options.depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, options.width, options.height, 0, format, type, null);\n  }\n}\n\n/**\n * Creates a texture based on the options passed in.\n *\n * Note: may reset UNPACK_ALIGNMENT, UNPACK_ROW_LENGTH, UNPACK_IMAGE_HEIGHT, UNPACK_SKIP_IMAGES\n * UNPACK_SKIP_PIXELS, and UNPACK_SKIP_ROWS\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {module:twgl.TextureOptions} [options] A TextureOptions object with whatever parameters you want set.\n * @param {module:twgl.TextureReadyCallback} [callback] A callback called when an image has been downloaded and uploaded to the texture.\n * @return {WebGLTexture} the created texture.\n * @memberOf module:twgl/textures\n */\nfunction createTexture(gl, options, callback) {\n  callback = callback || noop;\n  options = options || defaults.textureOptions;\n  const tex = gl.createTexture();\n  const target = options.target || TEXTURE_2D;\n  let width  = options.width  || 1;\n  let height = options.height || 1;\n  const internalFormat = options.internalFormat || RGBA;\n  gl.bindTexture(target, tex);\n  if (target === TEXTURE_CUBE_MAP) {\n    // this should have been the default for cubemaps :(\n    gl.texParameteri(target, TEXTURE_WRAP_S, CLAMP_TO_EDGE);\n    gl.texParameteri(target, TEXTURE_WRAP_T, CLAMP_TO_EDGE);\n  }\n  let src = options.src;\n  if (src) {\n    if (typeof src === \"function\") {\n      src = src(gl, options);\n    }\n    if (typeof (src) === \"string\") {\n      loadTextureFromUrl(gl, tex, options, callback);\n    } else if (isArrayBuffer(src) ||\n               (Array.isArray(src) && (\n                    typeof src[0] === 'number' ||\n                    Array.isArray(src[0]) ||\n                    isArrayBuffer(src[0]))\n               )\n              ) {\n      const dimensions = setTextureFromArray(gl, tex, src, options);\n      width  = dimensions.width;\n      height = dimensions.height;\n    } else if (Array.isArray(src) && (typeof (src[0]) === 'string' || isTexImageSource(src[0]))) {\n      if (target === TEXTURE_CUBE_MAP) {\n        loadCubemapFromUrls(gl, tex, options, callback);\n      } else {\n        loadSlicesFromUrls(gl, tex, options, callback);\n      }\n    } else { // if (isTexImageSource(src))\n      setTextureFromElement(gl, tex, src, options);\n      width  = src.width;\n      height = src.height;\n    }\n  } else {\n    setEmptyTexture(gl, tex, options);\n  }\n  if (shouldAutomaticallySetTextureFilteringForSize(options)) {\n    setTextureFilteringForSize(gl, tex, options, width, height, internalFormat);\n  }\n  setTextureParameters(gl, tex, options);\n  return tex;\n}\n\n/**\n * Resizes a texture based on the options passed in.\n *\n * Note: This is not a generic resize anything function.\n * It's mostly used by {@link module:twgl.resizeFramebufferInfo}\n * It will use `options.src` if it exists to try to determine a `type`\n * otherwise it will assume `gl.UNSIGNED_BYTE`. No data is provided\n * for the texture. Texture parameters will be set accordingly\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {WebGLTexture} tex the texture to resize\n * @param {module:twgl.TextureOptions} options A TextureOptions object with whatever parameters you want set.\n * @param {number} [width] the new width. If not passed in will use `options.width`\n * @param {number} [height] the new height. If not passed in will use `options.height`\n * @param {number} [depth] the new depth. If not passed in will use `options.depth`\n * @memberOf module:twgl/textures\n */\nfunction resizeTexture(gl, tex, options, width, height, depth) {\n  width = width || options.width;\n  height = height || options.height;\n  depth = depth || options.depth;\n  const target = options.target || TEXTURE_2D;\n  gl.bindTexture(target, tex);\n  const level = options.level || 0;\n  const internalFormat = options.internalFormat || options.format || RGBA;\n  const formatType = getFormatAndTypeForInternalFormat(internalFormat);\n  const format = options.format || formatType.format;\n  let type;\n  const src = options.src;\n  if (!src) {\n    type = options.type || formatType.type;\n  } else if (isArrayBuffer(src) || (Array.isArray(src) && typeof (src[0]) === 'number')) {\n    type = options.type || getTextureTypeForArrayType(gl, src, formatType.type);\n  } else {\n    type = options.type || formatType.type;\n  }\n  if (target === TEXTURE_CUBE_MAP) {\n    for (let ii = 0; ii < 6; ++ii) {\n      gl.texImage2D(TEXTURE_CUBE_MAP_POSITIVE_X + ii, level, internalFormat, width, height, 0, format, type, null);\n    }\n  } else if (target === TEXTURE_3D || target === TEXTURE_2D_ARRAY) {\n    gl.texImage3D(target, level, internalFormat, width, height, depth, 0, format, type, null);\n  } else {\n    gl.texImage2D(target, level, internalFormat, width, height, 0, format, type, null);\n  }\n}\n\n/**\n * Check if a src is an async request.\n * if src is a string we're going to download an image\n * if src is an array of strings we're going to download cubemap images\n * @param {*} src The src from a TextureOptions\n * @returns {bool} true if src is async.\n * @private\n */\nfunction isAsyncSrc(src) {\n  return typeof src === 'string' ||\n         (Array.isArray(src) && typeof src[0] === 'string');\n}\n\n/**\n * Creates a bunch of textures based on the passed in options.\n *\n * Example:\n *\n *     const textures = twgl.createTextures(gl, {\n *       // a power of 2 image\n *       hftIcon: { src: \"images/hft-icon-16.png\", mag: gl.NEAREST },\n *       // a non-power of 2 image\n *       clover: { src: \"images/clover.jpg\" },\n *       // From a canvas\n *       fromCanvas: { src: ctx.canvas },\n *       // A cubemap from 6 images\n *       yokohama: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: [\n *           'images/yokohama/posx.jpg',\n *           'images/yokohama/negx.jpg',\n *           'images/yokohama/posy.jpg',\n *           'images/yokohama/negy.jpg',\n *           'images/yokohama/posz.jpg',\n *           'images/yokohama/negz.jpg',\n *         ],\n *       },\n *       // A cubemap from 1 image (can be 1x6, 2x3, 3x2, 6x1)\n *       goldengate: {\n *         target: gl.TEXTURE_CUBE_MAP,\n *         src: 'images/goldengate.jpg',\n *       },\n *       // A 2x2 pixel texture from a JavaScript array\n *       checker: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         src: [\n *           255,255,255,255,\n *           192,192,192,255,\n *           192,192,192,255,\n *           255,255,255,255,\n *         ],\n *       },\n *       // a 1x2 pixel texture from a typed array.\n *       stripe: {\n *         mag: gl.NEAREST,\n *         min: gl.LINEAR,\n *         format: gl.LUMINANCE,\n *         src: new Uint8Array([\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *           255,\n *           128,\n *         ]),\n *         width: 1,\n *       },\n *     });\n *\n * Now\n *\n * *   `textures.hftIcon` will be a 2d texture\n * *   `textures.clover` will be a 2d texture\n * *   `textures.fromCanvas` will be a 2d texture\n * *   `textures.yohohama` will be a cubemap texture\n * *   `textures.goldengate` will be a cubemap texture\n * *   `textures.checker` will be a 2d texture\n * *   `textures.stripe` will be a 2d texture\n *\n * @param {WebGLRenderingContext} gl the WebGLRenderingContext\n * @param {Object.<string,module:twgl.TextureOptions>} options A object of TextureOptions one per texture.\n * @param {module:twgl.TexturesReadyCallback} [callback] A callback called when all textures have been downloaded.\n * @return {Object.<string,WebGLTexture>} the created textures by name\n * @memberOf module:twgl/textures\n */\nfunction createTextures(gl, textureOptions, callback) {\n  callback = callback || noop;\n  let numDownloading = 0;\n  const errors = [];\n  const textures = {};\n  const images = {};\n\n  function callCallbackIfReady() {\n    if (numDownloading === 0) {\n      setTimeout(function() {\n        callback(errors.length ? errors : undefined, textures, images);\n      }, 0);\n    }\n  }\n\n  Object.keys(textureOptions).forEach(function(name) {\n    const options = textureOptions[name];\n    let onLoadFn;\n    if (isAsyncSrc(options.src)) {\n      onLoadFn = function(err, tex, img) {\n        images[name] = img;\n        --numDownloading;\n        if (err) {\n          errors.push(err);\n        }\n        callCallbackIfReady();\n      };\n      ++numDownloading;\n    }\n    textures[name] = createTexture(gl, options, onLoadFn);\n  });\n\n  // queue the callback if there are no images to download.\n  // We do this because if your code is structured to wait for\n  // images to download but then you comment out all the async\n  // images your code would break.\n  callCallbackIfReady();\n\n  return textures;\n}\n\nexport {\n  setDefaults as setTextureDefaults_,\n\n  createSampler,\n  createSamplers,\n  setSamplerParameters,\n\n  createTexture,\n  setEmptyTexture,\n  setTextureFromArray,\n  loadTextureFromUrl,\n  setTextureFromElement,\n  setTextureFilteringForSize,\n  setTextureParameters,\n  setDefaultTextureColor,\n  createTextures,\n  resizeTexture,\n\n  canGenerateMipmap,\n  canFilter,\n  getNumComponentsForFormat,\n  getBytesPerElementForInternalFormat,\n  getFormatAndTypeForInternalFormat,\n};\n\n","import * as m4 from './m4.js';\nimport * as v3 from './v3.js';\nimport * as primitives from './primitives.js';\n\nexport * from './twgl.js';\nexport {\n  m4,\n  v3,\n  primitives,\n};\n\n\n\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as attributes from './attributes.js';\nimport * as textures from './textures.js';\nimport * as helper from './helper.js';\nimport * as utils from './utils.js';\n\nimport * as draw from './draw.js';\nimport * as framebuffers from './framebuffers.js';\nimport * as programs from './programs.js';\nimport * as typedarrays from './typedarrays.js';\nimport * as vertexArrays from './vertex-arrays.js';\n\n/**\n * The main TWGL module.\n *\n * For most use cases you shouldn't need anything outside this module.\n * Exceptions between the stuff added to twgl-full (v3, m4, primitives)\n *\n * @module twgl\n * @borrows module:twgl/attributes.setAttribInfoBufferFromArray as setAttribInfoBufferFromArray\n * @borrows module:twgl/attributes.createBufferInfoFromArrays as createBufferInfoFromArrays\n * @borrows module:twgl/attributes.createVertexArrayInfo as createVertexArrayInfo\n * @borrows module:twgl/draw.drawBufferInfo as drawBufferInfo\n * @borrows module:twgl/draw.drawObjectList as drawObjectList\n * @borrows module:twgl/framebuffers.createFramebufferInfo as createFramebufferInfo\n * @borrows module:twgl/framebuffers.resizeFramebufferInfo as resizeFramebufferInfo\n * @borrows module:twgl/framebuffers.bindFramebufferInfo as bindFramebufferInfo\n * @borrows module:twgl/programs.createProgramInfo as createProgramInfo\n * @borrows module:twgl/programs.createUniformBlockInfo as createUniformBlockInfo\n * @borrows module:twgl/programs.bindUniformBlock as bindUniformBlock\n * @borrows module:twgl/programs.setUniformBlock as setUniformBlock\n * @borrows module:twgl/programs.setBlockUniforms as setBlockUniforms\n * @borrows module:twgl/programs.setUniforms as setUniforms\n * @borrows module:twgl/programs.setBuffersAndAttributes as setBuffersAndAttributes\n * @borrows module:twgl/textures.setTextureFromArray as setTextureFromArray\n * @borrows module:twgl/textures.createTexture as createTexture\n * @borrows module:twgl/textures.resizeTexture as resizeTexture\n * @borrows module:twgl/textures.createTextures as createTextures\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\nconst defaults = {\n  addExtensionsToContext: true,\n};\n\n/**\n * Various default settings for twgl.\n *\n * Note: You can call this any number of times. Example:\n *\n *     twgl.setDefaults({ textureColor: [1, 0, 0, 1] });\n *     twgl.setDefaults({ attribPrefix: 'a_' });\n *\n * is equivalent to\n *\n *     twgl.setDefaults({\n *       textureColor: [1, 0, 0, 1],\n *       attribPrefix: 'a_',\n *     });\n *\n * @typedef {Object} Defaults\n * @property {string} [attribPrefix] The prefix to stick on attributes\n *\n *   When writing shaders I prefer to name attributes with `a_`, uniforms with `u_` and varyings with `v_`\n *   as it makes it clear where they came from. But, when building geometry I prefer using un-prefixed names.\n *\n *   In other words I'll create arrays of geometry like this\n *\n *       const arrays = {\n *         position: ...\n *         normal: ...\n *         texcoord: ...\n *       };\n *\n *   But need those mapped to attributes and my attributes start with `a_`.\n *\n *   Default: `\"\"`\n *\n * @property {number[]} [textureColor] Array of 4 values in the range 0 to 1\n *\n *   The default texture color is used when loading textures from\n *   urls. Because the URL will be loaded async we'd like to be\n *   able to use the texture immediately. By putting a 1x1 pixel\n *   color in the texture we can start using the texture before\n *   the URL has loaded.\n *\n *   Default: `[0.5, 0.75, 1, 1]`\n *\n * @property {string} [crossOrigin]\n *\n *   If not undefined sets the crossOrigin attribute on images\n *   that twgl creates when downloading images for textures.\n *\n *   Also see {@link module:twgl.TextureOptions}.\n *\n * @property {bool} [addExtensionsToContext]\n *\n *   If true, then, when twgl will try to add any supported WebGL extensions\n *   directly to the context under their normal GL names. For example\n *   if ANGLE_instances_arrays exists then twgl would enable it,\n *   add the functions `vertexAttribDivisor`, `drawArraysInstanced`,\n *   `drawElementsInstanced`, and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR`\n *   to the `WebGLRenderingContext`.\n *\n * @memberOf module:twgl\n */\n\n/**\n * Sets various defaults for twgl.\n *\n * In the interest of terseness which is kind of the point\n * of twgl I've integrated a few of the older functions here\n *\n * @param {module:twgl.Defaults} newDefaults The default settings.\n * @memberOf module:twgl\n */\nfunction setDefaults(newDefaults) {\n  helper.copyExistingProperties(newDefaults, defaults);\n  attributes.setAttributeDefaults_(newDefaults);  // eslint-disable-line\n  textures.setTextureDefaults_(newDefaults);  // eslint-disable-line\n}\n\nconst prefixRE = /^(.*?)_/;\nfunction addExtensionToContext(gl, extensionName) {\n  utils.glEnumToString(gl, 0);\n  const ext = gl.getExtension(extensionName);\n  if (ext) {\n    const enums = {};\n    const fnSuffix = prefixRE.exec(extensionName)[1];\n    const enumSuffix = '_' + fnSuffix;\n    for (const key in ext) {\n      const value = ext[key];\n      const isFunc = typeof (value) === 'function';\n      const suffix = isFunc ? fnSuffix : enumSuffix;\n      let name = key;\n      // examples of where this is not true are WEBGL_compressed_texture_s3tc\n      // and WEBGL_compressed_texture_pvrtc\n      if (key.endsWith(suffix)) {\n        name = key.substring(0, key.length - suffix.length);\n      }\n      if (gl[name] !== undefined) {\n        if (!isFunc && gl[name] !== value) {\n          helper.warn(name, gl[name], value, key);\n        }\n      } else {\n        if (isFunc) {\n          gl[name] = function(origFn) {\n            return function() {\n              return origFn.apply(ext, arguments);\n            };\n          }(value);\n        } else {\n          gl[name] = value;\n          enums[name] = value;\n        }\n      }\n    }\n    // pass the modified enums to glEnumToString\n    enums.constructor = {\n      name: ext.constructor.name,\n    };\n    utils.glEnumToString(enums, 0);\n  }\n  return ext;\n}\n\n/*\n * If you're wondering why the code doesn't just iterate\n * over all extensions using `gl.getExtensions` is that it's possible\n * some future extension is incompatible with this code. Rather than\n * have thing suddenly break it seems better to manually add to this\n * list.\n *\n */\nconst supportedExtensions = [\n  'ANGLE_instanced_arrays',\n  'EXT_blend_minmax',\n  'EXT_color_buffer_float',\n  'EXT_color_buffer_half_float',\n  'EXT_disjoint_timer_query',\n  'EXT_disjoint_timer_query_webgl2',\n  'EXT_frag_depth',\n  'EXT_sRGB',\n  'EXT_shader_texture_lod',\n  'EXT_texture_filter_anisotropic',\n  'OES_element_index_uint',\n  'OES_standard_derivatives',\n  'OES_texture_float',\n  'OES_texture_float_linear',\n  'OES_texture_half_float',\n  'OES_texture_half_float_linear',\n  'OES_vertex_array_object',\n  'WEBGL_color_buffer_float',\n  'WEBGL_compressed_texture_atc',\n  'WEBGL_compressed_texture_etc1',\n  'WEBGL_compressed_texture_pvrtc',\n  'WEBGL_compressed_texture_s3tc',\n  'WEBGL_compressed_texture_s3tc_srgb',\n  'WEBGL_depth_texture',\n  'WEBGL_draw_buffers',\n];\n\n/**\n * Attempts to enable all of the following extensions\n * and add their functions and constants to the\n * `WebGLRenderingContext` using their normal non-extension like names.\n *\n *      ANGLE_instanced_arrays\n *      EXT_blend_minmax\n *      EXT_color_buffer_float\n *      EXT_color_buffer_half_float\n *      EXT_disjoint_timer_query\n *      EXT_disjoint_timer_query_webgl2\n *      EXT_frag_depth\n *      EXT_sRGB\n *      EXT_shader_texture_lod\n *      EXT_texture_filter_anisotropic\n *      OES_element_index_uint\n *      OES_standard_derivatives\n *      OES_texture_float\n *      OES_texture_float_linear\n *      OES_texture_half_float\n *      OES_texture_half_float_linear\n *      OES_vertex_array_object\n *      WEBGL_color_buffer_float\n *      WEBGL_compressed_texture_atc\n *      WEBGL_compressed_texture_etc1\n *      WEBGL_compressed_texture_pvrtc\n *      WEBGL_compressed_texture_s3tc\n *      WEBGL_compressed_texture_s3tc_srgb\n *      WEBGL_depth_texture\n *      WEBGL_draw_buffers\n *\n * For example if `ANGLE_instanced_arrays` exists then the functions\n * `drawArraysInstanced`, `drawElementsInstanced`, `vertexAttribDivisor`\n * and the constant `VERTEX_ATTRIB_ARRAY_DIVISOR` are added to the\n * `WebGLRenderingContext`.\n *\n * Note that if you want to know if the extension exists you should\n * probably call `gl.getExtension` for each extension. Alternatively\n * you can check for the existence of the functions or constants that\n * are expected to be added. For example\n *\n *    if (gl.drawBuffers) {\n *      // Either WEBGL_draw_buffers was enabled OR you're running in WebGL2\n *      ....\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @memberOf module:twgl\n */\nfunction addExtensionsToContext(gl) {\n  for (let ii = 0; ii < supportedExtensions.length; ++ii) {\n    addExtensionToContext(gl, supportedExtensions[ii]);\n  }\n}\n\n/**\n * Creates a webgl context.\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n * @private\n */\nfunction create3DContext(canvas, opt_attribs) {\n  const names = [\"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL1 context.\n *\n * Note: Will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n * @deprecated\n * @private\n */\nfunction getWebGLContext(canvas, opt_attribs) {\n  const gl = create3DContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Creates a webgl context.\n *\n * Will return a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *     twgl.isWebGL2(gl);\n *\n * @param {HTMLCanvasElement} canvas The canvas tag to get\n *     context from. If one is not passed in one will be\n *     created.\n * @return {WebGLRenderingContext} The created context.\n */\nfunction createContext(canvas, opt_attribs) {\n  const names = [\"webgl2\", \"webgl\", \"experimental-webgl\"];\n  let context = null;\n  for (let ii = 0; ii < names.length; ++ii) {\n    context = canvas.getContext(names[ii], opt_attribs);\n    if (context) {\n      if (defaults.addExtensionsToContext) {\n        addExtensionsToContext(context);\n      }\n      break;\n    }\n  }\n  return context;\n}\n\n/**\n * Gets a WebGL context.  Will create a WebGL2 context if possible.\n *\n * You can check if it's WebGL2 with\n *\n *    function isWebGL2(gl) {\n *      return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0 \") == 0;\n *    }\n *\n * Note: For a WebGL1 context will attempt to enable Vertex Array Objects\n * and add WebGL2 entry points. (unless you first set defaults with\n * `twgl.setDefaults({enableVertexArrayObjects: false})`;\n *\n * @param {HTMLCanvasElement} canvas a canvas element.\n * @param {WebGLContextAttributes} [opt_attribs] optional webgl context creation attributes\n * @return {WebGLRenderingContext} The created context.\n * @memberOf module:twgl\n */\nfunction getContext(canvas, opt_attribs) {\n  const gl = createContext(canvas, opt_attribs);\n  return gl;\n}\n\n/**\n * Resize a canvas to match the size it's displayed.\n * @param {HTMLCanvasElement} canvas The canvas to resize.\n * @param {number} [multiplier] So you can pass in `window.devicePixelRatio` or other scale value if you want to.\n * @return {boolean} true if the canvas was resized.\n * @memberOf module:twgl\n */\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\n  multiplier = multiplier || 1;\n  multiplier = Math.max(0, multiplier);\n  const width  = canvas.clientWidth  * multiplier | 0;\n  const height = canvas.clientHeight * multiplier | 0;\n  if (canvas.width !== width || canvas.height !== height) {\n    canvas.width = width;\n    canvas.height = height;\n    return true;\n  }\n  return false;\n}\n\nexport {\n  addExtensionsToContext,\n  getContext,\n  getWebGLContext,\n  resizeCanvasToDisplaySize,\n  setDefaults,\n\n  attributes,\n  draw,\n  framebuffers,\n  programs,\n  textures,\n  typedarrays,\n  utils,\n  vertexArrays,\n};\n\n// function notPrivate(name) {\n//   return name[name.length - 1] !== '_';\n// }\n//\n// function copyPublicProperties(src, dst) {\n//   Object.keys(src).filter(notPrivate).forEach(function(key) {\n//     dst[key] = src[key];\n//   });\n//   return dst;\n// }\n\nexport * from './attributes.js';\nexport * from './draw.js';\nexport * from './framebuffers.js';\nexport * from './programs.js';\nexport * from './textures.js';\nexport * from './typedarrays.js';\nexport * from './utils.js';\nexport * from './vertex-arrays.js';\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Low level shader typed array related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.typedArray` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/typedArray\n */\n\n// make sure we don't see a global gl\nconst gl = undefined;  /* eslint-disable-line */\n\n/* DataType */\nconst BYTE                           = 0x1400;\nconst UNSIGNED_BYTE                  = 0x1401;\nconst SHORT                          = 0x1402;\nconst UNSIGNED_SHORT                 = 0x1403;\nconst INT                            = 0x1404;\nconst UNSIGNED_INT                   = 0x1405;\nconst FLOAT                          = 0x1406;\nconst UNSIGNED_SHORT_4_4_4_4       = 0x8033;\nconst UNSIGNED_SHORT_5_5_5_1       = 0x8034;\nconst UNSIGNED_SHORT_5_6_5         = 0x8363;\nconst HALF_FLOAT                   = 0x140B;\nconst UNSIGNED_INT_2_10_10_10_REV  = 0x8368;\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;\nconst UNSIGNED_INT_5_9_9_9_REV     = 0x8C3E;\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;\nconst UNSIGNED_INT_24_8            = 0x84FA;\n\nconst glTypeToTypedArray = {};\n{\n  const tt = glTypeToTypedArray;\n  tt[BYTE]                           = Int8Array;\n  tt[UNSIGNED_BYTE]                  = Uint8Array;\n  tt[SHORT]                          = Int16Array;\n  tt[UNSIGNED_SHORT]                 = Uint16Array;\n  tt[INT]                            = Int32Array;\n  tt[UNSIGNED_INT]                   = Uint32Array;\n  tt[FLOAT]                          = Float32Array;\n  tt[UNSIGNED_SHORT_4_4_4_4]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_5_5_1]         = Uint16Array;\n  tt[UNSIGNED_SHORT_5_6_5]           = Uint16Array;\n  tt[HALF_FLOAT]                     = Uint16Array;\n  tt[UNSIGNED_INT_2_10_10_10_REV]    = Uint32Array;\n  tt[UNSIGNED_INT_10F_11F_11F_REV]   = Uint32Array;\n  tt[UNSIGNED_INT_5_9_9_9_REV]       = Uint32Array;\n  tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\n  tt[UNSIGNED_INT_24_8]              = Uint32Array;\n}\n\n/**\n * Get the GL type for a typedArray\n * @param {ArrayBufferView} typedArray a typedArray\n * @return {number} the GL type for array. For example pass in an `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in a `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArray(typedArray) {\n  if (typedArray instanceof Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArray instanceof Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArray instanceof Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArray instanceof Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArray instanceof Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArray instanceof Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArray instanceof Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the GL type for a typedArray type\n * @param {ArrayBufferView} typedArrayType a typedArray constructor\n * @return {number} the GL type for type. For example pass in `Int8Array` and `gl.BYTE` will\n *   be returned. Pass in `Uint32Array` and `gl.UNSIGNED_INT` will be returned\n * @memberOf module:twgl/typedArray\n */\nfunction getGLTypeForTypedArrayType(typedArrayType) {\n  if (typedArrayType === Int8Array)         { return BYTE; }           // eslint-disable-line\n  if (typedArrayType === Uint8Array)        { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Uint8ClampedArray) { return UNSIGNED_BYTE; }  // eslint-disable-line\n  if (typedArrayType === Int16Array)        { return SHORT; }          // eslint-disable-line\n  if (typedArrayType === Uint16Array)       { return UNSIGNED_SHORT; } // eslint-disable-line\n  if (typedArrayType === Int32Array)        { return INT; }            // eslint-disable-line\n  if (typedArrayType === Uint32Array)       { return UNSIGNED_INT; }   // eslint-disable-line\n  if (typedArrayType === Float32Array)      { return FLOAT; }          // eslint-disable-line\n  throw new Error('unsupported typed array type');\n}\n\n/**\n * Get the typed array constructor for a given GL type\n * @param {number} type the GL type. (eg: `gl.UNSIGNED_INT`)\n * @return {function} the constructor for a the corresponding typed array. (eg. `Uint32Array`).\n * @memberOf module:twgl/typedArray\n */\nfunction getTypedArrayTypeForGLType(type) {\n  const CTOR = glTypeToTypedArray[type];\n  if (!CTOR) {\n    throw new Error('unknown gl type');\n  }\n  return CTOR;\n}\n\nconst isArrayBuffer = typeof SharedArrayBuffer !== 'undefined'\n  ? function isArrayBufferOrSharedArrayBuffer(a) {\n    return a && a.buffer && (a.buffer instanceof ArrayBuffer || a.buffer instanceof SharedArrayBuffer);\n  }\n  : function isArrayBuffer(a) {\n    return a && a.buffer && a.buffer instanceof ArrayBuffer;\n  };\n\nexport {\n  getGLTypeForTypedArray,\n  getGLTypeForTypedArrayType,\n  getTypedArrayTypeForGLType,\n  isArrayBuffer,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n * Gets the gl version as a number\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {number} version of gl\n * @private\n */\n//function getVersionAsNumber(gl) {\n//  return parseFloat(gl.getParameter(gl.VERSION).substr(6));\n//}\n\n/**\n * Check if context is WebGL 2.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 2.0\n * @memberOf module:twgl\n */\nfunction isWebGL2(gl) {\n  // This is the correct check but it's slow\n  //  return gl.getParameter(gl.VERSION).indexOf(\"WebGL 2.0\") === 0;\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGL2RenderingContext;\n  return !!gl.texStorage2D;\n}\n\n/**\n * Check if context is WebGL 1.0\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @return {bool} true if it's WebGL 1.0\n * @memberOf module:twgl\n */\nfunction isWebGL1(gl) {\n  // This is the correct check but it's slow\n  // const version = getVersionAsNumber(gl);\n  // return version <= 1.0 && version > 0.0;  // because as of 2016/5 Edge returns 0.96\n  // This might also be the correct check but I'm assuming it's slow-ish\n  // return gl instanceof WebGLRenderingContext;\n  return !gl.texStorage2D;\n}\n\n/**\n * Gets a string for WebGL enum\n *\n * Note: Several enums are the same. Without more\n * context (which function) it's impossible to always\n * give the correct enum. As it is, for matching values\n * it gives all enums. Checking the WebGL2RenderingContext\n * that means\n *\n *      0     = ZERO | POINT | NONE | NO_ERROR\n *      1     = ONE | LINES | SYNC_FLUSH_COMMANDS_BIT\n *      32777 = BLEND_EQUATION_RGB | BLEND_EQUATION_RGB\n *      36662 = COPY_READ_BUFFER | COPY_READ_BUFFER_BINDING\n *      36663 = COPY_WRITE_BUFFER | COPY_WRITE_BUFFER_BINDING\n *      36006 = FRAMEBUFFER_BINDING | DRAW_FRAMEBUFFER_BINDING\n *\n * It's also not useful for bits really unless you pass in individual bits.\n * In other words\n *\n *     const bits = gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT;\n *     twgl.glEnumToString(gl, bits);  // not going to work\n *\n * Note that some enums only exist on extensions. If you\n * want them to show up you need to pass the extension at least\n * once. For example\n *\n *     const ext = gl.getExtension('WEBGL_compressed_texture_s3tc');\n *     if (ext) {\n *        twgl.glEnumToString(ext, 0);  // just prime the function\n *\n *        ..later..\n *\n *        const internalFormat = ext.COMPRESSED_RGB_S3TC_DXT1_EXT;\n *        console.log(twgl.glEnumToString(gl, internalFormat));\n *\n * Notice I didn't have to pass the extension the second time. This means\n * you can have place that generically gets an enum for texture formats for example.\n * and as long as you primed the function with the extensions\n *\n * If you're using `twgl.addExtensionsToContext` to enable your extensions\n * then twgl will automatically get the extension's enums.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext or any extension object\n * @param {number} value the value of the enum you want to look up.\n * @return {string} enum string or hex value\n * @memberOf module:twgl\n * @function glEnumToString\n */\nconst glEnumToString = (function() {\n  const haveEnumsForType = {};\n  const enums = {};\n\n  function addEnums(gl) {\n    const type = gl.constructor.name;\n    if (!haveEnumsForType[type]) {\n      for (const key in gl) {\n        if (typeof gl[key] === 'number') {\n          const existing = enums[gl[key]];\n          enums[gl[key]] = existing ? `${existing} | ${key}` : key;\n        }\n      }\n      haveEnumsForType[type] = true;\n    }\n  }\n\n  return function glEnumToString(gl, value) {\n    addEnums(gl);\n    return enums[value] || (typeof value === 'number' ? `0x${value.toString(16)}` : value);\n  };\n}());\n\nexport {\n  glEnumToString,\n  isWebGL1,\n  isWebGL2,\n};\n\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\n/**\n *\n * Vec3 math math functions.\n *\n * Almost all functions take an optional `dst` argument. If it is not passed in the\n * functions will create a new Vec3. In other words you can do this\n *\n *     var v = v3.cross(v1, v2);  // Creates a new Vec3 with the cross product of v1 x v2.\n *\n * or\n *\n *     var v = v3.create();\n *     v3.cross(v1, v2, v);  // Puts the cross product of v1 x v2 in v\n *\n * The first style is often easier but depending on where it's used it generates garbage where\n * as there is almost never allocation with the second style.\n *\n * It is always save to pass any vector as the destination. So for example\n *\n *     v3.cross(v1, v2, v1);  // Puts the cross product of v1 x v2 in v1\n *\n * @module twgl/v3\n */\n\nlet VecType = Float32Array;\n\n/**\n * A JavaScript array with 3 values or a Float32Array with 3 values.\n * When created by the library will create the default type which is `Float32Array`\n * but can be set by calling {@link module:twgl/v3.setDefaultType}.\n * @typedef {(number[]|Float32Array)} Vec3\n * @memberOf module:twgl/v3\n */\n\n/**\n * Sets the type this library creates for a Vec3\n * @param {constructor} ctor the constructor for the type. Either `Float32Array` or `Array`\n * @return {constructor} previous constructor for Vec3\n * @memberOf module:twgl/v3\n */\nfunction setDefaultType(ctor) {\n  const oldType = VecType;\n  VecType = ctor;\n  return oldType;\n}\n\n/**\n * Creates a vec3; may be called with x, y, z to set initial values.\n * @param {number} [x] Initial x value.\n * @param {number} [y] Initial y value.\n * @param {number} [z] Initial z value.\n * @return {module:twgl/v3.Vec3} the created vector\n * @memberOf module:twgl/v3\n */\nfunction create(x, y, z) {\n  const dst = new VecType(3);\n  if (x) {\n    dst[0] = x;\n  }\n  if (y) {\n    dst[1] = y;\n  }\n  if (z) {\n    dst[2] = z;\n  }\n  return dst;\n}\n\n/**\n * Adds two vectors; assumes a and b have the same dimension.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector tha tis the sum of a and b.\n * @memberOf module:twgl/v3\n */\nfunction add(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + b[0];\n  dst[1] = a[1] + b[1];\n  dst[2] = a[2] + b[2];\n\n  return dst;\n}\n\n/**\n * Subtracts two vectors.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A vector that is the difference of a and b.\n * @memberOf module:twgl/v3\n */\nfunction subtract(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] - b[0];\n  dst[1] = a[1] - b[1];\n  dst[2] = a[2] - b[2];\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {number} t Interpolation coefficient.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerp(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t * (b[0] - a[0]);\n  dst[1] = a[1] + t * (b[1] - a[1]);\n  dst[2] = a[2] + t * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Performs linear interpolation on two vectors.\n * Given vectors a and b and interpolation coefficient vector t, returns\n * a + t * (b - a).\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} t Interpolation coefficients vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} the linear interpolated result.\n * @memberOf module:twgl/v3\n */\nfunction lerpV(a, b, t, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] + t[0] * (b[0] - a[0]);\n  dst[1] = a[1] + t[1] * (b[1] - a[1]);\n  dst[2] = a[2] + t[2] * (b[2] - a[2]);\n\n  return dst;\n}\n\n/**\n * Return max values of two vectors.\n * Given vectors a and b returns\n * [max(a[0], b[0]), max(a[1], b[1]), max(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The max components vector.\n * @memberOf module:twgl/v3\n */\nfunction max(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.max(a[0], b[0]);\n  dst[1] = Math.max(a[1], b[1]);\n  dst[2] = Math.max(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Return min values of two vectors.\n * Given vectors a and b returns\n * [min(a[0], b[0]), min(a[1], b[1]), min(a[2], b[2])].\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The min components vector.\n * @memberOf module:twgl/v3\n */\nfunction min(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = Math.min(a[0], b[0]);\n  dst[1] = Math.min(a[1], b[1]);\n  dst[2] = Math.min(a[2], b[2]);\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction mulScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] * k;\n  dst[1] = v[1] * k;\n  dst[2] = v[2] * k;\n\n  return dst;\n}\n\n/**\n * Divides a vector by a scalar.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {number} k The scalar.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The scaled vector.\n * @memberOf module:twgl/v3\n */\nfunction divScalar(v, k, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0] / k;\n  dst[1] = v[1] / k;\n  dst[2] = v[2] / k;\n\n  return dst;\n}\n\n/**\n * Computes the cross product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of a cross b.\n * @memberOf module:twgl/v3\n */\nfunction cross(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  const t1 = a[2] * b[0] - a[0] * b[2];\n  const t2 = a[0] * b[1] - a[1] * b[0];\n  dst[0] = a[1] * b[2] - a[2] * b[1];\n  dst[1] = t1;\n  dst[2] = t2;\n\n  return dst;\n}\n\n/**\n * Computes the dot product of two vectors; assumes both vectors have\n * three entries.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @return {number} dot product\n * @memberOf module:twgl/v3\n */\nfunction dot(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]) + (a[2] * b[2]);\n}\n\n/**\n * Computes the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} length of vector.\n * @memberOf module:twgl/v3\n */\nfunction length(v) {\n  return Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\n/**\n * Computes the square of the length of vector\n * @param {module:twgl/v3.Vec3} v vector.\n * @return {number} square of the length of vector.\n * @memberOf module:twgl/v3\n */\nfunction lengthSq(v) {\n  return v[0] * v[0] + v[1] * v[1] + v[2] * v[2];\n}\n\n/**\n * Computes the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distance(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n/**\n * Computes the square of the distance between 2 points\n * @param {module:twgl/v3.Vec3} a vector.\n * @param {module:twgl/v3.Vec3} b vector.\n * @return {number} square of the distance between a and b\n * @memberOf module:twgl/v3\n */\nfunction distanceSq(a, b) {\n  const dx = a[0] - b[0];\n  const dy = a[1] - b[1];\n  const dz = a[2] - b[2];\n  return dx * dx + dy * dy + dz * dz;\n}\n\n/**\n * Divides a vector by its Euclidean length and returns the quotient.\n * @param {module:twgl/v3.Vec3} a The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The normalized vector.\n * @memberOf module:twgl/v3\n */\nfunction normalize(a, dst) {\n  dst = dst || new VecType(3);\n\n  const lenSq = a[0] * a[0] + a[1] * a[1] + a[2] * a[2];\n  const len = Math.sqrt(lenSq);\n  if (len > 0.00001) {\n    dst[0] = a[0] / len;\n    dst[1] = a[1] / len;\n    dst[2] = a[2] / len;\n  } else {\n    dst[0] = 0;\n    dst[1] = 0;\n    dst[2] = 0;\n  }\n\n  return dst;\n}\n\n/**\n * Negates a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} -v.\n * @memberOf module:twgl/v3\n */\nfunction negate(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = -v[0];\n  dst[1] = -v[1];\n  dst[2] = -v[2];\n\n  return dst;\n}\n\n/**\n * Copies a vector.\n * @param {module:twgl/v3.Vec3} v The vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} A copy of v.\n * @memberOf module:twgl/v3\n */\nfunction copy(v, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = v[0];\n  dst[1] = v[1];\n  dst[2] = v[2];\n\n  return dst;\n}\n\n/**\n * Multiplies a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of products of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction multiply(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] * b[0];\n  dst[1] = a[1] * b[1];\n  dst[2] = a[2] * b[2];\n\n  return dst;\n}\n\n/**\n * Divides a vector by another vector (component-wise); assumes a and\n * b have the same length.\n * @param {module:twgl/v3.Vec3} a Operand vector.\n * @param {module:twgl/v3.Vec3} b Operand vector.\n * @param {module:twgl/v3.Vec3} [dst] vector to hold result. If not new one is created.\n * @return {module:twgl/v3.Vec3} The vector of quotients of entries of a and\n *     b.\n * @memberOf module:twgl/v3\n */\nfunction divide(a, b, dst) {\n  dst = dst || new VecType(3);\n\n  dst[0] = a[0] / b[0];\n  dst[1] = a[1] / b[1];\n  dst[2] = a[2] / b[2];\n\n  return dst;\n}\n\nexport {\n  add,\n  copy,\n  create,\n  cross,\n  distance,\n  distanceSq,\n  divide,\n  divScalar,\n  dot,\n  lerp,\n  lerpV,\n  length,\n  lengthSq,\n  max,\n  min,\n  mulScalar,\n  multiply,\n  negate,\n  normalize,\n  setDefaultType,\n  subtract,\n};\n\n","/*\n * Copyright 2019 Gregg Tavares\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\n\nimport * as programs from './programs.js';\n\n/**\n * vertex array object related functions\n *\n * You should generally not need to use these functions. They are provided\n * for those cases where you're doing something out of the ordinary\n * and you need lower level access.\n *\n * For backward compatibility they are available at both `twgl.attributes` and `twgl`\n * itself\n *\n * See {@link module:twgl} for core functions\n *\n * @module twgl/vertexArrays\n */\n\nconst ELEMENT_ARRAY_BUFFER           = 0x8893;\n\n/**\n * @typedef {Object} VertexArrayInfo\n * @property {number} numElements The number of elements to pass to `gl.drawArrays` or `gl.drawElements`.\n * @property {number} [elementType] The type of indices `UNSIGNED_BYTE`, `UNSIGNED_SHORT` etc..\n * @property {WebGLVertexArrayObject} [vertexArrayObject] a vertex array object\n * @memberOf module:twgl\n */\n\n/**\n * Creates a VertexArrayInfo from a BufferInfo and one or more ProgramInfos\n *\n * This can be passed to {@link module:twgl.setBuffersAndAttributes} and to\n * {@link module:twgl:drawBufferInfo}.\n *\n * > **IMPORTANT:** Vertex Array Objects are **not** a direct analog for a BufferInfo. Vertex Array Objects\n *   assign buffers to specific attributes at creation time. That means they can only be used with programs\n *   who's attributes use the same attribute locations for the same purposes.\n *\n * > Bind your attribute locations by passing an array of attribute names to {@link module:twgl.createProgramInfo}\n *   or use WebGL 2's GLSL ES 3's `layout(location = <num>)` to make sure locations match.\n *\n * also\n *\n * > **IMPORTANT:** After calling twgl.setBuffersAndAttribute with a BufferInfo that uses a Vertex Array Object\n *   that Vertex Array Object will be bound. That means **ANY MANIPULATION OF ELEMENT_ARRAY_BUFFER or ATTRIBUTES**\n *   will affect the Vertex Array Object state.\n *\n * > Call `gl.bindVertexArray(null)` to get back manipulating the global attributes and ELEMENT_ARRAY_BUFFER.\n *\n * @param {WebGLRenderingContext} gl A WebGLRenderingContext\n * @param {module:twgl.ProgramInfo|module:twgl.ProgramInfo[]} programInfo a programInfo or array of programInfos\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n *\n *    You need to make sure every attribute that will be used is bound. So for example assume shader 1\n *    uses attributes A, B, C and shader 2 uses attributes A, B, D. If you only pass in the programInfo\n *    for shader 1 then only attributes A, B, and C will have their attributes set because TWGL doesn't\n *    now attribute D's location.\n *\n *    So, you can pass in both shader 1 and shader 2's programInfo\n *\n * @return {module:twgl.VertexArrayInfo} The created VertexArrayInfo\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVertexArrayInfo(gl, programInfos, bufferInfo) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  if (!programInfos.length) {\n    programInfos = [programInfos];\n  }\n  programInfos.forEach(function(programInfo) {\n    programs.setBuffersAndAttributes(gl, programInfo, bufferInfo);\n  });\n  gl.bindVertexArray(null);\n  return {\n    numElements: bufferInfo.numElements,\n    elementType: bufferInfo.elementType,\n    vertexArrayObject: vao,\n  };\n}\n\n/**\n * Creates a vertex array object and then sets the attributes on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\n * @param {Object.<string, function>} setters Attribute setters as returned from createAttributeSetters\n * @param {Object.<string, module:twgl.AttribInfo>} attribs AttribInfos mapped by attribute name.\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOAndSetAttributes(gl, setters, attribs, indices) {\n  const vao = gl.createVertexArray();\n  gl.bindVertexArray(vao);\n  programs.setAttributes(setters, attribs);\n  if (indices) {\n    gl.bindBuffer(ELEMENT_ARRAY_BUFFER, indices);\n  }\n  // We unbind this because otherwise any change to ELEMENT_ARRAY_BUFFER\n  // like when creating buffers for other stuff will mess up this VAO's binding\n  gl.bindVertexArray(null);\n  return vao;\n}\n\n/**\n * Creates a vertex array object and then sets the attributes\n * on it\n *\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\n *        to use.\n * @param {Object.<string, function>| module:twgl.ProgramInfo} programInfo as returned from createProgramInfo or Attribute setters as returned from createAttributeSetters\n * @param {module:twgl.BufferInfo} bufferInfo BufferInfo as returned from createBufferInfoFromArrays etc...\n * @param {WebGLBuffer} [indices] an optional ELEMENT_ARRAY_BUFFER of indices\n *\n * @return {WebGLVertexArrayObject|null} The created WebGLVertexArrayObject\n *\n * @memberOf module:twgl/vertexArrays\n */\nfunction createVAOFromBufferInfo(gl, programInfo, bufferInfo) {\n  return createVAOAndSetAttributes(gl, programInfo.attribSetters || programInfo, bufferInfo.attribs, bufferInfo.indices);\n}\n\nexport {\n  createVertexArrayInfo,\n  createVAOAndSetAttributes,\n  createVAOFromBufferInfo,\n};\n\n"],"sourceRoot":""}